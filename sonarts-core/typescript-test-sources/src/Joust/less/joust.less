@import "variables.less";
@import "entities.less";
@import "layout.less";
@import "scrubber.less";
@import "log.less";
@import "loadingscreen.less";
@import "font-awesome/font-awesome.less";
@import "animations.less";

#container {
	width: 100%;
	height: 100%;
}

.game-wrapper {
	width: 100%;
	height: calc(100% - (@scrubber-height + @scrubber-margin-top));
	display: flex;
}

#application {
	height: 100%;
	width: 100%;

	.buttons {
		position: absolute;
		top: 0;
		right: 0;
		font-size: 1.5em;
		font-family: sans-serif;
		padding: 5px;

		a {
			text-decoration: none;
			color: inherit;
			font-weight: bold;

			small {
				display: inline-block;
				font-size: 0.5em;
				vertical-align: middle;
				margin: -5px 3px 0 0;
			}
		}
	}
}

.game {
	position: relative;
	overflow: hidden;
	width: 100%;
	height: 100%;
	font-size: 2vh;
}

.game, #application .buttons {
	-webkit-touch-callout: none;
	user-select: none;
	cursor: default;
}

.player.current {
	background-color: @joust-background-current-player;
	transition: background 0.8s, border-color 0.8s;
}

.player.inactive {
	.short, .tall {
		filter: grayscale(75%) blur(3px);
	}
}

.player.inactive-colored {
	.short, .tall {
		filter: blur(3px);
	}
}

.entity {
	transition: box-shadow 0.15s, transform 0.15s;

	&.minion, &:not(.playable) {
		// box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
	}

	&.target, &.playable.target, &.minion.target {
		filter: drop-shadow(0px 0px 7px rgb(255, 120, 0));
		transform: scale(1.05);
	}

	&.playable {
		filter: drop-shadow(0px -3px 7px rgb(0, 255, 0));
	}

	&.attacking {
		filter: drop-shadow(0px -3px 7px rgb(255, 0, 0));
		transform: scale(1.2);
	}

	&.defending {
		filter: drop-shadow(0px -3px 7px rgb(255, 0, 0));
	}

	&.spellTarget {
		transform: scale(1.05);
		filter: drop-shadow(0px -3px 7px rgb(255, 255, 255));
	}

	&.highlight {
		transform: scale(1.1);
		filter: drop-shadow(0px -3px 7px rgb(255, 255, 255));
	}

	&.triggered {
		.icon-trigger {
			transition: filter 0.15s;
			filter: brightness(150%) drop-shadow(0px -3px 7px rgb(255, 255, 100));
		}
		.icon-inspire {
			transition: filter 0.25s;
			filter: brightness(150%) drop-shadow(0px -3px 7px rgb(100, 200, 255));
		}
		.icon-poisonous {
			transition: filter 0.25s;
			filter: brightness(150%) drop-shadow(0px -3px 7px rgb(100, 255, 100));
		}
	}
}

.endTurnButton.playable > button {
	box-shadow: 0px 0px 10px 1px rgb(255, 255, 0);
}

.endTurnButton.playable.only-option > button {
	box-shadow: 0px 0px 10px 1px rgb(0, 255, 0);
}

.card.dragging {
	visibility: hidden;
}

.card.playable {
	filter: drop-shadow(0px 0px 7px rgb(0, 255, 0));

	&.powered-up {
		filter: drop-shadow(0px 0px 7px rgb(255, 210, 0));
	}

	&.combo {
		filter: drop-shadow(0px 0px 7px rgb(255, 240, 0));
	}
}

.card.evil-glow {
	filter: drop-shadow(0px 0px 7px rgb(255, 100, 40));
}

.card.choose-both {
	filter: drop-shadow(0px 0px 7px rgb(0, 255, 255));
}

.card.shifting {
	opacity: 0.8;
}

.card.draggable {
	cursor: grab;
}

.choices {

	> li {
		height: 65%;
		flex-shrink: 1;
		flex-grow: 0;
		margin: 0 1%;

		.card {
			z-index: 0;
			margin: 0 auto;
		}
	}
}

.cost, .atk, .health, .durability, .armor, .secret-text, .gameresult, .damage, .healing {
	position: absolute;
	display: block;
	width: 20%;
	//height: 20px;
	text-align: center;
	color: white;
	text-shadow: 0px 0px 2px black;
	font-size: 1.2em;
	line-height: 0.95em;
	font-family: @serif-font;
	text-shadow: -1px -1px 0 #000,
		1px -1px 0 #000,
	-1px 1px 0 #000,
	1px 1px 0 #000;
}

.gameresult {
	font-size: 4em;
	z-index: 101;
}

.atk, .health, .durability, .cost {
	&.negative {
		color: #dd0000;
	}
	&.positive {
		color: #29dd4f;
	}
}

.damage, .healing {
	transform: rotate(-15deg);
}

.cost {
	color: white;
}

.stats {
	margin-top: auto;
}

.weapon, .heroPower {
	position: relative;
	height: 100%;
	display: flex;
	flex-direction: column;
}

.endTurnButton {
	position: absolute;
	top: 44%;
	right: 0;
	width: 10%;
	height: 0px;
	text-align: center;

	button {
		margin: 0;
		padding: 0;
		font-size: 1em;
		position: relative;
		z-index: 1000;
		font-family: @serif-font;
	}
}

.no-entity {
	visibility: hidden;
}

div.visuals {
	position: relative;
	img {
		position: absolute;
		pointer-events: none;
	}
}

.equipment {
	.tray {
		font-family: @serif-font;
		background-color: rgba(0, 0, 0, 0.3);

		> span {
			color: white;
			font-size: 0.8em;
			height: 2.5em;
			text-align: center;
			line-height: 2.5em;
			align-self: center;
			text-shadow: -1px -1px 0 #000,
				1px -1px 0 #000,
			-1px 1px 0 #000,
			1px 1px 0 #000;
		}

		.crystal {
			position: relative;
			height: 1.2em;
			width: 1.2em;
			opacity: 1;
			transition: filter 400ms linear, opacity 400ms linear;

			&.full {
				filter: brightness(100%);
			}

			&.empty {
				filter: brightness(50%);
			}

			&.hidden {
				opacity: 0;
			}

			&.locked {
				filter: grayscale(100%);
			}
		}
	}

	.name {
		font-family: @serif-font;
		background-color: rgba(0, 0, 0, 0.3);
		line-height: 1.2em;
		text-align: center;
	}
}

.joust-widget {
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
	overflow: hidden;
	padding: 8px;
}

.game-widget {
	box-sizing: border-box;
	justify-content: space-between;
	color: @joust-foreground;
	background-color: @joust-background;

	*, *:before, *:after {
		box-sizing: inherit;
	}
}

.joust {
	height: 100%;
	width: 100%;
}

.joust-message {
	width: 100%;
	text-align: center;
	font-family: sans-serif;
	margin: auto;
}

.deck {
	color: white;
	font-family: @serif-font;

	&.fatigue {
		figcaption {
			color: #dd0000;
		}

		img {
			filter: grayscale(100%);
		}
	}
}

#joust-quit {
	position: absolute;
	top: 0;
	right: 0;
}

.player {
	border: solid 2px transparent;

	> section:first-of-type {
		border-bottom: solid 1px @joust-player-border-color;
	}

	&.current {
		border-color: @joust-current-player-border-color;

		&> section:first-of-type {
			border-bottom-color: rgb(55, 92, 167);
		}
	}
}

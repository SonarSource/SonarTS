/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"JsonSchema.options": "其他命令選項",
	"JsonSchema.options.cwd": "所執行程式或指令碼的目前工作目錄。如果省略，則會使用 Code 的目前工作區根目錄。",
	"JsonSchema.options.env": "所執行程式或殼層的環境。如果省略，則會使用父處理序的環境。",
	"JsonSchema.shell.executable": "要使用的殼層。",
	"JsonSchema.shell.args": "殼層引數。",
	"JsonSchema.command": "要執行的命令。可以是外部程式或殼層命令。",
	"JsonSchema.tasks.args": "叫用此工作時，傳遞至命令的引數。",
	"JsonSchema.tasks.taskName": "工作的名稱",
	"JsonSchema.tasks.windows": "Windows 特定命令組態",
	"JsonSchema.tasks.mac": "Mac 特定命令組態",
	"JsonSchema.tasks.linux": "Linux 特定命令組態",
	"JsonSchema.tasks.suppressTaskName": "控制是否將工作名稱當做引數加入命令中。如果省略，則會使用全域定義的值。",
	"JsonSchema.tasks.showOutput": "控制是否顯示執行中工作的輸出。如果省略，則會使用全域定義的值。",
	"JsonSchema.echoCommand": "控制是否將執行的命令傳到輸出。預設為 False。",
	"JsonSchema.tasks.watching.deprecation": "已被取代。請改用 isBackground。",
	"JsonSchema.tasks.watching": "執行的工作是否保持運作且正在監看檔案系統。",
	"JsonSchema.tasks.background": "執行的工作是否保持運作且正在背景執行。",
	"JsonSchema.tasks.promptOnClose": "是否在 VS Code 有執行中工作的狀態下關閉時提示使用者。",
	"JsonSchema.tasks.build": "將此工作對應至 Code 的預設建置命令。",
	"JsonSchema.tasks.test": "將此工作對應至 Code 的預設測試命令。",
	"JsonSchema.tasks.matchers": "要使用的問題比對器。可以是字串或問題比對器定義，或是字串和問題比對器陣列。",
	"JsonSchema.args": "傳遞至命令的其他引數。",
	"JsonSchema.showOutput": "控制是否顯示執行中工作的輸出。如果省略，則會使用 [永遠]。",
	"JsonSchema.watching.deprecation": "已被取代。請改用 isBackground。",
	"JsonSchema.watching": "執行的工作是否保持運作且正在監看檔案系統。",
	"JsonSchema.background": "執行的工作是否保持運作且正在背景執行。",
	"JsonSchema.promptOnClose": "是否在 VSCode 以執行中的背景工作關閉時提示使用者。",
	"JsonSchema.suppressTaskName": "控制是否將工作名稱當做引數加入命令中。預設為 False。",
	"JsonSchema.taskSelector": "前置詞，表示引數是工作。",
	"JsonSchema.matchers": "要使用的問題比對器。可以是字串或問題比對器定義，或是字串和問題比對器陣列。",
	"JsonSchema.tasks": "工作組態。這些通常是在外部工作執行器中已定義的工作擴充。"
}
=== tests/cases/compiler/genericAndNonGenericOverload1.ts ===
interface callable2<T> {
>callable2 : Symbol(callable2, Decl(genericAndNonGenericOverload1.ts, 0, 0))
>T : Symbol(T, Decl(genericAndNonGenericOverload1.ts, 0, 20))

    (a: T): T;
>a : Symbol(a, Decl(genericAndNonGenericOverload1.ts, 1, 5))
>T : Symbol(T, Decl(genericAndNonGenericOverload1.ts, 0, 20))
>T : Symbol(T, Decl(genericAndNonGenericOverload1.ts, 0, 20))

    <Z>(a: T): Z;
>Z : Symbol(Z, Decl(genericAndNonGenericOverload1.ts, 2, 5))
>a : Symbol(a, Decl(genericAndNonGenericOverload1.ts, 2, 8))
>T : Symbol(T, Decl(genericAndNonGenericOverload1.ts, 0, 20))
>Z : Symbol(Z, Decl(genericAndNonGenericOverload1.ts, 2, 5))
}
var c2: callable2<number>;
>c2 : Symbol(c2, Decl(genericAndNonGenericOverload1.ts, 4, 3))
>callable2 : Symbol(callable2, Decl(genericAndNonGenericOverload1.ts, 0, 0))

c2<string>(1);
>c2 : Symbol(c2, Decl(genericAndNonGenericOverload1.ts, 4, 3))


=== tests/cases/compiler/overloadOnConstConstraintChecks4.ts ===
class Z { }
>Z : Z

class A extends Z { private x = 1 }
>A : A
>Z : Z
>x : number
>1 : 1

class B extends A {}
>B : B
>A : A

class C extends A {
>C : C
>A : A

    public foo() { }
>foo : () => void
}
function foo(name: 'hi'): B;
>foo : { (name: "hi"): B; (name: "bye"): C; (name: string): A; }
>name : "hi"
>B : B

function foo(name: 'bye'): C;
>foo : { (name: "hi"): B; (name: "bye"): C; (name: string): A; }
>name : "bye"
>C : C

function foo(name: string): A;
>foo : { (name: "hi"): B; (name: "bye"): C; (name: string): A; }
>name : string
>A : A

function foo(name: any): Z {
>foo : { (name: "hi"): B; (name: "bye"): C; (name: string): A; }
>name : any
>Z : Z

    return null;
>null : null
}


=== tests/cases/compiler/narrowingOfDottedNames.ts ===
// Repro from #8383

class A {
>A : Symbol(A, Decl(narrowingOfDottedNames.ts, 0, 0))

    prop: { a: string; };
>prop : Symbol(A.prop, Decl(narrowingOfDottedNames.ts, 2, 9))
>a : Symbol(a, Decl(narrowingOfDottedNames.ts, 3, 11))
}

class B {
>B : Symbol(B, Decl(narrowingOfDottedNames.ts, 4, 1))

    prop: { b: string; }
>prop : Symbol(B.prop, Decl(narrowingOfDottedNames.ts, 6, 9))
>b : Symbol(b, Decl(narrowingOfDottedNames.ts, 7, 11))
}

function isA(x: any): x is A {
>isA : Symbol(isA, Decl(narrowingOfDottedNames.ts, 8, 1))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 10, 13))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 10, 13))
>A : Symbol(A, Decl(narrowingOfDottedNames.ts, 0, 0))

    return x instanceof A;
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 10, 13))
>A : Symbol(A, Decl(narrowingOfDottedNames.ts, 0, 0))
}

function isB(x: any): x is B {
>isB : Symbol(isB, Decl(narrowingOfDottedNames.ts, 12, 1))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 14, 13))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 14, 13))
>B : Symbol(B, Decl(narrowingOfDottedNames.ts, 4, 1))

    return x instanceof B;
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 14, 13))
>B : Symbol(B, Decl(narrowingOfDottedNames.ts, 4, 1))
}

function f1(x: A | B) {
>f1 : Symbol(f1, Decl(narrowingOfDottedNames.ts, 16, 1))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 18, 12))
>A : Symbol(A, Decl(narrowingOfDottedNames.ts, 0, 0))
>B : Symbol(B, Decl(narrowingOfDottedNames.ts, 4, 1))

    while (true) {
        if (x instanceof A) {
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 18, 12))
>A : Symbol(A, Decl(narrowingOfDottedNames.ts, 0, 0))

            x.prop.a;
>x.prop.a : Symbol(a, Decl(narrowingOfDottedNames.ts, 3, 11))
>x.prop : Symbol(A.prop, Decl(narrowingOfDottedNames.ts, 2, 9))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 18, 12))
>prop : Symbol(A.prop, Decl(narrowingOfDottedNames.ts, 2, 9))
>a : Symbol(a, Decl(narrowingOfDottedNames.ts, 3, 11))
        }
        else if (x instanceof B) {
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 18, 12))
>B : Symbol(B, Decl(narrowingOfDottedNames.ts, 4, 1))

            x.prop.b;
>x.prop.b : Symbol(b, Decl(narrowingOfDottedNames.ts, 7, 11))
>x.prop : Symbol(B.prop, Decl(narrowingOfDottedNames.ts, 6, 9))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 18, 12))
>prop : Symbol(B.prop, Decl(narrowingOfDottedNames.ts, 6, 9))
>b : Symbol(b, Decl(narrowingOfDottedNames.ts, 7, 11))
        }
    }
}

function f2(x: A | B) {
>f2 : Symbol(f2, Decl(narrowingOfDottedNames.ts, 27, 1))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 29, 12))
>A : Symbol(A, Decl(narrowingOfDottedNames.ts, 0, 0))
>B : Symbol(B, Decl(narrowingOfDottedNames.ts, 4, 1))

    while (true) {
        if (isA(x)) {
>isA : Symbol(isA, Decl(narrowingOfDottedNames.ts, 8, 1))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 29, 12))

            x.prop.a;
>x.prop.a : Symbol(a, Decl(narrowingOfDottedNames.ts, 3, 11))
>x.prop : Symbol(A.prop, Decl(narrowingOfDottedNames.ts, 2, 9))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 29, 12))
>prop : Symbol(A.prop, Decl(narrowingOfDottedNames.ts, 2, 9))
>a : Symbol(a, Decl(narrowingOfDottedNames.ts, 3, 11))
        }
        else if (isB(x)) {
>isB : Symbol(isB, Decl(narrowingOfDottedNames.ts, 12, 1))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 29, 12))

            x.prop.b;
>x.prop.b : Symbol(b, Decl(narrowingOfDottedNames.ts, 7, 11))
>x.prop : Symbol(B.prop, Decl(narrowingOfDottedNames.ts, 6, 9))
>x : Symbol(x, Decl(narrowingOfDottedNames.ts, 29, 12))
>prop : Symbol(B.prop, Decl(narrowingOfDottedNames.ts, 6, 9))
>b : Symbol(b, Decl(narrowingOfDottedNames.ts, 7, 11))
        }
    }
}


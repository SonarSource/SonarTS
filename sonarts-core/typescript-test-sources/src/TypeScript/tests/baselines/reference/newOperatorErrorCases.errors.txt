tests/cases/conformance/expressions/newOperator/newOperatorErrorCases.ts(26,16): error TS1005: ',' expected.
tests/cases/conformance/expressions/newOperator/newOperatorErrorCases.ts(26,16): error TS2695: Left side of comma operator is unused and has no side effects.
tests/cases/conformance/expressions/newOperator/newOperatorErrorCases.ts(31,23): error TS1005: '(' expected.
tests/cases/conformance/expressions/newOperator/newOperatorErrorCases.ts(36,9): error TS2350: Only a void function can be called with the 'new' keyword.


==== tests/cases/conformance/expressions/newOperator/newOperatorErrorCases.ts (4 errors) ====
    class C0 {
    
    }
    class C1 {
        constructor(n: number, s: string) { }
    }
    
    class T<T> {
        constructor(n?: T) { }
    }
    
    var anyCtor: {
        new (): any;
    };
    
    var anyCtor1: {
        new (n): any;
    };
    
    interface nestedCtor {
        new (): nestedCtor;
    }
    var nestedCtor: nestedCtor;
    
    // Construct expression with no parentheses for construct signature with > 0 parameters
    var b = new C0 32, ''; // Parse error
                   ~~
!!! error TS1005: ',' expected.
                   ~~
!!! error TS2695: Left side of comma operator is unused and has no side effects.
    
    // Generic construct expression with no parentheses
    var c1 = new T;
    var c1: T<{}>;
    var c2 = new T<string>; // Parse error
                          ~
!!! error TS1005: '(' expected.
    
    
    // Construct expression of non-void returning function
    function fnNumber(): number { return 32; }
    var s = new fnNumber(); // Error
            ~~~~~~~~~~~~~~
!!! error TS2350: Only a void function can be called with the 'new' keyword.
    
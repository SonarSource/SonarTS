=== tests/cases/conformance/types/typeRelationships/widenedTypes/strictNullChecksNoWidening.ts ===
var a1 = null;
>a1 : Symbol(a1, Decl(strictNullChecksNoWidening.ts, 0, 3))

var a2 = undefined;
>a2 : Symbol(a2, Decl(strictNullChecksNoWidening.ts, 1, 3))
>undefined : Symbol(undefined)

var a3 = void 0;
>a3 : Symbol(a3, Decl(strictNullChecksNoWidening.ts, 2, 3))

var b1 = [];
>b1 : Symbol(b1, Decl(strictNullChecksNoWidening.ts, 4, 3))

var b2 = [,];
>b2 : Symbol(b2, Decl(strictNullChecksNoWidening.ts, 5, 3))

var b3 = [undefined];
>b3 : Symbol(b3, Decl(strictNullChecksNoWidening.ts, 6, 3))
>undefined : Symbol(undefined)

var b4 = [[], []];
>b4 : Symbol(b4, Decl(strictNullChecksNoWidening.ts, 7, 3))

var b5 = [[], [,]];
>b5 : Symbol(b5, Decl(strictNullChecksNoWidening.ts, 8, 3))

declare function f<T>(x: T): T;
>f : Symbol(f, Decl(strictNullChecksNoWidening.ts, 8, 19))
>T : Symbol(T, Decl(strictNullChecksNoWidening.ts, 10, 19))
>x : Symbol(x, Decl(strictNullChecksNoWidening.ts, 10, 22))
>T : Symbol(T, Decl(strictNullChecksNoWidening.ts, 10, 19))
>T : Symbol(T, Decl(strictNullChecksNoWidening.ts, 10, 19))

var c1 = f(null);
>c1 : Symbol(c1, Decl(strictNullChecksNoWidening.ts, 12, 3))
>f : Symbol(f, Decl(strictNullChecksNoWidening.ts, 8, 19))

var c2 = f(undefined);
>c2 : Symbol(c2, Decl(strictNullChecksNoWidening.ts, 13, 3))
>f : Symbol(f, Decl(strictNullChecksNoWidening.ts, 8, 19))
>undefined : Symbol(undefined)

var c3 = f([]);
>c3 : Symbol(c3, Decl(strictNullChecksNoWidening.ts, 14, 3))
>f : Symbol(f, Decl(strictNullChecksNoWidening.ts, 8, 19))


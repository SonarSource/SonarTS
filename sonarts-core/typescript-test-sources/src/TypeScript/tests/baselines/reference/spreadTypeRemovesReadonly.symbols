=== tests/cases/compiler/spreadTypeRemovesReadonly.ts ===
interface ReadonlyData {
>ReadonlyData : Symbol(ReadonlyData, Decl(spreadTypeRemovesReadonly.ts, 0, 0))

    readonly value: string;
>value : Symbol(ReadonlyData.value, Decl(spreadTypeRemovesReadonly.ts, 0, 24))
}

const data: ReadonlyData = { value: 'foo' };
>data : Symbol(data, Decl(spreadTypeRemovesReadonly.ts, 4, 5))
>ReadonlyData : Symbol(ReadonlyData, Decl(spreadTypeRemovesReadonly.ts, 0, 0))
>value : Symbol(value, Decl(spreadTypeRemovesReadonly.ts, 4, 28))

const clone = { ...data };
>clone : Symbol(clone, Decl(spreadTypeRemovesReadonly.ts, 5, 5))
>data : Symbol(data, Decl(spreadTypeRemovesReadonly.ts, 4, 5))

clone.value = 'bar';
>clone.value : Symbol(value, Decl(spreadTypeRemovesReadonly.ts, 0, 24))
>clone : Symbol(clone, Decl(spreadTypeRemovesReadonly.ts, 5, 5))
>value : Symbol(value, Decl(spreadTypeRemovesReadonly.ts, 0, 24))


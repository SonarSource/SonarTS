=== tests/cases/compiler/letConstMatchingParameterNames.ts ===
let parent = true;
>parent : Symbol(parent, Decl(letConstMatchingParameterNames.ts, 0, 3))

const parent2 = true;
>parent2 : Symbol(parent2, Decl(letConstMatchingParameterNames.ts, 1, 5))

declare function use(a: any);
>use : Symbol(use, Decl(letConstMatchingParameterNames.ts, 1, 21))
>a : Symbol(a, Decl(letConstMatchingParameterNames.ts, 2, 21))

function a() {
>a : Symbol(a, Decl(letConstMatchingParameterNames.ts, 2, 29))
    
    let parent = 1;
>parent : Symbol(parent, Decl(letConstMatchingParameterNames.ts, 6, 7))

    const parent2 = 2;
>parent2 : Symbol(parent2, Decl(letConstMatchingParameterNames.ts, 7, 9))

    function b(parent: string, parent2: number) {
>b : Symbol(b, Decl(letConstMatchingParameterNames.ts, 7, 22))
>parent : Symbol(parent, Decl(letConstMatchingParameterNames.ts, 9, 15))
>parent2 : Symbol(parent2, Decl(letConstMatchingParameterNames.ts, 9, 30))

        use(parent);
>use : Symbol(use, Decl(letConstMatchingParameterNames.ts, 1, 21))
>parent : Symbol(parent, Decl(letConstMatchingParameterNames.ts, 9, 15))

        use(parent2);
>use : Symbol(use, Decl(letConstMatchingParameterNames.ts, 1, 21))
>parent2 : Symbol(parent2, Decl(letConstMatchingParameterNames.ts, 9, 30))
    }
}


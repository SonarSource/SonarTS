=== tests/cases/compiler/declarationEmitExpressionInExtends.ts ===
var x: {
>x : Symbol(x, Decl(declarationEmitExpressionInExtends.ts, 0, 3))

    new<T>(s: any): Q;
>T : Symbol(T, Decl(declarationEmitExpressionInExtends.ts, 1, 8))
>s : Symbol(s, Decl(declarationEmitExpressionInExtends.ts, 1, 11))
>Q : Symbol(Q, Decl(declarationEmitExpressionInExtends.ts, 2, 1))
}

class Q {
>Q : Symbol(Q, Decl(declarationEmitExpressionInExtends.ts, 2, 1))

    s: string;    
>s : Symbol(Q.s, Decl(declarationEmitExpressionInExtends.ts, 4, 9))
}

class B extends x<string> {    
>B : Symbol(B, Decl(declarationEmitExpressionInExtends.ts, 6, 1))
>x : Symbol(x, Decl(declarationEmitExpressionInExtends.ts, 0, 3))
}

var q: B;
>q : Symbol(q, Decl(declarationEmitExpressionInExtends.ts, 11, 3))
>B : Symbol(B, Decl(declarationEmitExpressionInExtends.ts, 6, 1))

q.s;
>q.s : Symbol(Q.s, Decl(declarationEmitExpressionInExtends.ts, 4, 9))
>q : Symbol(q, Decl(declarationEmitExpressionInExtends.ts, 11, 3))
>s : Symbol(Q.s, Decl(declarationEmitExpressionInExtends.ts, 4, 9))


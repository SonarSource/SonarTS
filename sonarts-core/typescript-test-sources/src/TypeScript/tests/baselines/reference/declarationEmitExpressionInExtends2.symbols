=== tests/cases/compiler/declarationEmitExpressionInExtends2.ts ===
class C<T, U> {
>C : Symbol(C, Decl(declarationEmitExpressionInExtends2.ts, 0, 0))
>T : Symbol(T, Decl(declarationEmitExpressionInExtends2.ts, 0, 8))
>U : Symbol(U, Decl(declarationEmitExpressionInExtends2.ts, 0, 10))

    x: T;
>x : Symbol(C.x, Decl(declarationEmitExpressionInExtends2.ts, 0, 15))
>T : Symbol(T, Decl(declarationEmitExpressionInExtends2.ts, 0, 8))

    y: U;
>y : Symbol(C.y, Decl(declarationEmitExpressionInExtends2.ts, 1, 9))
>U : Symbol(U, Decl(declarationEmitExpressionInExtends2.ts, 0, 10))
}

function getClass<T>(c: T) {
>getClass : Symbol(getClass, Decl(declarationEmitExpressionInExtends2.ts, 3, 1))
>T : Symbol(T, Decl(declarationEmitExpressionInExtends2.ts, 5, 18))
>c : Symbol(c, Decl(declarationEmitExpressionInExtends2.ts, 5, 21))
>T : Symbol(T, Decl(declarationEmitExpressionInExtends2.ts, 5, 18))

    return C;
>C : Symbol(C, Decl(declarationEmitExpressionInExtends2.ts, 0, 0))
}

class MyClass extends getClass(2) <string, number> {
>MyClass : Symbol(MyClass, Decl(declarationEmitExpressionInExtends2.ts, 7, 1))
>getClass : Symbol(getClass, Decl(declarationEmitExpressionInExtends2.ts, 3, 1))
}

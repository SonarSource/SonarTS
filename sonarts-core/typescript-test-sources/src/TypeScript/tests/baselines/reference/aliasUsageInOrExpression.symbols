=== tests/cases/compiler/aliasUsageInOrExpression_main.ts ===
import Backbone = require("./aliasUsageInOrExpression_backbone");
>Backbone : Symbol(Backbone, Decl(aliasUsageInOrExpression_main.ts, 0, 0))

import moduleA = require("./aliasUsageInOrExpression_moduleA");
>moduleA : Symbol(moduleA, Decl(aliasUsageInOrExpression_main.ts, 0, 65))

interface IHasVisualizationModel {
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 1, 63))

    VisualizationModel: typeof Backbone.Model;
>VisualizationModel : Symbol(IHasVisualizationModel.VisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 2, 34))
>Backbone.Model : Symbol(Backbone.Model, Decl(aliasUsageInOrExpression_backbone.ts, 0, 0))
>Backbone : Symbol(Backbone, Decl(aliasUsageInOrExpression_main.ts, 0, 0))
>Model : Symbol(Backbone.Model, Decl(aliasUsageInOrExpression_backbone.ts, 0, 0))
}
var i: IHasVisualizationModel;
>i : Symbol(i, Decl(aliasUsageInOrExpression_main.ts, 5, 3))
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 1, 63))

var d1 = i || moduleA;
>d1 : Symbol(d1, Decl(aliasUsageInOrExpression_main.ts, 6, 3))
>i : Symbol(i, Decl(aliasUsageInOrExpression_main.ts, 5, 3))
>moduleA : Symbol(moduleA, Decl(aliasUsageInOrExpression_main.ts, 0, 65))

var d2: IHasVisualizationModel = i || moduleA;
>d2 : Symbol(d2, Decl(aliasUsageInOrExpression_main.ts, 7, 3), Decl(aliasUsageInOrExpression_main.ts, 8, 3))
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 1, 63))
>i : Symbol(i, Decl(aliasUsageInOrExpression_main.ts, 5, 3))
>moduleA : Symbol(moduleA, Decl(aliasUsageInOrExpression_main.ts, 0, 65))

var d2: IHasVisualizationModel = moduleA || i;
>d2 : Symbol(d2, Decl(aliasUsageInOrExpression_main.ts, 7, 3), Decl(aliasUsageInOrExpression_main.ts, 8, 3))
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 1, 63))
>moduleA : Symbol(moduleA, Decl(aliasUsageInOrExpression_main.ts, 0, 65))
>i : Symbol(i, Decl(aliasUsageInOrExpression_main.ts, 5, 3))

var e: { x: IHasVisualizationModel } = <{ x: IHasVisualizationModel }>null || { x: moduleA };
>e : Symbol(e, Decl(aliasUsageInOrExpression_main.ts, 9, 3))
>x : Symbol(x, Decl(aliasUsageInOrExpression_main.ts, 9, 8))
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 1, 63))
>x : Symbol(x, Decl(aliasUsageInOrExpression_main.ts, 9, 41))
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 1, 63))
>x : Symbol(x, Decl(aliasUsageInOrExpression_main.ts, 9, 79))
>moduleA : Symbol(moduleA, Decl(aliasUsageInOrExpression_main.ts, 0, 65))

var f: { x: IHasVisualizationModel } = <{ x: IHasVisualizationModel }>null ? { x: moduleA } : null;
>f : Symbol(f, Decl(aliasUsageInOrExpression_main.ts, 10, 3))
>x : Symbol(x, Decl(aliasUsageInOrExpression_main.ts, 10, 8))
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 1, 63))
>x : Symbol(x, Decl(aliasUsageInOrExpression_main.ts, 10, 41))
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsageInOrExpression_main.ts, 1, 63))
>x : Symbol(x, Decl(aliasUsageInOrExpression_main.ts, 10, 78))
>moduleA : Symbol(moduleA, Decl(aliasUsageInOrExpression_main.ts, 0, 65))

=== tests/cases/compiler/aliasUsageInOrExpression_backbone.ts ===
export class Model {
>Model : Symbol(Model, Decl(aliasUsageInOrExpression_backbone.ts, 0, 0))

    public someData: string;
>someData : Symbol(Model.someData, Decl(aliasUsageInOrExpression_backbone.ts, 0, 20))
}

=== tests/cases/compiler/aliasUsageInOrExpression_moduleA.ts ===
import Backbone = require("./aliasUsageInOrExpression_backbone");
>Backbone : Symbol(Backbone, Decl(aliasUsageInOrExpression_moduleA.ts, 0, 0))

export class VisualizationModel extends Backbone.Model {
>VisualizationModel : Symbol(VisualizationModel, Decl(aliasUsageInOrExpression_moduleA.ts, 0, 65))
>Backbone.Model : Symbol(Backbone.Model, Decl(aliasUsageInOrExpression_backbone.ts, 0, 0))
>Backbone : Symbol(Backbone, Decl(aliasUsageInOrExpression_moduleA.ts, 0, 0))
>Model : Symbol(Backbone.Model, Decl(aliasUsageInOrExpression_backbone.ts, 0, 0))

    // interesting stuff here
}


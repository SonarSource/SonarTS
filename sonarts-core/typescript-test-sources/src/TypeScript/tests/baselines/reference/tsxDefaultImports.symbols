=== tests/cases/compiler/a.ts ===
enum SomeEnum {
>SomeEnum : Symbol(SomeEnum, Decl(a.ts, 0, 0))

  one,
>one : Symbol(SomeEnum.one, Decl(a.ts, 0, 15))
}
export default class SomeClass {
>SomeClass : Symbol(SomeClass, Decl(a.ts, 2, 1))

  public static E = SomeEnum;
>E : Symbol(SomeClass.E, Decl(a.ts, 3, 32))
>SomeEnum : Symbol(SomeEnum, Decl(a.ts, 0, 0))
}

=== tests/cases/compiler/b.ts ===
import {default as Def} from "./a"
>default : Symbol(Def, Decl(b.ts, 0, 8))
>Def : Symbol(Def, Decl(b.ts, 0, 8))

let a = Def.E.one;
>a : Symbol(a, Decl(b.ts, 1, 3))
>Def.E.one : Symbol(SomeEnum.one, Decl(a.ts, 0, 15))
>Def.E : Symbol(Def.E, Decl(a.ts, 3, 32))
>Def : Symbol(Def, Decl(b.ts, 0, 8))
>E : Symbol(Def.E, Decl(a.ts, 3, 32))
>one : Symbol(SomeEnum.one, Decl(a.ts, 0, 15))


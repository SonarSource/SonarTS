=== tests/cases/compiler/unionTypeParameterInference.ts ===
// Regression test for #5861

interface Foo<T> { prop: T; }
>Foo : Symbol(Foo, Decl(unionTypeParameterInference.ts, 0, 0))
>T : Symbol(T, Decl(unionTypeParameterInference.ts, 2, 14))
>prop : Symbol(Foo.prop, Decl(unionTypeParameterInference.ts, 2, 18))
>T : Symbol(T, Decl(unionTypeParameterInference.ts, 2, 14))

declare function lift<U>(value: U | Foo<U>): Foo<U>;
>lift : Symbol(lift, Decl(unionTypeParameterInference.ts, 2, 29))
>U : Symbol(U, Decl(unionTypeParameterInference.ts, 4, 22))
>value : Symbol(value, Decl(unionTypeParameterInference.ts, 4, 25))
>U : Symbol(U, Decl(unionTypeParameterInference.ts, 4, 22))
>Foo : Symbol(Foo, Decl(unionTypeParameterInference.ts, 0, 0))
>U : Symbol(U, Decl(unionTypeParameterInference.ts, 4, 22))
>Foo : Symbol(Foo, Decl(unionTypeParameterInference.ts, 0, 0))
>U : Symbol(U, Decl(unionTypeParameterInference.ts, 4, 22))

function unlift<U>(value: U | Foo<U>): U {
>unlift : Symbol(unlift, Decl(unionTypeParameterInference.ts, 4, 52))
>U : Symbol(U, Decl(unionTypeParameterInference.ts, 6, 16))
>value : Symbol(value, Decl(unionTypeParameterInference.ts, 6, 19))
>U : Symbol(U, Decl(unionTypeParameterInference.ts, 6, 16))
>Foo : Symbol(Foo, Decl(unionTypeParameterInference.ts, 0, 0))
>U : Symbol(U, Decl(unionTypeParameterInference.ts, 6, 16))
>U : Symbol(U, Decl(unionTypeParameterInference.ts, 6, 16))

    return lift(value).prop;
>lift(value).prop : Symbol(Foo.prop, Decl(unionTypeParameterInference.ts, 2, 18))
>lift : Symbol(lift, Decl(unionTypeParameterInference.ts, 2, 29))
>value : Symbol(value, Decl(unionTypeParameterInference.ts, 6, 19))
>prop : Symbol(Foo.prop, Decl(unionTypeParameterInference.ts, 2, 18))
}


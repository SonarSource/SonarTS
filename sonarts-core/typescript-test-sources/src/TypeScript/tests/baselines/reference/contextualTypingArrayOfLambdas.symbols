=== tests/cases/compiler/contextualTypingArrayOfLambdas.ts ===
class A {
>A : Symbol(A, Decl(contextualTypingArrayOfLambdas.ts, 0, 0))

    foo: string;
>foo : Symbol(A.foo, Decl(contextualTypingArrayOfLambdas.ts, 0, 9))
}

class B extends A {
>B : Symbol(B, Decl(contextualTypingArrayOfLambdas.ts, 2, 1))
>A : Symbol(A, Decl(contextualTypingArrayOfLambdas.ts, 0, 0))

    bar: string;
>bar : Symbol(B.bar, Decl(contextualTypingArrayOfLambdas.ts, 4, 19))
}

class C extends A {
>C : Symbol(C, Decl(contextualTypingArrayOfLambdas.ts, 6, 1))
>A : Symbol(A, Decl(contextualTypingArrayOfLambdas.ts, 0, 0))

    baz: string;
>baz : Symbol(C.baz, Decl(contextualTypingArrayOfLambdas.ts, 8, 19))
}

var xs = [(x: A) => { }, (x: B) => { }, (x: C) => { }];
>xs : Symbol(xs, Decl(contextualTypingArrayOfLambdas.ts, 12, 3))
>x : Symbol(x, Decl(contextualTypingArrayOfLambdas.ts, 12, 11))
>A : Symbol(A, Decl(contextualTypingArrayOfLambdas.ts, 0, 0))
>x : Symbol(x, Decl(contextualTypingArrayOfLambdas.ts, 12, 26))
>B : Symbol(B, Decl(contextualTypingArrayOfLambdas.ts, 2, 1))
>x : Symbol(x, Decl(contextualTypingArrayOfLambdas.ts, 12, 41))
>C : Symbol(C, Decl(contextualTypingArrayOfLambdas.ts, 6, 1))


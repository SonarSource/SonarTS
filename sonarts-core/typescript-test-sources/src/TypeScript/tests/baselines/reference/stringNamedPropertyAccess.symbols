=== tests/cases/conformance/types/objectTypeLiteral/propertySignatures/stringNamedPropertyAccess.ts ===
class C {
>C : Symbol(C, Decl(stringNamedPropertyAccess.ts, 0, 0))

    "a b": number;
    static "c d": number;
}
var c: C;
>c : Symbol(c, Decl(stringNamedPropertyAccess.ts, 4, 3))
>C : Symbol(C, Decl(stringNamedPropertyAccess.ts, 0, 0))

var r1 = c["a b"];
>r1 : Symbol(r1, Decl(stringNamedPropertyAccess.ts, 5, 3))
>c : Symbol(c, Decl(stringNamedPropertyAccess.ts, 4, 3))
>"a b" : Symbol(C["a b"], Decl(stringNamedPropertyAccess.ts, 0, 9))

var r1b = C['c d'];
>r1b : Symbol(r1b, Decl(stringNamedPropertyAccess.ts, 6, 3))
>C : Symbol(C, Decl(stringNamedPropertyAccess.ts, 0, 0))
>'c d' : Symbol(C["c d"], Decl(stringNamedPropertyAccess.ts, 1, 18))

interface I {
>I : Symbol(I, Decl(stringNamedPropertyAccess.ts, 6, 19))

    "a b": number;
}
var i: I;
>i : Symbol(i, Decl(stringNamedPropertyAccess.ts, 11, 3))
>I : Symbol(I, Decl(stringNamedPropertyAccess.ts, 6, 19))

var r2 = i["a b"];
>r2 : Symbol(r2, Decl(stringNamedPropertyAccess.ts, 12, 3))
>i : Symbol(i, Decl(stringNamedPropertyAccess.ts, 11, 3))
>"a b" : Symbol(I["a b"], Decl(stringNamedPropertyAccess.ts, 8, 13))

var a: {
>a : Symbol(a, Decl(stringNamedPropertyAccess.ts, 14, 3))

    "a b": number;
}
var r3 = a["a b"];
>r3 : Symbol(r3, Decl(stringNamedPropertyAccess.ts, 17, 3))
>a : Symbol(a, Decl(stringNamedPropertyAccess.ts, 14, 3))
>"a b" : Symbol("a b", Decl(stringNamedPropertyAccess.ts, 14, 8))

var b = {
>b : Symbol(b, Decl(stringNamedPropertyAccess.ts, 19, 3))

    "a b": 1
}
var r4 = b["a b"];
>r4 : Symbol(r4, Decl(stringNamedPropertyAccess.ts, 22, 3))
>b : Symbol(b, Decl(stringNamedPropertyAccess.ts, 19, 3))
>"a b" : Symbol("a b", Decl(stringNamedPropertyAccess.ts, 19, 9))


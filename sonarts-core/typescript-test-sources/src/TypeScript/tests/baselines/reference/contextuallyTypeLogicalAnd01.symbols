=== tests/cases/conformance/types/contextualTypes/logicalAnd/contextuallyTypeLogicalAnd01.ts ===
let x: (a: string) => string;
>x : Symbol(x, Decl(contextuallyTypeLogicalAnd01.ts, 0, 3))
>a : Symbol(a, Decl(contextuallyTypeLogicalAnd01.ts, 0, 8))

let y = true;
>y : Symbol(y, Decl(contextuallyTypeLogicalAnd01.ts, 1, 3))

x = y && (a => a);
>x : Symbol(x, Decl(contextuallyTypeLogicalAnd01.ts, 0, 3))
>y : Symbol(y, Decl(contextuallyTypeLogicalAnd01.ts, 1, 3))
>a : Symbol(a, Decl(contextuallyTypeLogicalAnd01.ts, 3, 10))
>a : Symbol(a, Decl(contextuallyTypeLogicalAnd01.ts, 3, 10))


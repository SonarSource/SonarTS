=== tests/cases/compiler/unusedImportDeclaration_testerA.ts ===
import B = require("./unusedImportDeclaration_testerB");
>B : Symbol(B, Decl(unusedImportDeclaration_testerA.ts, 0, 0))

var thingy: B = {
>thingy : Symbol(thingy, Decl(unusedImportDeclaration_testerA.ts, 1, 3))
>B : Symbol(B, Decl(unusedImportDeclaration_testerA.ts, 0, 0))

    me: "A"
>me : Symbol(me, Decl(unusedImportDeclaration_testerA.ts, 1, 17))

};
declare function foo(a: string): void;
>foo : Symbol(foo, Decl(unusedImportDeclaration_testerA.ts, 3, 2))
>a : Symbol(a, Decl(unusedImportDeclaration_testerA.ts, 4, 21))

foo("IN " + thingy.me + "!");
>foo : Symbol(foo, Decl(unusedImportDeclaration_testerA.ts, 3, 2))
>thingy.me : Symbol(B.me, Decl(unusedImportDeclaration_testerB.ts, 0, 15))
>thingy : Symbol(thingy, Decl(unusedImportDeclaration_testerA.ts, 1, 3))
>me : Symbol(B.me, Decl(unusedImportDeclaration_testerB.ts, 0, 15))

=== tests/cases/compiler/unusedImportDeclaration_testerB.ts ===
class TesterB {
>TesterB : Symbol(TesterB, Decl(unusedImportDeclaration_testerB.ts, 0, 0))

    me: string;
>me : Symbol(TesterB.me, Decl(unusedImportDeclaration_testerB.ts, 0, 15))
}
export = TesterB;
>TesterB : Symbol(TesterB, Decl(unusedImportDeclaration_testerB.ts, 0, 0))


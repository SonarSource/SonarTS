tests/cases/conformance/classes/members/accessibility/privateInstanceMemberAccessibility.ts(5,7): error TS2415: Class 'Derived' incorrectly extends base class 'Base'.
  Property 'foo' is private in type 'Base' but not in type 'Derived'.
tests/cases/conformance/classes/members/accessibility/privateInstanceMemberAccessibility.ts(6,15): error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
tests/cases/conformance/classes/members/accessibility/privateInstanceMemberAccessibility.ts(8,22): error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
tests/cases/conformance/classes/members/accessibility/privateInstanceMemberAccessibility.ts(10,15): error TS1003: Identifier expected.
tests/cases/conformance/classes/members/accessibility/privateInstanceMemberAccessibility.ts(10,21): error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
tests/cases/conformance/classes/members/accessibility/privateInstanceMemberAccessibility.ts(12,12): error TS1005: ';' expected.


==== tests/cases/conformance/classes/members/accessibility/privateInstanceMemberAccessibility.ts (6 errors) ====
    class Base {
        private foo: string;
    }
    
    class Derived extends Base {
          ~~~~~~~
!!! error TS2415: Class 'Derived' incorrectly extends base class 'Base'.
!!! error TS2415:   Property 'foo' is private in type 'Base' but not in type 'Derived'.
        x = super.foo; // error
                  ~~~
!!! error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
        y() {
            return super.foo; // error
                         ~~~
!!! error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
        }
        z: typeof super.foo; // error
                  ~~~~~
!!! error TS1003: Identifier expected.
                        ~~~
!!! error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
    
        a: this.foo; // error
               ~
!!! error TS1005: ';' expected.
    }
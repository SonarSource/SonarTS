=== tests/cases/compiler/targetTypeCalls.ts ===
var fra1: (v:any)=>string = function() { return function (v:string) {return v;}; }() // should work
>fra1 : Symbol(fra1, Decl(targetTypeCalls.ts, 0, 3))
>v : Symbol(v, Decl(targetTypeCalls.ts, 0, 11))
>v : Symbol(v, Decl(targetTypeCalls.ts, 0, 58))
>v : Symbol(v, Decl(targetTypeCalls.ts, 0, 58))

var fra2: (v:any)=>number = function() { return function () { return 0; } }() // should work
>fra2 : Symbol(fra2, Decl(targetTypeCalls.ts, 1, 3))
>v : Symbol(v, Decl(targetTypeCalls.ts, 1, 11))

var fra3: (v:any)=>string = function() { return function() { return function(v) {return v;};}(); }() // should work
>fra3 : Symbol(fra3, Decl(targetTypeCalls.ts, 3, 3))
>v : Symbol(v, Decl(targetTypeCalls.ts, 3, 11))
>v : Symbol(v, Decl(targetTypeCalls.ts, 3, 77))
>v : Symbol(v, Decl(targetTypeCalls.ts, 3, 77))

var fra4: (v:any)=>void = function() { return function() { return function(v) {return v;};}(); }() // should work
>fra4 : Symbol(fra4, Decl(targetTypeCalls.ts, 4, 3))
>v : Symbol(v, Decl(targetTypeCalls.ts, 4, 11))
>v : Symbol(v, Decl(targetTypeCalls.ts, 4, 75))
>v : Symbol(v, Decl(targetTypeCalls.ts, 4, 75))


=== tests/cases/compiler/overloadOnConstInCallback1.ts ===
class C {
>C : Symbol(C, Decl(overloadOnConstInCallback1.ts, 0, 0))

    x1(a: number, callback: (x: 'hi') => number); // error
>x1 : Symbol(C.x1, Decl(overloadOnConstInCallback1.ts, 0, 9), Decl(overloadOnConstInCallback1.ts, 1, 49))
>a : Symbol(a, Decl(overloadOnConstInCallback1.ts, 1, 7))
>callback : Symbol(callback, Decl(overloadOnConstInCallback1.ts, 1, 17))
>x : Symbol(x, Decl(overloadOnConstInCallback1.ts, 1, 29))

    x1(a: number, callback: (x: any) => number) {
>x1 : Symbol(C.x1, Decl(overloadOnConstInCallback1.ts, 0, 9), Decl(overloadOnConstInCallback1.ts, 1, 49))
>a : Symbol(a, Decl(overloadOnConstInCallback1.ts, 2, 7))
>callback : Symbol(callback, Decl(overloadOnConstInCallback1.ts, 2, 17))
>x : Symbol(x, Decl(overloadOnConstInCallback1.ts, 2, 29))

        callback('hi');
>callback : Symbol(callback, Decl(overloadOnConstInCallback1.ts, 2, 17))

        callback('bye');
>callback : Symbol(callback, Decl(overloadOnConstInCallback1.ts, 2, 17))

        var hm = "hm";
>hm : Symbol(hm, Decl(overloadOnConstInCallback1.ts, 5, 11))

        callback(hm);
>callback : Symbol(callback, Decl(overloadOnConstInCallback1.ts, 2, 17))
>hm : Symbol(hm, Decl(overloadOnConstInCallback1.ts, 5, 11))
    }
}

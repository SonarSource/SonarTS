=== tests/cases/conformance/externalModules/foo_1.ts ===
import foo = require("./foo_0");
>foo : Symbol(foo, Decl(foo_1.ts, 0, 0))

var x: foo;
>x : Symbol(x, Decl(foo_1.ts, 1, 3))
>foo : Symbol(foo, Decl(foo_1.ts, 0, 0))

x("test");
>x : Symbol(x, Decl(foo_1.ts, 1, 3))

x(42);
>x : Symbol(x, Decl(foo_1.ts, 1, 3))

var y: string = x.b;
>y : Symbol(y, Decl(foo_1.ts, 4, 3))
>x.b : Symbol(foo.b, Decl(foo_0.ts, 1, 19))
>x : Symbol(x, Decl(foo_1.ts, 1, 3))
>b : Symbol(foo.b, Decl(foo_0.ts, 1, 19))

if(!!x.c){ }
>x.c : Symbol(foo.c, Decl(foo_0.ts, 5, 21))
>x : Symbol(x, Decl(foo_1.ts, 1, 3))
>c : Symbol(foo.c, Decl(foo_0.ts, 5, 21))

var z = {x: 1, y: 2};
>z : Symbol(z, Decl(foo_1.ts, 6, 3))
>x : Symbol(x, Decl(foo_1.ts, 6, 9))
>y : Symbol(y, Decl(foo_1.ts, 6, 14))

z = x.d;
>z : Symbol(z, Decl(foo_1.ts, 6, 3))
>x.d : Symbol(foo.d, Decl(foo_0.ts, 6, 12))
>x : Symbol(x, Decl(foo_1.ts, 1, 3))
>d : Symbol(foo.d, Decl(foo_0.ts, 6, 12))

=== tests/cases/conformance/externalModules/foo_0.ts ===
interface Foo {
>Foo : Symbol(Foo, Decl(foo_0.ts, 0, 0), Decl(foo_0.ts, 3, 1))

	(a: string): void;
>a : Symbol(a, Decl(foo_0.ts, 1, 2))

	b: string;
>b : Symbol(Foo.b, Decl(foo_0.ts, 1, 19))
}
interface Foo {
>Foo : Symbol(Foo, Decl(foo_0.ts, 0, 0), Decl(foo_0.ts, 3, 1))

	(a: number): number;
>a : Symbol(a, Decl(foo_0.ts, 5, 2))

	c: boolean;
>c : Symbol(Foo.c, Decl(foo_0.ts, 5, 21))

	d: {x: number; y: number};
>d : Symbol(Foo.d, Decl(foo_0.ts, 6, 12))
>x : Symbol(x, Decl(foo_0.ts, 7, 5))
>y : Symbol(y, Decl(foo_0.ts, 7, 15))
}
export = Foo;
>Foo : Symbol(Foo, Decl(foo_0.ts, 0, 0), Decl(foo_0.ts, 3, 1))


=== tests/cases/conformance/es6/newTarget/newTarget.es5.ts ===
class A {
>A : Symbol(A, Decl(newTarget.es5.ts, 0, 0))

    constructor() {
        const a = new.target;
>a : Symbol(a, Decl(newTarget.es5.ts, 2, 13))

        const b = () => new.target;
>b : Symbol(b, Decl(newTarget.es5.ts, 3, 13))
    }
    static c = function () { return new.target; }
>c : Symbol(A.c, Decl(newTarget.es5.ts, 4, 5))

    d = function () { return new.target; }
>d : Symbol(A.d, Decl(newTarget.es5.ts, 5, 49))
}

class B extends A {
>B : Symbol(B, Decl(newTarget.es5.ts, 7, 1))
>A : Symbol(A, Decl(newTarget.es5.ts, 0, 0))

    constructor() {
        super();
>super : Symbol(A, Decl(newTarget.es5.ts, 0, 0))

        const e = new.target;
>e : Symbol(e, Decl(newTarget.es5.ts, 12, 13))

        const f = () => new.target;
>f : Symbol(f, Decl(newTarget.es5.ts, 13, 13))
    }
}

function f1() {
>f1 : Symbol(f1, Decl(newTarget.es5.ts, 15, 1))

    const g = new.target;
>g : Symbol(g, Decl(newTarget.es5.ts, 18, 9))

    const h = () => new.target;
>h : Symbol(h, Decl(newTarget.es5.ts, 19, 9))
}

const f2 = function () {
>f2 : Symbol(f2, Decl(newTarget.es5.ts, 22, 5))

    const i = new.target;
>i : Symbol(i, Decl(newTarget.es5.ts, 23, 9))

    const j = () => new.target;
>j : Symbol(j, Decl(newTarget.es5.ts, 24, 9))
}

const O = {
>O : Symbol(O, Decl(newTarget.es5.ts, 27, 5))

    k: function () { return new.target; }
>k : Symbol(k, Decl(newTarget.es5.ts, 27, 11))

};



=== tests/cases/conformance/classes/constructorDeclarations/classConstructorAccessibility4.ts ===
class A {
>A : Symbol(A, Decl(classConstructorAccessibility4.ts, 0, 0))

    private constructor() { }

    method() {
>method : Symbol(A.method, Decl(classConstructorAccessibility4.ts, 1, 29))

        class B {
>B : Symbol(B, Decl(classConstructorAccessibility4.ts, 3, 14))

            method() {
>method : Symbol(B.method, Decl(classConstructorAccessibility4.ts, 4, 17))

                new A(); // OK
>A : Symbol(A, Decl(classConstructorAccessibility4.ts, 0, 0))
            }
        }

        class C extends A { // OK
>C : Symbol(C, Decl(classConstructorAccessibility4.ts, 8, 9))
>A : Symbol(A, Decl(classConstructorAccessibility4.ts, 0, 0))
        }
    }
}

class D {
>D : Symbol(D, Decl(classConstructorAccessibility4.ts, 13, 1))

    protected constructor() { }

    method() {
>method : Symbol(D.method, Decl(classConstructorAccessibility4.ts, 16, 31))

        class E {
>E : Symbol(E, Decl(classConstructorAccessibility4.ts, 18, 14))

            method() {
>method : Symbol(E.method, Decl(classConstructorAccessibility4.ts, 19, 17))

                new D(); // OK
>D : Symbol(D, Decl(classConstructorAccessibility4.ts, 13, 1))
            }
        }

        class F extends D { // OK
>F : Symbol(F, Decl(classConstructorAccessibility4.ts, 23, 9))
>D : Symbol(D, Decl(classConstructorAccessibility4.ts, 13, 1))
        }
    }
}

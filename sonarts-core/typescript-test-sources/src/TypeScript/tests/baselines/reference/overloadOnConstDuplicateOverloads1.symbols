=== tests/cases/compiler/overloadOnConstDuplicateOverloads1.ts ===
function foo(a: 'hi', x: string);
>foo : Symbol(foo, Decl(overloadOnConstDuplicateOverloads1.ts, 0, 0), Decl(overloadOnConstDuplicateOverloads1.ts, 0, 33), Decl(overloadOnConstDuplicateOverloads1.ts, 1, 33))
>a : Symbol(a, Decl(overloadOnConstDuplicateOverloads1.ts, 0, 13))
>x : Symbol(x, Decl(overloadOnConstDuplicateOverloads1.ts, 0, 21))

function foo(a: 'hi', x: string);
>foo : Symbol(foo, Decl(overloadOnConstDuplicateOverloads1.ts, 0, 0), Decl(overloadOnConstDuplicateOverloads1.ts, 0, 33), Decl(overloadOnConstDuplicateOverloads1.ts, 1, 33))
>a : Symbol(a, Decl(overloadOnConstDuplicateOverloads1.ts, 1, 13))
>x : Symbol(x, Decl(overloadOnConstDuplicateOverloads1.ts, 1, 21))

function foo(a: any, x: any) {
>foo : Symbol(foo, Decl(overloadOnConstDuplicateOverloads1.ts, 0, 0), Decl(overloadOnConstDuplicateOverloads1.ts, 0, 33), Decl(overloadOnConstDuplicateOverloads1.ts, 1, 33))
>a : Symbol(a, Decl(overloadOnConstDuplicateOverloads1.ts, 2, 13))
>x : Symbol(x, Decl(overloadOnConstDuplicateOverloads1.ts, 2, 20))
}

function foo2(a: 'hi', x: string);
>foo2 : Symbol(foo2, Decl(overloadOnConstDuplicateOverloads1.ts, 3, 1), Decl(overloadOnConstDuplicateOverloads1.ts, 5, 34), Decl(overloadOnConstDuplicateOverloads1.ts, 6, 34), Decl(overloadOnConstDuplicateOverloads1.ts, 7, 36))
>a : Symbol(a, Decl(overloadOnConstDuplicateOverloads1.ts, 5, 14))
>x : Symbol(x, Decl(overloadOnConstDuplicateOverloads1.ts, 5, 22))

function foo2(a: 'hi', x: string);
>foo2 : Symbol(foo2, Decl(overloadOnConstDuplicateOverloads1.ts, 3, 1), Decl(overloadOnConstDuplicateOverloads1.ts, 5, 34), Decl(overloadOnConstDuplicateOverloads1.ts, 6, 34), Decl(overloadOnConstDuplicateOverloads1.ts, 7, 36))
>a : Symbol(a, Decl(overloadOnConstDuplicateOverloads1.ts, 6, 14))
>x : Symbol(x, Decl(overloadOnConstDuplicateOverloads1.ts, 6, 22))

function foo2(a: string, x: string);
>foo2 : Symbol(foo2, Decl(overloadOnConstDuplicateOverloads1.ts, 3, 1), Decl(overloadOnConstDuplicateOverloads1.ts, 5, 34), Decl(overloadOnConstDuplicateOverloads1.ts, 6, 34), Decl(overloadOnConstDuplicateOverloads1.ts, 7, 36))
>a : Symbol(a, Decl(overloadOnConstDuplicateOverloads1.ts, 7, 14))
>x : Symbol(x, Decl(overloadOnConstDuplicateOverloads1.ts, 7, 24))

function foo2(a: any, x: any) {
>foo2 : Symbol(foo2, Decl(overloadOnConstDuplicateOverloads1.ts, 3, 1), Decl(overloadOnConstDuplicateOverloads1.ts, 5, 34), Decl(overloadOnConstDuplicateOverloads1.ts, 6, 34), Decl(overloadOnConstDuplicateOverloads1.ts, 7, 36))
>a : Symbol(a, Decl(overloadOnConstDuplicateOverloads1.ts, 8, 14))
>x : Symbol(x, Decl(overloadOnConstDuplicateOverloads1.ts, 8, 21))
}

=== tests/cases/compiler/asyncFunctionWithForStatementNoInitializer.ts ===
async function test1() {
>test1 : Symbol(test1, Decl(asyncFunctionWithForStatementNoInitializer.ts, 0, 0))

    let i = 0
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 1, 7))

    let limit = 10
>limit : Symbol(limit, Decl(asyncFunctionWithForStatementNoInitializer.ts, 2, 7))

    for (; i < limit; ++i) {
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 1, 7))
>limit : Symbol(limit, Decl(asyncFunctionWithForStatementNoInitializer.ts, 2, 7))
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 1, 7))
    }
}

async function test2() {
>test2 : Symbol(test2, Decl(asyncFunctionWithForStatementNoInitializer.ts, 5, 1))

    let i = 0
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 8, 7))

    let limit = 10
>limit : Symbol(limit, Decl(asyncFunctionWithForStatementNoInitializer.ts, 9, 7))

    for (i = 1; i < limit; ++i) {
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 8, 7))
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 8, 7))
>limit : Symbol(limit, Decl(asyncFunctionWithForStatementNoInitializer.ts, 9, 7))
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 8, 7))
    }
}

async function test3() {
>test3 : Symbol(test3, Decl(asyncFunctionWithForStatementNoInitializer.ts, 12, 1))

    let i = 0
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 15, 7))

    for (;; ++i) {
>i : Symbol(i, Decl(asyncFunctionWithForStatementNoInitializer.ts, 15, 7))
    }
}

async function test4() {
>test4 : Symbol(test4, Decl(asyncFunctionWithForStatementNoInitializer.ts, 18, 1))

    for (;;) {
    }
}

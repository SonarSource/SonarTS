tests/cases/compiler/chainedCallsWithTypeParameterConstrainedToOtherTypeParameter2.ts(7,43): error TS2345: Argument of type '(ss: S) => T' is not assignable to parameter of type '(x: S) => S'.
  Type 'T' is not assignable to type 'S'.
tests/cases/compiler/chainedCallsWithTypeParameterConstrainedToOtherTypeParameter2.ts(10,29): error TS2345: Argument of type '(ss: S) => T' is not assignable to parameter of type '(x: S) => S'.
  Type 'T' is not assignable to type 'S'.
tests/cases/compiler/chainedCallsWithTypeParameterConstrainedToOtherTypeParameter2.ts(32,9): error TS2322: Type '""' is not assignable to type 'number'.
tests/cases/compiler/chainedCallsWithTypeParameterConstrainedToOtherTypeParameter2.ts(36,9): error TS2322: Type '""' is not assignable to type 'number'.
tests/cases/compiler/chainedCallsWithTypeParameterConstrainedToOtherTypeParameter2.ts(37,9): error TS2322: Type '""' is not assignable to type 'number'.


==== tests/cases/compiler/chainedCallsWithTypeParameterConstrainedToOtherTypeParameter2.ts (5 errors) ====
    class Chain<T> {
        constructor(public value: T) { }
        then<S extends T>(cb: (x: T) => S): Chain<S> {
            var t: T;
            var s: S;
            // Ok to go down the chain, but error to climb up the chain
            (new Chain(t)).then(tt => s).then(ss => t);
                                              ~~~~~~~
!!! error TS2345: Argument of type '(ss: S) => T' is not assignable to parameter of type '(x: S) => S'.
!!! error TS2345:   Type 'T' is not assignable to type 'S'.
    
            // But error to try to climb up the chain
            (new Chain(s)).then(ss => t);
                                ~~~~~~~
!!! error TS2345: Argument of type '(ss: S) => T' is not assignable to parameter of type '(x: S) => S'.
!!! error TS2345:   Type 'T' is not assignable to type 'S'.
    
            // Staying at T or S should be fine
            (new Chain(t)).then(tt => t).then(tt => t).then(tt => t);
            (new Chain(s)).then(ss => s).then(ss => s).then(ss => s);
    
            return null;
        }
    }
    
    // Similar to above, but T is now constrained. Verify that the constraint is maintained across invocations
    interface I {
        x: number;
    }
    class Chain2<T extends I> {
        constructor(public value: T) { }
        then<S extends T>(cb: (x: T) => S): Chain2<S> {
            var i: I;
            var t: T;
            var s: S;
            // Ok to go down the chain, check the constraint at the end.
            // Should get an error that we are assigning a string to a number
            (new Chain2(i)).then(ii => t).then(tt => s).value.x = "";
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type '""' is not assignable to type 'number'.
    
            // Staying at T or S should keep the constraint.
            // Get an error when we assign a string to a number in both cases
            (new Chain2(i)).then(ii => t).then(tt => t).then(tt => t).then(tt => t).value.x = "";
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type '""' is not assignable to type 'number'.
            (new Chain2(i)).then(ii => s).then(ss => s).then(ss => s).then(ss => s).value.x = "";
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type '""' is not assignable to type 'number'.
    
            return null;
        }
    }
=== tests/cases/conformance/expressions/propertyAccess/propertyAccessNumericLiterals.ts ===
0xffffffff.toString();
>0xffffffff.toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))
>toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))

0o01234.toString();
>0o01234.toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))
>toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))

0b01101101.toString();
>0b01101101.toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))
>toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))

1234..toString();
>1234..toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))
>toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))

1e0.toString();
>1e0.toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))
>toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))

000.toString();
>000.toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))
>toString : Symbol(Number.toString, Decl(lib.d.ts, --, --))


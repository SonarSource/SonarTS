=== tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration7ES5iterable.ts ===
interface ISomething {
>ISomething : Symbol(ISomething, Decl(destructuringParameterDeclaration7ES5iterable.ts, 0, 0))

    foo: string,
>foo : Symbol(ISomething.foo, Decl(destructuringParameterDeclaration7ES5iterable.ts, 0, 22))

    bar: string
>bar : Symbol(ISomething.bar, Decl(destructuringParameterDeclaration7ES5iterable.ts, 1, 16))
}

function foo({}, {foo, bar}: ISomething) {}
>foo : Symbol(foo, Decl(destructuringParameterDeclaration7ES5iterable.ts, 3, 1))
>foo : Symbol(foo, Decl(destructuringParameterDeclaration7ES5iterable.ts, 5, 18))
>bar : Symbol(bar, Decl(destructuringParameterDeclaration7ES5iterable.ts, 5, 22))
>ISomething : Symbol(ISomething, Decl(destructuringParameterDeclaration7ES5iterable.ts, 0, 0))

function baz([], {foo, bar}: ISomething) {}
>baz : Symbol(baz, Decl(destructuringParameterDeclaration7ES5iterable.ts, 5, 43))
>foo : Symbol(foo, Decl(destructuringParameterDeclaration7ES5iterable.ts, 7, 18))
>bar : Symbol(bar, Decl(destructuringParameterDeclaration7ES5iterable.ts, 7, 22))
>ISomething : Symbol(ISomething, Decl(destructuringParameterDeclaration7ES5iterable.ts, 0, 0))

function one([], {}) {}
>one : Symbol(one, Decl(destructuringParameterDeclaration7ES5iterable.ts, 7, 43))

function two([], [a, b, c]: number[]) {}
>two : Symbol(two, Decl(destructuringParameterDeclaration7ES5iterable.ts, 9, 23))
>a : Symbol(a, Decl(destructuringParameterDeclaration7ES5iterable.ts, 11, 18))
>b : Symbol(b, Decl(destructuringParameterDeclaration7ES5iterable.ts, 11, 20))
>c : Symbol(c, Decl(destructuringParameterDeclaration7ES5iterable.ts, 11, 23))


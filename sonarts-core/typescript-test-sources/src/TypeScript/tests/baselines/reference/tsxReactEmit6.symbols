=== tests/cases/conformance/jsx/file.tsx ===
declare module JSX {
>JSX : Symbol(JSX, Decl(file.tsx, 0, 0))

	interface Element { }
>Element : Symbol(Element, Decl(file.tsx, 0, 20))

	interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(file.tsx, 1, 22))

		[s: string]: any;
>s : Symbol(s, Decl(file.tsx, 3, 3))
	}
}

=== tests/cases/conformance/jsx/react-consumer.tsx ===
namespace M {
>M : Symbol(M, Decl(react-consumer.tsx, 0, 0), Decl(react-consumer.tsx, 2, 1))

	export var React: any;
>React : Symbol(React, Decl(react-consumer.tsx, 1, 11))
}

namespace M {
>M : Symbol(M, Decl(react-consumer.tsx, 0, 0), Decl(react-consumer.tsx, 2, 1))

	// Should emit M.React.createElement
	//  and M.React.__spread
	var foo: any;
>foo : Symbol(foo, Decl(react-consumer.tsx, 7, 4))

	var spread1 = <div x='' {...foo} y='' />;
>spread1 : Symbol(spread1, Decl(react-consumer.tsx, 8, 4))
>div : Symbol(JSX.IntrinsicElements, Decl(file.tsx, 1, 22))
>x : Symbol(x, Decl(react-consumer.tsx, 8, 19))
>foo : Symbol(foo, Decl(react-consumer.tsx, 7, 4))
>y : Symbol(y, Decl(react-consumer.tsx, 8, 33))

	// Quotes
	var x = <div>This "quote" thing</div>;
>x : Symbol(x, Decl(react-consumer.tsx, 11, 4))
>div : Symbol(JSX.IntrinsicElements, Decl(file.tsx, 1, 22))
>div : Symbol(JSX.IntrinsicElements, Decl(file.tsx, 1, 22))
}



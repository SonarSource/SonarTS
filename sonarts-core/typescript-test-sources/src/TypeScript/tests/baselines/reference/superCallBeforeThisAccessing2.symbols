=== tests/cases/conformance/es6/classDeclaration/superCallBeforeThisAccessing2.ts ===
class Base {
>Base : Symbol(Base, Decl(superCallBeforeThisAccessing2.ts, 0, 0))

    constructor(c) { }
>c : Symbol(c, Decl(superCallBeforeThisAccessing2.ts, 1, 16))
}
class D extends Base {
>D : Symbol(D, Decl(superCallBeforeThisAccessing2.ts, 2, 1))
>Base : Symbol(Base, Decl(superCallBeforeThisAccessing2.ts, 0, 0))

    private _t;
>_t : Symbol(D._t, Decl(superCallBeforeThisAccessing2.ts, 3, 22))

    constructor() {
        super(() => { this._t }); // no error. only check when this is directly accessing in constructor
>super : Symbol(Base, Decl(superCallBeforeThisAccessing2.ts, 0, 0))
>this._t : Symbol(D._t, Decl(superCallBeforeThisAccessing2.ts, 3, 22))
>this : Symbol(D, Decl(superCallBeforeThisAccessing2.ts, 2, 1))
>_t : Symbol(D._t, Decl(superCallBeforeThisAccessing2.ts, 3, 22))
    }
}


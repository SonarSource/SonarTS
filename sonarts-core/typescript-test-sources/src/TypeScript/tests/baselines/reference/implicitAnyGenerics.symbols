=== tests/cases/compiler/implicitAnyGenerics.ts ===
class C<T> {
>C : Symbol(C, Decl(implicitAnyGenerics.ts, 0, 0))
>T : Symbol(T, Decl(implicitAnyGenerics.ts, 0, 8))

    x: T;
>x : Symbol(C.x, Decl(implicitAnyGenerics.ts, 0, 12))
>T : Symbol(T, Decl(implicitAnyGenerics.ts, 0, 8))
}

var c = new C();
>c : Symbol(c, Decl(implicitAnyGenerics.ts, 4, 3))
>C : Symbol(C, Decl(implicitAnyGenerics.ts, 0, 0))

var c2 = new C<any>();
>c2 : Symbol(c2, Decl(implicitAnyGenerics.ts, 5, 3))
>C : Symbol(C, Decl(implicitAnyGenerics.ts, 0, 0))

var c3 = new C<number>();
>c3 : Symbol(c3, Decl(implicitAnyGenerics.ts, 6, 3))
>C : Symbol(C, Decl(implicitAnyGenerics.ts, 0, 0))

var c4: C<any> = new C();
>c4 : Symbol(c4, Decl(implicitAnyGenerics.ts, 7, 3))
>C : Symbol(C, Decl(implicitAnyGenerics.ts, 0, 0))
>C : Symbol(C, Decl(implicitAnyGenerics.ts, 0, 0))

class D<T> {
>D : Symbol(D, Decl(implicitAnyGenerics.ts, 7, 25))
>T : Symbol(T, Decl(implicitAnyGenerics.ts, 9, 8))

    constructor(x: T) { }
>x : Symbol(x, Decl(implicitAnyGenerics.ts, 10, 16))
>T : Symbol(T, Decl(implicitAnyGenerics.ts, 9, 8))
}

var d = new D(null);
>d : Symbol(d, Decl(implicitAnyGenerics.ts, 13, 3))
>D : Symbol(D, Decl(implicitAnyGenerics.ts, 7, 25))

var d2 = new D(1);
>d2 : Symbol(d2, Decl(implicitAnyGenerics.ts, 14, 3))
>D : Symbol(D, Decl(implicitAnyGenerics.ts, 7, 25))

var d3 = new D<any>(1);
>d3 : Symbol(d3, Decl(implicitAnyGenerics.ts, 15, 3))
>D : Symbol(D, Decl(implicitAnyGenerics.ts, 7, 25))

var d4 = new D(<any>1);
>d4 : Symbol(d4, Decl(implicitAnyGenerics.ts, 16, 3))
>D : Symbol(D, Decl(implicitAnyGenerics.ts, 7, 25))

var d5: D<any> = new D(null);
>d5 : Symbol(d5, Decl(implicitAnyGenerics.ts, 17, 3))
>D : Symbol(D, Decl(implicitAnyGenerics.ts, 7, 25))
>D : Symbol(D, Decl(implicitAnyGenerics.ts, 7, 25))

function foo<T>(): T { return null; };
>foo : Symbol(foo, Decl(implicitAnyGenerics.ts, 17, 29))
>T : Symbol(T, Decl(implicitAnyGenerics.ts, 19, 13))
>T : Symbol(T, Decl(implicitAnyGenerics.ts, 19, 13))

foo() 
>foo : Symbol(foo, Decl(implicitAnyGenerics.ts, 17, 29))

foo<any>();
>foo : Symbol(foo, Decl(implicitAnyGenerics.ts, 17, 29))


    

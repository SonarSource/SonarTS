=== tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignatures2.ts ===
// some complex cases of assignment compat of generic signatures. No contextual signature instantiation

interface A {
>A : Symbol(A, Decl(assignmentCompatWithGenericCallSignatures2.ts, 0, 0))

    <T>(x: T, ...y: T[][]): void
>T : Symbol(T, Decl(assignmentCompatWithGenericCallSignatures2.ts, 3, 5))
>x : Symbol(x, Decl(assignmentCompatWithGenericCallSignatures2.ts, 3, 8))
>T : Symbol(T, Decl(assignmentCompatWithGenericCallSignatures2.ts, 3, 5))
>y : Symbol(y, Decl(assignmentCompatWithGenericCallSignatures2.ts, 3, 13))
>T : Symbol(T, Decl(assignmentCompatWithGenericCallSignatures2.ts, 3, 5))
}

interface B {
>B : Symbol(B, Decl(assignmentCompatWithGenericCallSignatures2.ts, 4, 1))

    <S>(x: S, ...y: S[]): void
>S : Symbol(S, Decl(assignmentCompatWithGenericCallSignatures2.ts, 7, 5))
>x : Symbol(x, Decl(assignmentCompatWithGenericCallSignatures2.ts, 7, 8))
>S : Symbol(S, Decl(assignmentCompatWithGenericCallSignatures2.ts, 7, 5))
>y : Symbol(y, Decl(assignmentCompatWithGenericCallSignatures2.ts, 7, 13))
>S : Symbol(S, Decl(assignmentCompatWithGenericCallSignatures2.ts, 7, 5))
}

var a: A;
>a : Symbol(a, Decl(assignmentCompatWithGenericCallSignatures2.ts, 10, 3))
>A : Symbol(A, Decl(assignmentCompatWithGenericCallSignatures2.ts, 0, 0))

var b: B;
>b : Symbol(b, Decl(assignmentCompatWithGenericCallSignatures2.ts, 11, 3))
>B : Symbol(B, Decl(assignmentCompatWithGenericCallSignatures2.ts, 4, 1))

// Both ok
a = b;
>a : Symbol(a, Decl(assignmentCompatWithGenericCallSignatures2.ts, 10, 3))
>b : Symbol(b, Decl(assignmentCompatWithGenericCallSignatures2.ts, 11, 3))

b = a;
>b : Symbol(b, Decl(assignmentCompatWithGenericCallSignatures2.ts, 11, 3))
>a : Symbol(a, Decl(assignmentCompatWithGenericCallSignatures2.ts, 10, 3))


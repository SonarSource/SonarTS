=== tests/cases/conformance/enums/enumConstantMembers.ts ===
// Constant members allow negatives, but not decimals. Also hex literals are allowed
enum E1 {
>E1 : Symbol(E1, Decl(enumConstantMembers.ts, 0, 0))

    a = 1,
>a : Symbol(E1.a, Decl(enumConstantMembers.ts, 1, 9))

    b
>b : Symbol(E1.b, Decl(enumConstantMembers.ts, 2, 10))
}
enum E2 {
>E2 : Symbol(E2, Decl(enumConstantMembers.ts, 4, 1))

    a = - 1,
>a : Symbol(E2.a, Decl(enumConstantMembers.ts, 5, 9))

    b
>b : Symbol(E2.b, Decl(enumConstantMembers.ts, 6, 12))
}
enum E3 {
>E3 : Symbol(E3, Decl(enumConstantMembers.ts, 8, 1))

    a = 0.1,
>a : Symbol(E3.a, Decl(enumConstantMembers.ts, 9, 9))

    b // Error because 0.1 is not a constant
>b : Symbol(E3.b, Decl(enumConstantMembers.ts, 10, 12))
}

declare enum E4 {
>E4 : Symbol(E4, Decl(enumConstantMembers.ts, 12, 1))

    a = 1,
>a : Symbol(E4.a, Decl(enumConstantMembers.ts, 14, 17))

    b = -1,
>b : Symbol(E4.b, Decl(enumConstantMembers.ts, 15, 10))

    c = 0.1 // Not a constant
>c : Symbol(E4.c, Decl(enumConstantMembers.ts, 16, 11))
}

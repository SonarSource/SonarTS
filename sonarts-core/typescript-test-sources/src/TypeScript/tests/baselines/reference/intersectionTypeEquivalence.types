=== tests/cases/conformance/types/intersection/intersectionTypeEquivalence.ts ===
interface A { a: string }
>A : A
>a : string

interface B { b: string }
>B : B
>b : string

interface C { c: string }
>C : C
>c : string

// A & B is equivalent to B & A.
var y: A & B;
>y : A & B
>A : A
>B : B

var y : B & A;
>y : A & B
>B : B
>A : A

// AB & C is equivalent to A & BC, where AB is A & B and BC is B & C.
var z : A & B & C;
>z : A & B & C
>A : A
>B : B
>C : C

var z : (A & B) & C;
>z : A & B & C
>A : A
>B : B
>C : C

var z : A & (B & C);
>z : A & B & C
>A : A
>B : B
>C : C

var ab : A & B;
>ab : A & B
>A : A
>B : B

var bc : B & C;
>bc : B & C
>B : B
>C : C

var z1: typeof ab & C;
>z1 : A & B & C
>ab : A & B
>C : C

var z1: A & typeof bc;
>z1 : A & B & C
>A : A
>bc : B & C


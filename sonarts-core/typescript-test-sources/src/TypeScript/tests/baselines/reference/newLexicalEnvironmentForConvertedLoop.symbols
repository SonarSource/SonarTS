=== tests/cases/compiler/newLexicalEnvironmentForConvertedLoop.ts ===
function baz(x: any) {
>baz : Symbol(baz, Decl(newLexicalEnvironmentForConvertedLoop.ts, 0, 0))
>x : Symbol(x, Decl(newLexicalEnvironmentForConvertedLoop.ts, 0, 13))

  return [[x, x]];
>x : Symbol(x, Decl(newLexicalEnvironmentForConvertedLoop.ts, 0, 13))
>x : Symbol(x, Decl(newLexicalEnvironmentForConvertedLoop.ts, 0, 13))
}

function foo(set: any) {
>foo : Symbol(foo, Decl(newLexicalEnvironmentForConvertedLoop.ts, 2, 1))
>set : Symbol(set, Decl(newLexicalEnvironmentForConvertedLoop.ts, 4, 13))

  for (const [value, i] of baz(set.values)) {
>value : Symbol(value, Decl(newLexicalEnvironmentForConvertedLoop.ts, 5, 14))
>i : Symbol(i, Decl(newLexicalEnvironmentForConvertedLoop.ts, 5, 20))
>baz : Symbol(baz, Decl(newLexicalEnvironmentForConvertedLoop.ts, 0, 0))
>set : Symbol(set, Decl(newLexicalEnvironmentForConvertedLoop.ts, 4, 13))

    const bar: any = [];
>bar : Symbol(bar, Decl(newLexicalEnvironmentForConvertedLoop.ts, 6, 9))

    (() => bar);
>bar : Symbol(bar, Decl(newLexicalEnvironmentForConvertedLoop.ts, 6, 9))

    set.values.push(...[]);
>set : Symbol(set, Decl(newLexicalEnvironmentForConvertedLoop.ts, 4, 13))
  }
};

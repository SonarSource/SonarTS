=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : Symbol(React, Decl(file.tsx, 0, 0))

interface IUser {
>IUser : Symbol(IUser, Decl(file.tsx, 0, 32))

    Name: string;
>Name : Symbol(IUser.Name, Decl(file.tsx, 2, 17))
}

interface IFetchUserProps {
>IFetchUserProps : Symbol(IFetchUserProps, Decl(file.tsx, 4, 1))

    children: (user: IUser) => JSX.Element;
>children : Symbol(IFetchUserProps.children, Decl(file.tsx, 6, 27))
>user : Symbol(user, Decl(file.tsx, 7, 15))
>IUser : Symbol(IUser, Decl(file.tsx, 0, 32))
>JSX : Symbol(JSX, Decl(react.d.ts, 2352, 1))
>Element : Symbol(JSX.Element, Decl(react.d.ts, 2355, 27))
}

class FetchUser extends React.Component<IFetchUserProps, any> {
>FetchUser : Symbol(FetchUser, Decl(file.tsx, 8, 1))
>React.Component : Symbol(React.Component, Decl(react.d.ts, 158, 55))
>React : Symbol(React, Decl(file.tsx, 0, 0))
>Component : Symbol(React.Component, Decl(react.d.ts, 158, 55))
>IFetchUserProps : Symbol(IFetchUserProps, Decl(file.tsx, 4, 1))

    render() {
>render : Symbol(FetchUser.render, Decl(file.tsx, 10, 63))

        return this.state
>this.state : Symbol(React.Component.state, Decl(react.d.ts, 173, 44))
>this : Symbol(FetchUser, Decl(file.tsx, 8, 1))
>state : Symbol(React.Component.state, Decl(react.d.ts, 173, 44))

            ? this.props.children(this.state.result)
>this.props.children : Symbol(children, Decl(file.tsx, 6, 27), Decl(react.d.ts, 173, 20))
>this.props : Symbol(React.Component.props, Decl(react.d.ts, 166, 37))
>this : Symbol(FetchUser, Decl(file.tsx, 8, 1))
>props : Symbol(React.Component.props, Decl(react.d.ts, 166, 37))
>children : Symbol(children, Decl(file.tsx, 6, 27), Decl(react.d.ts, 173, 20))
>this.state : Symbol(React.Component.state, Decl(react.d.ts, 173, 44))
>this : Symbol(FetchUser, Decl(file.tsx, 8, 1))
>state : Symbol(React.Component.state, Decl(react.d.ts, 173, 44))

            : null;
    }
}

// Ok
function UserName0() {
>UserName0 : Symbol(UserName0, Decl(file.tsx, 16, 1))

    return (
        <FetchUser>
>FetchUser : Symbol(FetchUser, Decl(file.tsx, 8, 1))

            { user => (
>user : Symbol(user, Decl(file.tsx, 22, 13))

                <h1>{ user.Name }</h1>
>h1 : Symbol(JSX.IntrinsicElements.h1, Decl(react.d.ts, 2409, 47))
>user.Name : Symbol(IUser.Name, Decl(file.tsx, 2, 17))
>user : Symbol(user, Decl(file.tsx, 22, 13))
>Name : Symbol(IUser.Name, Decl(file.tsx, 2, 17))
>h1 : Symbol(JSX.IntrinsicElements.h1, Decl(react.d.ts, 2409, 47))

            ) }
        </FetchUser>
>FetchUser : Symbol(FetchUser, Decl(file.tsx, 8, 1))

    );
}

function UserName1() {
>UserName1 : Symbol(UserName1, Decl(file.tsx, 27, 1))

    return (
        <FetchUser>
>FetchUser : Symbol(FetchUser, Decl(file.tsx, 8, 1))

            { user => (
>user : Symbol(user, Decl(file.tsx, 33, 13))

                <h1>{ user.Name }</h1>
>h1 : Symbol(JSX.IntrinsicElements.h1, Decl(react.d.ts, 2409, 47))
>user.Name : Symbol(IUser.Name, Decl(file.tsx, 2, 17))
>user : Symbol(user, Decl(file.tsx, 33, 13))
>Name : Symbol(IUser.Name, Decl(file.tsx, 2, 17))
>h1 : Symbol(JSX.IntrinsicElements.h1, Decl(react.d.ts, 2409, 47))

            ) }
        </FetchUser>
>FetchUser : Symbol(FetchUser, Decl(file.tsx, 8, 1))

    );
}

=== /app.ts ===
/// <reference path="./ref.d.ts"/>
/// <reference types="lib"/>

let x: $;
>x : Symbol(x, Decl(app.ts, 3, 3))
>$ : Symbol($, Decl(ref.d.ts, 2, 11), Decl(index.d.ts, 0, 0))

let y = () => x
>y : Symbol(y, Decl(app.ts, 4, 3))
>x : Symbol(x, Decl(app.ts, 3, 3))


=== /ref.d.ts ===
// $ comes from type declaration file - type reference directive should be added

declare let $: { x: number }
>$ : Symbol($, Decl(ref.d.ts, 2, 11), Decl(index.d.ts, 0, 0))
>x : Symbol(x, Decl(ref.d.ts, 2, 16))
    
=== /types/lib/index.d.ts ===
interface $ { x }
>$ : Symbol($, Decl(ref.d.ts, 2, 11), Decl(index.d.ts, 0, 0))
>x : Symbol($.x, Decl(index.d.ts, 0, 13))



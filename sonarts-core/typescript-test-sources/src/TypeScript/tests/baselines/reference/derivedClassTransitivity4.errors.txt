tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassTransitivity4.ts(18,1): error TS2322: Type 'E' is not assignable to type 'C'.
  Types of property 'foo' are incompatible.
    Type '(x?: string) => void' is not assignable to type '(x: number) => void'.
      Types of parameters 'x' and 'x' are incompatible.
        Type 'number' is not assignable to type 'string'.
tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassTransitivity4.ts(19,11): error TS2445: Property 'foo' is protected and only accessible within class 'C' and its subclasses.


==== tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassTransitivity4.ts (2 errors) ====
    // subclassing is not transitive when you can remove required parameters and add optional parameters on protected members
    
    class C {
        protected foo(x: number) { }
    }
    
    class D extends C {
        protected foo() { } // ok to drop parameters
    }
    
    class E extends D {
        public foo(x?: string) { } // ok to add optional parameters
    }
    
    var c: C;
    var d: D;
    var e: E;
    c = e;
    ~
!!! error TS2322: Type 'E' is not assignable to type 'C'.
!!! error TS2322:   Types of property 'foo' are incompatible.
!!! error TS2322:     Type '(x?: string) => void' is not assignable to type '(x: number) => void'.
!!! error TS2322:       Types of parameters 'x' and 'x' are incompatible.
!!! error TS2322:         Type 'number' is not assignable to type 'string'.
    var r = c.foo(1);
              ~~~
!!! error TS2445: Property 'foo' is protected and only accessible within class 'C' and its subclasses.
    var r2 = e.foo('');
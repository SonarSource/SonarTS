=== tests/cases/compiler/first.ts ===
declare class P<R> {
>P : Symbol(P, Decl(first.ts, 0, 0), Decl(second.ts, 0, 0))
>R : Symbol(R, Decl(first.ts, 0, 16), Decl(second.ts, 0, 12))

    constructor(callback: (resolve: (value: R) => void) => void);
>callback : Symbol(callback, Decl(first.ts, 1, 16))
>resolve : Symbol(resolve, Decl(first.ts, 1, 27))
>value : Symbol(value, Decl(first.ts, 1, 37))
>R : Symbol(R, Decl(first.ts, 0, 16), Decl(second.ts, 0, 12))
}

=== tests/cases/compiler/second.ts ===
interface P<R> { }
>P : Symbol(P, Decl(first.ts, 0, 0), Decl(second.ts, 0, 0))
>R : Symbol(R, Decl(first.ts, 0, 16), Decl(second.ts, 0, 12))

new P<string>(r => { r('foo') });
>P : Symbol(P, Decl(first.ts, 0, 0), Decl(second.ts, 0, 0))
>r : Symbol(r, Decl(second.ts, 1, 14))
>r : Symbol(r, Decl(second.ts, 1, 14))


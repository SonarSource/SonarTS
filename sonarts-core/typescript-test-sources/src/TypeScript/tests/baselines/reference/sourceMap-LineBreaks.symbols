=== tests/cases/compiler/sourceMap-LineBreaks.ts ===
var endsWithlineSeparator = 10;  var endsWithParagraphSeparator = 10;  var endsWithNextLine = 1;var endsWithLineFeed = 1;
>endsWithlineSeparator : Symbol(endsWithlineSeparator, Decl(sourceMap-LineBreaks.ts, 0, 3))

var endsWithCarriageReturnLineFeed = 1;
>endsWithParagraphSeparator : Symbol(endsWithParagraphSeparator, Decl(sourceMap-LineBreaks.ts, 1, 3))

var endsWithCarriageReturn = 1;var endsWithLineFeedCarriageReturn = 1;
>endsWithNextLine : Symbol(endsWithNextLine, Decl(sourceMap-LineBreaks.ts, 2, 3))
>endsWithLineFeed : Symbol(endsWithLineFeed, Decl(sourceMap-LineBreaks.ts, 2, 29))

var endsWithLineFeedCarriageReturnLineFeed = 1;
>endsWithCarriageReturnLineFeed : Symbol(endsWithCarriageReturnLineFeed, Decl(sourceMap-LineBreaks.ts, 3, 3))

>endsWithCarriageReturn : Symbol(endsWithCarriageReturn, Decl(sourceMap-LineBreaks.ts, 4, 3))

var stringLiteralWithLineFeed = "line 1\
>endsWithLineFeedCarriageReturn : Symbol(endsWithLineFeedCarriageReturn, Decl(sourceMap-LineBreaks.ts, 5, 3))

line 2";
var stringLiteralWithCarriageReturnLineFeed = "line 1\
>endsWithLineFeedCarriageReturnLineFeed : Symbol(endsWithLineFeedCarriageReturnLineFeed, Decl(sourceMap-LineBreaks.ts, 7, 3))

line 2";
var stringLiteralWithCarriageReturn = "line 1\line 2";
>stringLiteralWithLineFeed : Symbol(stringLiteralWithLineFeed, Decl(sourceMap-LineBreaks.ts, 9, 3))

var stringLiteralWithLineSeparator = "line 1\ line 2"; var stringLiteralWithParagraphSeparator = "line 1\ line 2"; var stringLiteralWithNextLine = "line 1\line 2";
>stringLiteralWithCarriageReturnLineFeed : Symbol(stringLiteralWithCarriageReturnLineFeed, Decl(sourceMap-LineBreaks.ts, 11, 3))


=== tests/cases/compiler/file1.ts ===
export interface Foo { x }
>Foo : Symbol(Foo, Decl(file1.ts, 0, 0))
>x : Symbol(Foo.x, Decl(file1.ts, 0, 22))

=== tests/cases/compiler/file2.ts ===
export interface A { x }
>A : Symbol(A, Decl(file2.ts, 0, 0))
>x : Symbol(A.x, Decl(file2.ts, 0, 20))

export * from "file1"
export var x = 1;
>x : Symbol(x, Decl(file2.ts, 2, 10))

=== tests/cases/compiler/file3.ts ===
export interface B { x }
>B : Symbol(B, Decl(file3.ts, 0, 0))
>x : Symbol(B.x, Decl(file3.ts, 0, 20))

export * from "file1"
export var x = 1;
>x : Symbol(x, Decl(file3.ts, 2, 10))

=== tests/cases/compiler/file4.ts ===
export interface C { x }
>C : Symbol(C, Decl(file4.ts, 0, 0))
>x : Symbol(C.x, Decl(file4.ts, 0, 20))

export * from "file2"
export * from "file3"
export var x = 1;
>x : Symbol(x, Decl(file4.ts, 3, 10))

=== tests/cases/compiler/file5.ts ===
export * from "file4"
export var x = 1;
>x : Symbol(x, Decl(file5.ts, 1, 10))


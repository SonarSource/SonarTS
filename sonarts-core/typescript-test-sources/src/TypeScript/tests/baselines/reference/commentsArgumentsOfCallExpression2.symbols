=== tests/cases/compiler/commentsArgumentsOfCallExpression2.ts ===
function foo(/*c1*/ x: any, /*d1*/ y: any,/*e1*/w?: any) { }
>foo : Symbol(foo, Decl(commentsArgumentsOfCallExpression2.ts, 0, 0))
>x : Symbol(x, Decl(commentsArgumentsOfCallExpression2.ts, 0, 13))
>y : Symbol(y, Decl(commentsArgumentsOfCallExpression2.ts, 0, 27))
>w : Symbol(w, Decl(commentsArgumentsOfCallExpression2.ts, 0, 42))

var a, b: any;
>a : Symbol(a, Decl(commentsArgumentsOfCallExpression2.ts, 1, 3))
>b : Symbol(b, Decl(commentsArgumentsOfCallExpression2.ts, 1, 6))

foo(/*c2*/ 1, /*d2*/ 1 + 2, /*e1*/ a + b);
>foo : Symbol(foo, Decl(commentsArgumentsOfCallExpression2.ts, 0, 0))
>a : Symbol(a, Decl(commentsArgumentsOfCallExpression2.ts, 1, 3))
>b : Symbol(b, Decl(commentsArgumentsOfCallExpression2.ts, 1, 6))

foo(/*c3*/ function () { }, /*d2*/() => { }, /*e2*/ a + /*e3*/ b);
>foo : Symbol(foo, Decl(commentsArgumentsOfCallExpression2.ts, 0, 0))
>a : Symbol(a, Decl(commentsArgumentsOfCallExpression2.ts, 1, 3))
>b : Symbol(b, Decl(commentsArgumentsOfCallExpression2.ts, 1, 6))

foo(/*c3*/ function () { }, /*d3*/() => { }, /*e3*/(a + b));
>foo : Symbol(foo, Decl(commentsArgumentsOfCallExpression2.ts, 0, 0))
>a : Symbol(a, Decl(commentsArgumentsOfCallExpression2.ts, 1, 3))
>b : Symbol(b, Decl(commentsArgumentsOfCallExpression2.ts, 1, 6))

foo(
>foo : Symbol(foo, Decl(commentsArgumentsOfCallExpression2.ts, 0, 0))

    /*c4*/ function () { },
    /*d4*/() => { },
    /*e4*/
    /*e5*/ "hello");

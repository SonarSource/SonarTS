=== tests/cases/compiler/cloduleAcrossModuleDefinitions.ts ===
module A {
>A : Symbol(A, Decl(cloduleAcrossModuleDefinitions.ts, 0, 0), Decl(cloduleAcrossModuleDefinitions.ts, 5, 1))

    export class B {
>B : Symbol(B, Decl(cloduleAcrossModuleDefinitions.ts, 0, 10), Decl(cloduleAcrossModuleDefinitions.ts, 7, 10))

        foo() { }
>foo : Symbol(B.foo, Decl(cloduleAcrossModuleDefinitions.ts, 1, 20))

        static bar() { }
>bar : Symbol(B.bar, Decl(cloduleAcrossModuleDefinitions.ts, 2, 17))
    }
}

module A {
>A : Symbol(A, Decl(cloduleAcrossModuleDefinitions.ts, 0, 0), Decl(cloduleAcrossModuleDefinitions.ts, 5, 1))

    export module B {
>B : Symbol(B, Decl(cloduleAcrossModuleDefinitions.ts, 0, 10), Decl(cloduleAcrossModuleDefinitions.ts, 7, 10))

        export var x = 1;
>x : Symbol(x, Decl(cloduleAcrossModuleDefinitions.ts, 9, 18))
    }
}

var b: A.B; // ok
>b : Symbol(b, Decl(cloduleAcrossModuleDefinitions.ts, 13, 3))
>A : Symbol(A, Decl(cloduleAcrossModuleDefinitions.ts, 0, 0), Decl(cloduleAcrossModuleDefinitions.ts, 5, 1))
>B : Symbol(A.B, Decl(cloduleAcrossModuleDefinitions.ts, 0, 10), Decl(cloduleAcrossModuleDefinitions.ts, 7, 10))


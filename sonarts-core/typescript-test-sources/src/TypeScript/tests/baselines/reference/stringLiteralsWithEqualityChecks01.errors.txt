tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks01.ts(8,5): error TS2365: Operator '===' cannot be applied to types '"foo"' and '"bar"'.
tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks01.ts(9,5): error TS2365: Operator '===' cannot be applied to types '"bar"' and '"foo"'.
tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks01.ts(10,5): error TS2365: Operator '===' cannot be applied to types '"foo"' and '"bar"'.
tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks01.ts(17,5): error TS2365: Operator '!==' cannot be applied to types '"foo"' and '"bar"'.
tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks01.ts(18,5): error TS2365: Operator '!==' cannot be applied to types '"bar"' and '"foo"'.
tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks01.ts(19,5): error TS2365: Operator '!==' cannot be applied to types '"foo"' and '"bar"'.


==== tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks01.ts (6 errors) ====
    let x: "foo";
    let y: "foo" | "bar";
    
    let b: boolean;
    b = x === y;
    b = "foo" === y
    b = y === "foo";
    b = "foo" === "bar";
        ~~~~~~~~~~~~~~~
!!! error TS2365: Operator '===' cannot be applied to types '"foo"' and '"bar"'.
    b = "bar" === x;
        ~~~~~~~~~~~
!!! error TS2365: Operator '===' cannot be applied to types '"bar"' and '"foo"'.
    b = x === "bar";
        ~~~~~~~~~~~
!!! error TS2365: Operator '===' cannot be applied to types '"foo"' and '"bar"'.
    b = y === "bar";
    b = "bar" === y;
    
    b = x !== y;
    b = "foo" !== y
    b = y !== "foo";
    b = "foo" !== "bar";
        ~~~~~~~~~~~~~~~
!!! error TS2365: Operator '!==' cannot be applied to types '"foo"' and '"bar"'.
    b = "bar" !== x;
        ~~~~~~~~~~~
!!! error TS2365: Operator '!==' cannot be applied to types '"bar"' and '"foo"'.
    b = x !== "bar";
        ~~~~~~~~~~~
!!! error TS2365: Operator '!==' cannot be applied to types '"foo"' and '"bar"'.
    b = y !== "bar";
    b = "bar" !== y;
    
    
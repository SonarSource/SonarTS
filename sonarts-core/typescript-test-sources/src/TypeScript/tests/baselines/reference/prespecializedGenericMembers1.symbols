=== tests/cases/compiler/prespecializedGenericMembers1.ts ===
export interface IKitty {
>IKitty : Symbol(IKitty, Decl(prespecializedGenericMembers1.ts, 0, 0))

    }

export class Cat<CatType extends IKitty> {
>Cat : Symbol(Cat, Decl(prespecializedGenericMembers1.ts, 2, 5))
>CatType : Symbol(CatType, Decl(prespecializedGenericMembers1.ts, 4, 17))
>IKitty : Symbol(IKitty, Decl(prespecializedGenericMembers1.ts, 0, 0))

    constructor() {
    
    }
}

export class CatBag {
>CatBag : Symbol(CatBag, Decl(prespecializedGenericMembers1.ts, 8, 1))

    constructor(cats: { barry: Cat<IKitty>; }) {
>cats : Symbol(cats, Decl(prespecializedGenericMembers1.ts, 11, 16))
>barry : Symbol(barry, Decl(prespecializedGenericMembers1.ts, 11, 23))
>Cat : Symbol(Cat, Decl(prespecializedGenericMembers1.ts, 2, 5))
>IKitty : Symbol(IKitty, Decl(prespecializedGenericMembers1.ts, 0, 0))
        
    }
}
var cat = new Cat<IKitty>();
>cat : Symbol(cat, Decl(prespecializedGenericMembers1.ts, 15, 3))
>Cat : Symbol(Cat, Decl(prespecializedGenericMembers1.ts, 2, 5))
>IKitty : Symbol(IKitty, Decl(prespecializedGenericMembers1.ts, 0, 0))

var catThing = {
>catThing : Symbol(catThing, Decl(prespecializedGenericMembers1.ts, 16, 3))

    barry: cat
>barry : Symbol(barry, Decl(prespecializedGenericMembers1.ts, 16, 16))
>cat : Symbol(cat, Decl(prespecializedGenericMembers1.ts, 15, 3))

};
var catBag = new CatBag(catThing);
>catBag : Symbol(catBag, Decl(prespecializedGenericMembers1.ts, 19, 3))
>CatBag : Symbol(CatBag, Decl(prespecializedGenericMembers1.ts, 8, 1))
>catThing : Symbol(catThing, Decl(prespecializedGenericMembers1.ts, 16, 3))


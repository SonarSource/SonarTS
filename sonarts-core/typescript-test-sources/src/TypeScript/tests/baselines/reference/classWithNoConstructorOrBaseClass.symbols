=== tests/cases/conformance/classes/members/constructorFunctionTypes/classWithNoConstructorOrBaseClass.ts ===
class C {
>C : Symbol(C, Decl(classWithNoConstructorOrBaseClass.ts, 0, 0))

    x: string;
>x : Symbol(C.x, Decl(classWithNoConstructorOrBaseClass.ts, 0, 9))
}

var c = new C();
>c : Symbol(c, Decl(classWithNoConstructorOrBaseClass.ts, 4, 3))
>C : Symbol(C, Decl(classWithNoConstructorOrBaseClass.ts, 0, 0))

var r = C;
>r : Symbol(r, Decl(classWithNoConstructorOrBaseClass.ts, 5, 3))
>C : Symbol(C, Decl(classWithNoConstructorOrBaseClass.ts, 0, 0))

class D<T,U> {
>D : Symbol(D, Decl(classWithNoConstructorOrBaseClass.ts, 5, 10))
>T : Symbol(T, Decl(classWithNoConstructorOrBaseClass.ts, 7, 8))
>U : Symbol(U, Decl(classWithNoConstructorOrBaseClass.ts, 7, 10))

    x: T;
>x : Symbol(D.x, Decl(classWithNoConstructorOrBaseClass.ts, 7, 14))
>T : Symbol(T, Decl(classWithNoConstructorOrBaseClass.ts, 7, 8))

    y: U;
>y : Symbol(D.y, Decl(classWithNoConstructorOrBaseClass.ts, 8, 9))
>U : Symbol(U, Decl(classWithNoConstructorOrBaseClass.ts, 7, 10))
}

var d = new D();
>d : Symbol(d, Decl(classWithNoConstructorOrBaseClass.ts, 12, 3))
>D : Symbol(D, Decl(classWithNoConstructorOrBaseClass.ts, 5, 10))

var d2 = new D<string, number>();
>d2 : Symbol(d2, Decl(classWithNoConstructorOrBaseClass.ts, 13, 3))
>D : Symbol(D, Decl(classWithNoConstructorOrBaseClass.ts, 5, 10))

var r2 = D;
>r2 : Symbol(r2, Decl(classWithNoConstructorOrBaseClass.ts, 14, 3))
>D : Symbol(D, Decl(classWithNoConstructorOrBaseClass.ts, 5, 10))


=== tests/cases/compiler/dottedSymbolResolution1.ts ===
interface JQuery {
>JQuery : JQuery

    find(selector: string): JQuery;
>find : (selector: string) => JQuery
>selector : string
>JQuery : JQuery
}

interface JQueryStatic {
>JQueryStatic : JQueryStatic
    
    (selector: string): JQuery;
>selector : string
>JQuery : JQuery

    (object: JQuery): JQuery;
>object : JQuery
>JQuery : JQuery
>JQuery : JQuery
}

class Base { foo() { } }
>Base : Base
>foo : () => void

function each(collection: string, callback: (indexInArray: any, valueOfElement: any) => any): any;
>each : { (collection: string, callback: (indexInArray: any, valueOfElement: any) => any): any; (collection: JQuery, callback: (indexInArray: number, valueOfElement: Base) => any): any; }
>collection : string
>callback : (indexInArray: any, valueOfElement: any) => any
>indexInArray : any
>valueOfElement : any

function each(collection: JQuery, callback: (indexInArray: number, valueOfElement: Base) => any): any;
>each : { (collection: string, callback: (indexInArray: any, valueOfElement: any) => any): any; (collection: JQuery, callback: (indexInArray: number, valueOfElement: Base) => any): any; }
>collection : JQuery
>JQuery : JQuery
>callback : (indexInArray: number, valueOfElement: Base) => any
>indexInArray : number
>valueOfElement : Base
>Base : Base

function each(collection: any, callback: (indexInArray: any, valueOfElement: any) => any): any {
>each : { (collection: string, callback: (indexInArray: any, valueOfElement: any) => any): any; (collection: JQuery, callback: (indexInArray: number, valueOfElement: Base) => any): any; }
>collection : any
>callback : (indexInArray: any, valueOfElement: any) => any
>indexInArray : any
>valueOfElement : any

    return null;
>null : null
}

function _setBarAndText(): void {
>_setBarAndText : () => void

    var x: JQuery, $: JQueryStatic
>x : JQuery
>JQuery : JQuery
>$ : JQueryStatic
>JQueryStatic : JQueryStatic

    each(x.find(" "), function () {
>each(x.find(" "), function () {        var $this: JQuery = $(''),            thisBar = $this.find(".fx-usagebars-calloutbar-this"); // bug lead to 'could not find dotted symbol' here    } ) : any
>each : { (collection: string, callback: (indexInArray: any, valueOfElement: any) => any): any; (collection: JQuery, callback: (indexInArray: number, valueOfElement: Base) => any): any; }
>x.find(" ") : JQuery
>x.find : (selector: string) => JQuery
>x : JQuery
>find : (selector: string) => JQuery
>" " : " "
>function () {        var $this: JQuery = $(''),            thisBar = $this.find(".fx-usagebars-calloutbar-this"); // bug lead to 'could not find dotted symbol' here    } : () => void

        var $this: JQuery = $(''),
>$this : JQuery
>JQuery : JQuery
>$('') : JQuery
>$ : JQueryStatic
>'' : ""

            thisBar = $this.find(".fx-usagebars-calloutbar-this"); // bug lead to 'could not find dotted symbol' here
>thisBar : JQuery
>$this.find(".fx-usagebars-calloutbar-this") : JQuery
>$this.find : (selector: string) => JQuery
>$this : JQuery
>find : (selector: string) => JQuery
>".fx-usagebars-calloutbar-this" : ".fx-usagebars-calloutbar-this"

    } );
}

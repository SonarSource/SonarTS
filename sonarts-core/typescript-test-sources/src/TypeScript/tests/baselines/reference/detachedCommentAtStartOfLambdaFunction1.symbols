=== tests/cases/compiler/detachedCommentAtStartOfLambdaFunction1.ts ===
class TestFile {
>TestFile : Symbol(TestFile, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 0, 0))

    name: string;
>name : Symbol(TestFile.name, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 0, 16))

    foo(message: string): () => string {
>foo : Symbol(TestFile.foo, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 1, 17))
>message : Symbol(message, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 2, 8))

        return (...x: string[]) =>
>x : Symbol(x, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 3, 16))

            /// <summary>Test summary</summary>
            /// <param name="message" type="String" />
            /// <returns type="Function" />
            message + this.name;
>message : Symbol(message, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 2, 8))
>this.name : Symbol(TestFile.name, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 0, 16))
>this : Symbol(TestFile, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 0, 0))
>name : Symbol(TestFile.name, Decl(detachedCommentAtStartOfLambdaFunction1.ts, 0, 16))
    }
}

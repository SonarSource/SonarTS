=== tests/cases/compiler/A.ts ===
namespace ts {
>ts : Symbol(ts, Decl(A.ts, 0, 0), Decl(B.ts, 0, 0))

    export function printVersion():void {
>printVersion : Symbol(printVersion, Decl(A.ts, 0, 14))

        log("Version: " + sys.version);  // the call of sys.version is deferred, should not report an error.
>log : Symbol(log, Decl(A.ts, 3, 5))
>sys.version : Symbol(version, Decl(B.ts, 2, 20))
>sys : Symbol(sys, Decl(B.ts, 2, 14))
>version : Symbol(version, Decl(B.ts, 2, 20))
    }

    export function log(info:string):void {
>log : Symbol(log, Decl(A.ts, 3, 5))
>info : Symbol(info, Decl(A.ts, 5, 24))

    }
}

=== tests/cases/compiler/B.ts ===
namespace ts {
>ts : Symbol(ts, Decl(A.ts, 0, 0), Decl(B.ts, 0, 0))

    export let sys:{version:string} = {version: "2.0.5"};
>sys : Symbol(sys, Decl(B.ts, 2, 14))
>version : Symbol(version, Decl(B.ts, 2, 20))
>version : Symbol(version, Decl(B.ts, 2, 39))

}



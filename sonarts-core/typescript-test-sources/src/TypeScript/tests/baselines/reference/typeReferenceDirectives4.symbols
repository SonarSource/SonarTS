=== /app.ts ===
/// <reference path="./ref.d.ts"/>
/// <reference types="lib"/>

let x: $;
>x : Symbol(x, Decl(app.ts, 3, 3))
>$ : Symbol($, Decl(ref.d.ts, 0, 0), Decl(index.d.ts, 0, 11))

let y = () => x
>y : Symbol(y, Decl(app.ts, 4, 3))
>x : Symbol(x, Decl(app.ts, 3, 3))

=== /ref.d.ts ===
// $ comes from d.ts file - no need to add type reference directive

interface $ { x }
>$ : Symbol($, Decl(ref.d.ts, 0, 0), Decl(index.d.ts, 0, 11))
>x : Symbol($.x, Decl(ref.d.ts, 2, 13))

=== /types/lib/index.d.ts ===
declare let $: { x: number }
>$ : Symbol($, Decl(ref.d.ts, 0, 0), Decl(index.d.ts, 0, 11))
>x : Symbol(x, Decl(index.d.ts, 0, 16))



=== tests/cases/compiler/staticMethodWithTypeParameterExtendsClauseDeclFile.ts ===
class privateClass {
>privateClass : privateClass
}

export class publicClass {
>publicClass : publicClass
}

export class publicClassWithWithPrivateTypeParameters {
>publicClassWithWithPrivateTypeParameters : publicClassWithWithPrivateTypeParameters

    private static myPrivateStaticMethod1<T extends privateClass>() { // do not emit extends clause
>myPrivateStaticMethod1 : <T extends privateClass>() => void
>T : T
>privateClass : privateClass
    }
    private myPrivateMethod1<T extends privateClass>() { // do not emit extends clause
>myPrivateMethod1 : <T extends privateClass>() => void
>T : T
>privateClass : privateClass
    }
    private static myPrivateStaticMethod2<T extends publicClass>() { // do not emit extends clause
>myPrivateStaticMethod2 : <T extends publicClass>() => void
>T : T
>publicClass : publicClass
    }
    private myPrivateMethod2<T extends publicClass>() { // do not emit extends clause
>myPrivateMethod2 : <T extends publicClass>() => void
>T : T
>publicClass : publicClass
    }
    public static myPublicStaticMethod<T extends publicClass>() {
>myPublicStaticMethod : <T extends publicClass>() => void
>T : T
>publicClass : publicClass
    }
    public myPublicMethod<T extends publicClass>() {
>myPublicMethod : <T extends publicClass>() => void
>T : T
>publicClass : publicClass
    }
}


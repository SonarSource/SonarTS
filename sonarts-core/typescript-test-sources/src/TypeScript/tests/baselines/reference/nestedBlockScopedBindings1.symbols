=== tests/cases/compiler/nestedBlockScopedBindings1.ts ===
function a0() {
>a0 : Symbol(a0, Decl(nestedBlockScopedBindings1.ts, 0, 0))
    {
        let x = 1;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 2, 11))
    }
    {
        let x = 1;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 5, 11))
    }
}

function a1() {
>a1 : Symbol(a1, Decl(nestedBlockScopedBindings1.ts, 7, 1))
    {
        let x;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 11, 11))
    }
    {
        let x = 1;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 14, 11))
    }
}

function a2() {
>a2 : Symbol(a2, Decl(nestedBlockScopedBindings1.ts, 16, 1))
    {
        let x = 1;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 20, 11))
    }
    {
        let x;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 23, 11))
    }
}

function a3() {
>a3 : Symbol(a3, Decl(nestedBlockScopedBindings1.ts, 25, 1))
    {
        let x = 1;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 29, 11))
    }
    switch (1) {
        case 1:
            let x;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 33, 15))

            break;
    }
}


function a4() {
>a4 : Symbol(a4, Decl(nestedBlockScopedBindings1.ts, 36, 1))
    {
        let x;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 41, 11))
    }
    switch (1) {
        case 1:
            let x = 1;
>x : Symbol(x, Decl(nestedBlockScopedBindings1.ts, 45, 15))

            break;
    }
}


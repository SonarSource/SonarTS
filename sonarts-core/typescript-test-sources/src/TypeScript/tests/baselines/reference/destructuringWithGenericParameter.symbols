=== tests/cases/compiler/destructuringWithGenericParameter.ts ===
class GenericClass<T> {
>GenericClass : Symbol(GenericClass, Decl(destructuringWithGenericParameter.ts, 0, 0))
>T : Symbol(T, Decl(destructuringWithGenericParameter.ts, 0, 19))

    payload: T;
>payload : Symbol(GenericClass.payload, Decl(destructuringWithGenericParameter.ts, 0, 23))
>T : Symbol(T, Decl(destructuringWithGenericParameter.ts, 0, 19))
}

var genericObject = new GenericClass<{ greeting: string }>();
>genericObject : Symbol(genericObject, Decl(destructuringWithGenericParameter.ts, 4, 3))
>GenericClass : Symbol(GenericClass, Decl(destructuringWithGenericParameter.ts, 0, 0))
>greeting : Symbol(greeting, Decl(destructuringWithGenericParameter.ts, 4, 38))

function genericFunction<T>(object: GenericClass<T>, callback: (payload: T) => void) {
>genericFunction : Symbol(genericFunction, Decl(destructuringWithGenericParameter.ts, 4, 61))
>T : Symbol(T, Decl(destructuringWithGenericParameter.ts, 6, 25))
>object : Symbol(object, Decl(destructuringWithGenericParameter.ts, 6, 28))
>GenericClass : Symbol(GenericClass, Decl(destructuringWithGenericParameter.ts, 0, 0))
>T : Symbol(T, Decl(destructuringWithGenericParameter.ts, 6, 25))
>callback : Symbol(callback, Decl(destructuringWithGenericParameter.ts, 6, 52))
>payload : Symbol(payload, Decl(destructuringWithGenericParameter.ts, 6, 64))
>T : Symbol(T, Decl(destructuringWithGenericParameter.ts, 6, 25))

    callback(object.payload);
>callback : Symbol(callback, Decl(destructuringWithGenericParameter.ts, 6, 52))
>object.payload : Symbol(GenericClass.payload, Decl(destructuringWithGenericParameter.ts, 0, 23))
>object : Symbol(object, Decl(destructuringWithGenericParameter.ts, 6, 28))
>payload : Symbol(GenericClass.payload, Decl(destructuringWithGenericParameter.ts, 0, 23))
}

genericFunction(genericObject, ({greeting}) => {
>genericFunction : Symbol(genericFunction, Decl(destructuringWithGenericParameter.ts, 4, 61))
>genericObject : Symbol(genericObject, Decl(destructuringWithGenericParameter.ts, 4, 3))
>greeting : Symbol(greeting, Decl(destructuringWithGenericParameter.ts, 10, 33))

    var s = greeting.toLocaleLowerCase();  // Greeting should be of type string
>s : Symbol(s, Decl(destructuringWithGenericParameter.ts, 11, 7))
>greeting.toLocaleLowerCase : Symbol(String.toLocaleLowerCase, Decl(lib.d.ts, --, --))
>greeting : Symbol(greeting, Decl(destructuringWithGenericParameter.ts, 10, 33))
>toLocaleLowerCase : Symbol(String.toLocaleLowerCase, Decl(lib.d.ts, --, --))

});


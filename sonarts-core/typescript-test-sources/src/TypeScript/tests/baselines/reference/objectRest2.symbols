=== tests/cases/conformance/types/rest/objectRest2.ts ===
// test for #12203
declare function connectionFromArray(objects: number, args: any): {};
>connectionFromArray : Symbol(connectionFromArray, Decl(objectRest2.ts, 0, 0))
>objects : Symbol(objects, Decl(objectRest2.ts, 1, 37))
>args : Symbol(args, Decl(objectRest2.ts, 1, 53))

function rootConnection(name: string) {
>rootConnection : Symbol(rootConnection, Decl(objectRest2.ts, 1, 69))
>name : Symbol(name, Decl(objectRest2.ts, 2, 24))

  return {
    resolve: async (context, args) => {
>resolve : Symbol(resolve, Decl(objectRest2.ts, 3, 10))
>context : Symbol(context, Decl(objectRest2.ts, 4, 20))
>args : Symbol(args, Decl(objectRest2.ts, 4, 28))

        const { objects } = await { objects: 12 };
>objects : Symbol(objects, Decl(objectRest2.ts, 5, 15))
>objects : Symbol(objects, Decl(objectRest2.ts, 5, 35))

      return {
        ...connectionFromArray(objects, args)
>connectionFromArray : Symbol(connectionFromArray, Decl(objectRest2.ts, 0, 0))
>objects : Symbol(objects, Decl(objectRest2.ts, 5, 15))
>args : Symbol(args, Decl(objectRest2.ts, 4, 28))

      };
    }
  };
}
rootConnection('test');
>rootConnection : Symbol(rootConnection, Decl(objectRest2.ts, 1, 69))


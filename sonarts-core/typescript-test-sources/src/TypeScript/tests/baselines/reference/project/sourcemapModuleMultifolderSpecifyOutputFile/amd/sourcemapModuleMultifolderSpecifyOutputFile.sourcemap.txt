===================================================================
JsFile: test.js
mapUrl: test.js.map
sourceRoot: 
sources: ../ref/m1.ts,../../outputdir_module_multifolder_ref/m2.ts,../test.ts
===================================================================
-------------------------------------------------------------------
emittedFile:bin/test.js
sourceFile:../ref/m1.ts
-------------------------------------------------------------------
>>>define("outputdir_module_multifolder/ref/m1", ["require", "exports"], function (require, exports) {
>>>    "use strict";
>>>    exports.m1_a1 = 10;
1 >^^^^
2 >    ^^^^^^^^^^^^^
3 >                 ^^^
4 >                    ^^
5 >                      ^
6 >                       ^^^^^^^^->
1 >export var 
2 >    m1_a1
3 >                  = 
4 >                    10
5 >                      ;
1 >Emitted(3, 5) Source(1, 12) + SourceIndex(0)
2 >Emitted(3, 18) Source(1, 17) + SourceIndex(0)
3 >Emitted(3, 21) Source(1, 20) + SourceIndex(0)
4 >Emitted(3, 23) Source(1, 22) + SourceIndex(0)
5 >Emitted(3, 24) Source(1, 23) + SourceIndex(0)
---
>>>    var m1_c1 = (function () {
1->^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
1->Emitted(4, 5) Source(2, 1) + SourceIndex(0)
---
>>>        function m1_c1() {
1->^^^^^^^^
2 >        ^^->
1->
1->Emitted(5, 9) Source(2, 1) + SourceIndex(0)
---
>>>        }
1->^^^^^^^^
2 >        ^
3 >         ^^^^^^^^^^^^^->
1->export class m1_c1 {
  >    public m1_c1_p1: number;
  >
2 >        }
1->Emitted(6, 9) Source(4, 1) + SourceIndex(0)
2 >Emitted(6, 10) Source(4, 2) + SourceIndex(0)
---
>>>        return m1_c1;
1->^^^^^^^^
2 >        ^^^^^^^^^^^^
1->
2 >        }
1->Emitted(7, 9) Source(4, 1) + SourceIndex(0)
2 >Emitted(7, 21) Source(4, 2) + SourceIndex(0)
---
>>>    }());
1 >^^^^
2 >    ^
3 >     
4 >     ^^^^
5 >         ^^^^^^^^^^^^^^^^^^->
1 >
2 >    }
3 >     
4 >     export class m1_c1 {
  >         public m1_c1_p1: number;
  >     }
1 >Emitted(8, 5) Source(4, 1) + SourceIndex(0)
2 >Emitted(8, 6) Source(4, 2) + SourceIndex(0)
3 >Emitted(8, 6) Source(2, 1) + SourceIndex(0)
4 >Emitted(8, 10) Source(4, 2) + SourceIndex(0)
---
>>>    exports.m1_c1 = m1_c1;
1->^^^^
2 >    ^^^^^^^^^^^^^
3 >                 ^^^^^^^^
4 >                         ^
5 >                          ^^^^^^^^^^^^^^->
1->
2 >    m1_c1
3 >                  {
  >                     public m1_c1_p1: number;
  >                 }
4 >                         
1->Emitted(9, 5) Source(2, 14) + SourceIndex(0)
2 >Emitted(9, 18) Source(2, 19) + SourceIndex(0)
3 >Emitted(9, 26) Source(4, 2) + SourceIndex(0)
4 >Emitted(9, 27) Source(4, 2) + SourceIndex(0)
---
>>>    exports.m1_instance1 = new m1_c1();
1->^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^
3 >                        ^^^
4 >                           ^^^^
5 >                               ^^^^^
6 >                                    ^^
7 >                                      ^
1->
  >
  >export var 
2 >    m1_instance1
3 >                         = 
4 >                           new 
5 >                               m1_c1
6 >                                    ()
7 >                                      ;
1->Emitted(10, 5) Source(6, 12) + SourceIndex(0)
2 >Emitted(10, 25) Source(6, 24) + SourceIndex(0)
3 >Emitted(10, 28) Source(6, 27) + SourceIndex(0)
4 >Emitted(10, 32) Source(6, 31) + SourceIndex(0)
5 >Emitted(10, 37) Source(6, 36) + SourceIndex(0)
6 >Emitted(10, 39) Source(6, 38) + SourceIndex(0)
7 >Emitted(10, 40) Source(6, 39) + SourceIndex(0)
---
>>>    function m1_f1() {
1 >^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
1 >Emitted(11, 5) Source(7, 1) + SourceIndex(0)
---
>>>        return exports.m1_instance1;
1->^^^^^^^^
2 >        ^^^^^^
3 >              ^
4 >               ^^^^^^^^^^^^^^^^^^^^
5 >                                   ^
1->export function m1_f1() {
  >    
2 >        return
3 >               
4 >               m1_instance1
5 >                                   ;
1->Emitted(12, 9) Source(8, 5) + SourceIndex(0)
2 >Emitted(12, 15) Source(8, 11) + SourceIndex(0)
3 >Emitted(12, 16) Source(8, 12) + SourceIndex(0)
4 >Emitted(12, 36) Source(8, 24) + SourceIndex(0)
5 >Emitted(12, 37) Source(8, 25) + SourceIndex(0)
---
>>>    }
1 >^^^^
2 >    ^
3 >     ^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    }
1 >Emitted(13, 5) Source(9, 1) + SourceIndex(0)
2 >Emitted(13, 6) Source(9, 2) + SourceIndex(0)
---
>>>    exports.m1_f1 = m1_f1;
1->^^^^
2 >    ^^^^^^^^^^^^^
3 >                 ^^^^^^^^
4 >                         ^
1->
2 >    m1_f1
3 >                 () {
  >                     return m1_instance1;
  >                 }
4 >                         
1->Emitted(14, 5) Source(7, 17) + SourceIndex(0)
2 >Emitted(14, 18) Source(7, 22) + SourceIndex(0)
3 >Emitted(14, 26) Source(9, 2) + SourceIndex(0)
4 >Emitted(14, 27) Source(9, 2) + SourceIndex(0)
---
-------------------------------------------------------------------
emittedFile:bin/test.js
sourceFile:../../outputdir_module_multifolder_ref/m2.ts
-------------------------------------------------------------------
>>>});
>>>define("outputdir_module_multifolder_ref/m2", ["require", "exports"], function (require, exports) {
>>>    "use strict";
>>>    exports.m2_a1 = 10;
1 >^^^^
2 >    ^^^^^^^^^^^^^
3 >                 ^^^
4 >                    ^^
5 >                      ^
6 >                       ^^^^^^^^->
1 >export var 
2 >    m2_a1
3 >                  = 
4 >                    10
5 >                      ;
1 >Emitted(18, 5) Source(1, 12) + SourceIndex(1)
2 >Emitted(18, 18) Source(1, 17) + SourceIndex(1)
3 >Emitted(18, 21) Source(1, 20) + SourceIndex(1)
4 >Emitted(18, 23) Source(1, 22) + SourceIndex(1)
5 >Emitted(18, 24) Source(1, 23) + SourceIndex(1)
---
>>>    var m2_c1 = (function () {
1->^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
1->Emitted(19, 5) Source(2, 1) + SourceIndex(1)
---
>>>        function m2_c1() {
1->^^^^^^^^
2 >        ^^->
1->
1->Emitted(20, 9) Source(2, 1) + SourceIndex(1)
---
>>>        }
1->^^^^^^^^
2 >        ^
3 >         ^^^^^^^^^^^^^->
1->export class m2_c1 {
  >    public m2_c1_p1: number;
  >
2 >        }
1->Emitted(21, 9) Source(4, 1) + SourceIndex(1)
2 >Emitted(21, 10) Source(4, 2) + SourceIndex(1)
---
>>>        return m2_c1;
1->^^^^^^^^
2 >        ^^^^^^^^^^^^
1->
2 >        }
1->Emitted(22, 9) Source(4, 1) + SourceIndex(1)
2 >Emitted(22, 21) Source(4, 2) + SourceIndex(1)
---
>>>    }());
1 >^^^^
2 >    ^
3 >     
4 >     ^^^^
5 >         ^^^^^^^^^^^^^^^^^^->
1 >
2 >    }
3 >     
4 >     export class m2_c1 {
  >         public m2_c1_p1: number;
  >     }
1 >Emitted(23, 5) Source(4, 1) + SourceIndex(1)
2 >Emitted(23, 6) Source(4, 2) + SourceIndex(1)
3 >Emitted(23, 6) Source(2, 1) + SourceIndex(1)
4 >Emitted(23, 10) Source(4, 2) + SourceIndex(1)
---
>>>    exports.m2_c1 = m2_c1;
1->^^^^
2 >    ^^^^^^^^^^^^^
3 >                 ^^^^^^^^
4 >                         ^
5 >                          ^^^^^^^^^^^^^^->
1->
2 >    m2_c1
3 >                  {
  >                     public m2_c1_p1: number;
  >                 }
4 >                         
1->Emitted(24, 5) Source(2, 14) + SourceIndex(1)
2 >Emitted(24, 18) Source(2, 19) + SourceIndex(1)
3 >Emitted(24, 26) Source(4, 2) + SourceIndex(1)
4 >Emitted(24, 27) Source(4, 2) + SourceIndex(1)
---
>>>    exports.m2_instance1 = new m2_c1();
1->^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^
3 >                        ^^^
4 >                           ^^^^
5 >                               ^^^^^
6 >                                    ^^
7 >                                      ^
1->
  >
  >export var 
2 >    m2_instance1
3 >                         = 
4 >                           new 
5 >                               m2_c1
6 >                                    ()
7 >                                      ;
1->Emitted(25, 5) Source(6, 12) + SourceIndex(1)
2 >Emitted(25, 25) Source(6, 24) + SourceIndex(1)
3 >Emitted(25, 28) Source(6, 27) + SourceIndex(1)
4 >Emitted(25, 32) Source(6, 31) + SourceIndex(1)
5 >Emitted(25, 37) Source(6, 36) + SourceIndex(1)
6 >Emitted(25, 39) Source(6, 38) + SourceIndex(1)
7 >Emitted(25, 40) Source(6, 39) + SourceIndex(1)
---
>>>    function m2_f1() {
1 >^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
1 >Emitted(26, 5) Source(7, 1) + SourceIndex(1)
---
>>>        return exports.m2_instance1;
1->^^^^^^^^
2 >        ^^^^^^
3 >              ^
4 >               ^^^^^^^^^^^^^^^^^^^^
5 >                                   ^
1->export function m2_f1() {
  >    
2 >        return
3 >               
4 >               m2_instance1
5 >                                   ;
1->Emitted(27, 9) Source(8, 5) + SourceIndex(1)
2 >Emitted(27, 15) Source(8, 11) + SourceIndex(1)
3 >Emitted(27, 16) Source(8, 12) + SourceIndex(1)
4 >Emitted(27, 36) Source(8, 24) + SourceIndex(1)
5 >Emitted(27, 37) Source(8, 25) + SourceIndex(1)
---
>>>    }
1 >^^^^
2 >    ^
3 >     ^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    }
1 >Emitted(28, 5) Source(9, 1) + SourceIndex(1)
2 >Emitted(28, 6) Source(9, 2) + SourceIndex(1)
---
>>>    exports.m2_f1 = m2_f1;
1->^^^^
2 >    ^^^^^^^^^^^^^
3 >                 ^^^^^^^^
4 >                         ^
1->
2 >    m2_f1
3 >                 () {
  >                     return m2_instance1;
  >                 }
4 >                         
1->Emitted(29, 5) Source(7, 17) + SourceIndex(1)
2 >Emitted(29, 18) Source(7, 22) + SourceIndex(1)
3 >Emitted(29, 26) Source(9, 2) + SourceIndex(1)
4 >Emitted(29, 27) Source(9, 2) + SourceIndex(1)
---
-------------------------------------------------------------------
emittedFile:bin/test.js
sourceFile:../test.ts
-------------------------------------------------------------------
>>>});
>>>define("outputdir_module_multifolder/test", ["require", "exports", "outputdir_module_multifolder/ref/m1", "outputdir_module_multifolder_ref/m2"], function (require, exports, m1, m2) {
>>>    "use strict";
>>>    exports.a1 = 10;
1 >^^^^
2 >    ^^^^^^^^^^
3 >              ^^^
4 >                 ^^
5 >                   ^
6 >                    ^^^^^^^^->
1 >import m1 = require("ref/m1");
  >import m2 = require("../outputdir_module_multifolder_ref/m2");
  >export var 
2 >    a1
3 >               = 
4 >                 10
5 >                   ;
1 >Emitted(33, 5) Source(3, 12) + SourceIndex(2)
2 >Emitted(33, 15) Source(3, 14) + SourceIndex(2)
3 >Emitted(33, 18) Source(3, 17) + SourceIndex(2)
4 >Emitted(33, 20) Source(3, 19) + SourceIndex(2)
5 >Emitted(33, 21) Source(3, 20) + SourceIndex(2)
---
>>>    var c1 = (function () {
1->^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^->
1->
  >
1->Emitted(34, 5) Source(4, 1) + SourceIndex(2)
---
>>>        function c1() {
1->^^^^^^^^
2 >        ^^->
1->
1->Emitted(35, 9) Source(4, 1) + SourceIndex(2)
---
>>>        }
1->^^^^^^^^
2 >        ^
3 >         ^^^^^^^^^^->
1->export class c1 {
  >    public p1: number;
  >
2 >        }
1->Emitted(36, 9) Source(6, 1) + SourceIndex(2)
2 >Emitted(36, 10) Source(6, 2) + SourceIndex(2)
---
>>>        return c1;
1->^^^^^^^^
2 >        ^^^^^^^^^
1->
2 >        }
1->Emitted(37, 9) Source(6, 1) + SourceIndex(2)
2 >Emitted(37, 18) Source(6, 2) + SourceIndex(2)
---
>>>    }());
1 >^^^^
2 >    ^
3 >     
4 >     ^^^^
5 >         ^^^^^^^^^^^^->
1 >
2 >    }
3 >     
4 >     export class c1 {
  >         public p1: number;
  >     }
1 >Emitted(38, 5) Source(6, 1) + SourceIndex(2)
2 >Emitted(38, 6) Source(6, 2) + SourceIndex(2)
3 >Emitted(38, 6) Source(4, 1) + SourceIndex(2)
4 >Emitted(38, 10) Source(6, 2) + SourceIndex(2)
---
>>>    exports.c1 = c1;
1->^^^^
2 >    ^^^^^^^^^^
3 >              ^^^^^
4 >                   ^
5 >                    ^^^^^^^^^^^^^^->
1->
2 >    c1
3 >               {
  >                  public p1: number;
  >              }
4 >                   
1->Emitted(39, 5) Source(4, 14) + SourceIndex(2)
2 >Emitted(39, 15) Source(4, 16) + SourceIndex(2)
3 >Emitted(39, 20) Source(6, 2) + SourceIndex(2)
4 >Emitted(39, 21) Source(6, 2) + SourceIndex(2)
---
>>>    exports.instance1 = new c1();
1->^^^^
2 >    ^^^^^^^^^^^^^^^^^
3 >                     ^^^
4 >                        ^^^^
5 >                            ^^
6 >                              ^^
7 >                                ^
1->
  >
  >export var 
2 >    instance1
3 >                      = 
4 >                        new 
5 >                            c1
6 >                              ()
7 >                                ;
1->Emitted(40, 5) Source(8, 12) + SourceIndex(2)
2 >Emitted(40, 22) Source(8, 21) + SourceIndex(2)
3 >Emitted(40, 25) Source(8, 24) + SourceIndex(2)
4 >Emitted(40, 29) Source(8, 28) + SourceIndex(2)
5 >Emitted(40, 31) Source(8, 30) + SourceIndex(2)
6 >Emitted(40, 33) Source(8, 32) + SourceIndex(2)
7 >Emitted(40, 34) Source(8, 33) + SourceIndex(2)
---
>>>    function f1() {
1 >^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
1 >Emitted(41, 5) Source(9, 1) + SourceIndex(2)
---
>>>        return exports.instance1;
1->^^^^^^^^
2 >        ^^^^^^
3 >              ^
4 >               ^^^^^^^^^^^^^^^^^
5 >                                ^
1->export function f1() {
  >    
2 >        return
3 >               
4 >               instance1
5 >                                ;
1->Emitted(42, 9) Source(10, 5) + SourceIndex(2)
2 >Emitted(42, 15) Source(10, 11) + SourceIndex(2)
3 >Emitted(42, 16) Source(10, 12) + SourceIndex(2)
4 >Emitted(42, 33) Source(10, 21) + SourceIndex(2)
5 >Emitted(42, 34) Source(10, 22) + SourceIndex(2)
---
>>>    }
1 >^^^^
2 >    ^
3 >     ^^^^^^^^^^^^^^^^->
1 >
  >
2 >    }
1 >Emitted(43, 5) Source(11, 1) + SourceIndex(2)
2 >Emitted(43, 6) Source(11, 2) + SourceIndex(2)
---
>>>    exports.f1 = f1;
1->^^^^
2 >    ^^^^^^^^^^
3 >              ^^^^^
4 >                   ^
5 >                    ^^^^^^^->
1->
2 >    f1
3 >              () {
  >                  return instance1;
  >              }
4 >                   
1->Emitted(44, 5) Source(9, 17) + SourceIndex(2)
2 >Emitted(44, 15) Source(9, 19) + SourceIndex(2)
3 >Emitted(44, 20) Source(11, 2) + SourceIndex(2)
4 >Emitted(44, 21) Source(11, 2) + SourceIndex(2)
---
>>>    exports.a2 = m1.m1_c1;
1->^^^^
2 >    ^^^^^^^^^^
3 >              ^^^
4 >                 ^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^->
1->
  >
  >export var 
2 >    a2
3 >               = 
4 >                 m1
5 >                   .
6 >                    m1_c1
7 >                         ;
1->Emitted(45, 5) Source(13, 12) + SourceIndex(2)
2 >Emitted(45, 15) Source(13, 14) + SourceIndex(2)
3 >Emitted(45, 18) Source(13, 17) + SourceIndex(2)
4 >Emitted(45, 20) Source(13, 19) + SourceIndex(2)
5 >Emitted(45, 21) Source(13, 20) + SourceIndex(2)
6 >Emitted(45, 26) Source(13, 25) + SourceIndex(2)
7 >Emitted(45, 27) Source(13, 26) + SourceIndex(2)
---
>>>    exports.a3 = m2.m2_c1;
1->^^^^
2 >    ^^^^^^^^^^
3 >              ^^^
4 >                 ^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
1->
  >export var 
2 >    a3
3 >               = 
4 >                 m2
5 >                   .
6 >                    m2_c1
7 >                         ;
1->Emitted(46, 5) Source(14, 12) + SourceIndex(2)
2 >Emitted(46, 15) Source(14, 14) + SourceIndex(2)
3 >Emitted(46, 18) Source(14, 17) + SourceIndex(2)
4 >Emitted(46, 20) Source(14, 19) + SourceIndex(2)
5 >Emitted(46, 21) Source(14, 20) + SourceIndex(2)
6 >Emitted(46, 26) Source(14, 25) + SourceIndex(2)
7 >Emitted(46, 27) Source(14, 26) + SourceIndex(2)
---
>>>});
>>>//# sourceMappingURL=test.js.map
=== tests/cases/conformance/types/literal/stringLiteralsWithSwitchStatements04.ts ===
let x: "foo";
>x : Symbol(x, Decl(stringLiteralsWithSwitchStatements04.ts, 0, 3))

let y: "foo" | "bar"; 
>y : Symbol(y, Decl(stringLiteralsWithSwitchStatements04.ts, 1, 3))

declare function randBool(): boolean;
>randBool : Symbol(randBool, Decl(stringLiteralsWithSwitchStatements04.ts, 1, 21))

switch (y) {
>y : Symbol(y, Decl(stringLiteralsWithSwitchStatements04.ts, 1, 3))

    case "foo", x:
>x : Symbol(x, Decl(stringLiteralsWithSwitchStatements04.ts, 0, 3))

        break;
    case x, "foo":
>x : Symbol(x, Decl(stringLiteralsWithSwitchStatements04.ts, 0, 3))

        break;
    case x, "baz":
>x : Symbol(x, Decl(stringLiteralsWithSwitchStatements04.ts, 0, 3))

        break;
    case "baz", x:
>x : Symbol(x, Decl(stringLiteralsWithSwitchStatements04.ts, 0, 3))

        break;
    case "baz" && "bar":
        break;
    case "baz" && ("foo" || "bar"):
        break;
    case "bar" && ("baz" || "bar"):
        break;
}


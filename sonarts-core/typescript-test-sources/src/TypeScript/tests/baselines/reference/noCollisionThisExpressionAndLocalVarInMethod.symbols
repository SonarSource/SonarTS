=== tests/cases/compiler/noCollisionThisExpressionAndLocalVarInMethod.ts ===
var _this = 2;
>_this : Symbol(_this, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 0, 3))

class a {
>a : Symbol(a, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 0, 14))

    method1() {
>method1 : Symbol(a.method1, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 1, 9))

        return {
            doStuff: (callback) => () => {
>doStuff : Symbol(doStuff, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 3, 16))
>callback : Symbol(callback, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 4, 22))

                var _this = 2;
>_this : Symbol(_this, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 5, 19))

                return callback(_this);
>callback : Symbol(callback, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 4, 22))
>_this : Symbol(_this, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 5, 19))
            }
        }
    }
    method2() {
>method2 : Symbol(a.method2, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 9, 5))

        var _this = 2;
>_this : Symbol(_this, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 11, 11))

        return {
            doStuff: (callback) => () => {
>doStuff : Symbol(doStuff, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 12, 16))
>callback : Symbol(callback, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 13, 22))

                return callback(_this);
>callback : Symbol(callback, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 13, 22))
>_this : Symbol(_this, Decl(noCollisionThisExpressionAndLocalVarInMethod.ts, 11, 11))
            }
        }
    }
}

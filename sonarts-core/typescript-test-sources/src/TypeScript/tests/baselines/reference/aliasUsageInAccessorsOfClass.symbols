=== tests/cases/compiler/aliasUsage1_main.ts ===
import Backbone = require("./aliasUsage1_backbone");
>Backbone : Symbol(Backbone, Decl(aliasUsage1_main.ts, 0, 0))

import moduleA = require("./aliasUsage1_moduleA");
>moduleA : Symbol(moduleA, Decl(aliasUsage1_main.ts, 0, 52))

interface IHasVisualizationModel {
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsage1_main.ts, 1, 50))

    VisualizationModel: typeof Backbone.Model;
>VisualizationModel : Symbol(IHasVisualizationModel.VisualizationModel, Decl(aliasUsage1_main.ts, 2, 34))
>Backbone.Model : Symbol(Backbone.Model, Decl(aliasUsage1_backbone.ts, 0, 0))
>Backbone : Symbol(Backbone, Decl(aliasUsage1_main.ts, 0, 0))
>Model : Symbol(Backbone.Model, Decl(aliasUsage1_backbone.ts, 0, 0))
}
class C2 {
>C2 : Symbol(C2, Decl(aliasUsage1_main.ts, 4, 1))

    x: IHasVisualizationModel;
>x : Symbol(C2.x, Decl(aliasUsage1_main.ts, 5, 10))
>IHasVisualizationModel : Symbol(IHasVisualizationModel, Decl(aliasUsage1_main.ts, 1, 50))

    get A() {
>A : Symbol(C2.A, Decl(aliasUsage1_main.ts, 6, 30), Decl(aliasUsage1_main.ts, 9, 5))

        return this.x;
>this.x : Symbol(C2.x, Decl(aliasUsage1_main.ts, 5, 10))
>this : Symbol(C2, Decl(aliasUsage1_main.ts, 4, 1))
>x : Symbol(C2.x, Decl(aliasUsage1_main.ts, 5, 10))
    }
    set A(x) {
>A : Symbol(C2.A, Decl(aliasUsage1_main.ts, 6, 30), Decl(aliasUsage1_main.ts, 9, 5))
>x : Symbol(x, Decl(aliasUsage1_main.ts, 10, 10))

        x = moduleA;
>x : Symbol(x, Decl(aliasUsage1_main.ts, 10, 10))
>moduleA : Symbol(moduleA, Decl(aliasUsage1_main.ts, 0, 52))
    }
}
=== tests/cases/compiler/aliasUsage1_backbone.ts ===
export class Model {
>Model : Symbol(Model, Decl(aliasUsage1_backbone.ts, 0, 0))

    public someData: string;
>someData : Symbol(Model.someData, Decl(aliasUsage1_backbone.ts, 0, 20))
}

=== tests/cases/compiler/aliasUsage1_moduleA.ts ===
import Backbone = require("./aliasUsage1_backbone");
>Backbone : Symbol(Backbone, Decl(aliasUsage1_moduleA.ts, 0, 0))

export class VisualizationModel extends Backbone.Model {
>VisualizationModel : Symbol(VisualizationModel, Decl(aliasUsage1_moduleA.ts, 0, 52))
>Backbone.Model : Symbol(Backbone.Model, Decl(aliasUsage1_backbone.ts, 0, 0))
>Backbone : Symbol(Backbone, Decl(aliasUsage1_moduleA.ts, 0, 0))
>Model : Symbol(Backbone.Model, Decl(aliasUsage1_backbone.ts, 0, 0))

    // interesting stuff here
}


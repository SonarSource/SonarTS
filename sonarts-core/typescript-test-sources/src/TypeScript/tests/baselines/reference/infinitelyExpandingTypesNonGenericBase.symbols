=== tests/cases/compiler/infinitelyExpandingTypesNonGenericBase.ts ===
class Functionality<V> {
>Functionality : Symbol(Functionality, Decl(infinitelyExpandingTypesNonGenericBase.ts, 0, 0))
>V : Symbol(V, Decl(infinitelyExpandingTypesNonGenericBase.ts, 0, 20))

    property: Options<V>;
>property : Symbol(Functionality.property, Decl(infinitelyExpandingTypesNonGenericBase.ts, 0, 24))
>Options : Symbol(Options, Decl(infinitelyExpandingTypesNonGenericBase.ts, 13, 1))
>V : Symbol(V, Decl(infinitelyExpandingTypesNonGenericBase.ts, 0, 20))
}

class Base {
>Base : Symbol(Base, Decl(infinitelyExpandingTypesNonGenericBase.ts, 2, 1))
}

class A<T> extends Base {
>A : Symbol(A, Decl(infinitelyExpandingTypesNonGenericBase.ts, 5, 1))
>T : Symbol(T, Decl(infinitelyExpandingTypesNonGenericBase.ts, 7, 8))
>Base : Symbol(Base, Decl(infinitelyExpandingTypesNonGenericBase.ts, 2, 1))

    options: Options<Functionality<T>[]>;
>options : Symbol(A.options, Decl(infinitelyExpandingTypesNonGenericBase.ts, 7, 25))
>Options : Symbol(Options, Decl(infinitelyExpandingTypesNonGenericBase.ts, 13, 1))
>Functionality : Symbol(Functionality, Decl(infinitelyExpandingTypesNonGenericBase.ts, 0, 0))
>T : Symbol(T, Decl(infinitelyExpandingTypesNonGenericBase.ts, 7, 8))
}

interface OptionsBase<T> {
>OptionsBase : Symbol(OptionsBase, Decl(infinitelyExpandingTypesNonGenericBase.ts, 9, 1))
>T : Symbol(T, Decl(infinitelyExpandingTypesNonGenericBase.ts, 11, 22))

    Options: Options<T>;
>Options : Symbol(OptionsBase.Options, Decl(infinitelyExpandingTypesNonGenericBase.ts, 11, 26))
>Options : Symbol(Options, Decl(infinitelyExpandingTypesNonGenericBase.ts, 13, 1))
>T : Symbol(T, Decl(infinitelyExpandingTypesNonGenericBase.ts, 11, 22))
}

interface Options<T> extends OptionsBase<T> {
>Options : Symbol(Options, Decl(infinitelyExpandingTypesNonGenericBase.ts, 13, 1))
>T : Symbol(T, Decl(infinitelyExpandingTypesNonGenericBase.ts, 15, 18))
>OptionsBase : Symbol(OptionsBase, Decl(infinitelyExpandingTypesNonGenericBase.ts, 9, 1))
>T : Symbol(T, Decl(infinitelyExpandingTypesNonGenericBase.ts, 15, 18))
}


function o(type: new () => Base) {
>o : Symbol(o, Decl(infinitelyExpandingTypesNonGenericBase.ts, 16, 1))
>type : Symbol(type, Decl(infinitelyExpandingTypesNonGenericBase.ts, 19, 11))
>Base : Symbol(Base, Decl(infinitelyExpandingTypesNonGenericBase.ts, 2, 1))
}

o(A);
>o : Symbol(o, Decl(infinitelyExpandingTypesNonGenericBase.ts, 16, 1))
>A : Symbol(A, Decl(infinitelyExpandingTypesNonGenericBase.ts, 5, 1))


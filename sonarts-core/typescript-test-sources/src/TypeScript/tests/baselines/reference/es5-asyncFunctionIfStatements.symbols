=== tests/cases/compiler/es5-asyncFunctionIfStatements.ts ===
declare var x, y, z, a, b, c;
>x : Symbol(x, Decl(es5-asyncFunctionIfStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionIfStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionIfStatements.ts, 0, 17))
>a : Symbol(a, Decl(es5-asyncFunctionIfStatements.ts, 0, 20))
>b : Symbol(b, Decl(es5-asyncFunctionIfStatements.ts, 0, 23))
>c : Symbol(c, Decl(es5-asyncFunctionIfStatements.ts, 0, 26))

async function ifStatement1() {
>ifStatement1 : Symbol(ifStatement1, Decl(es5-asyncFunctionIfStatements.ts, 0, 29))

    if (await x) { y; } else { z; }
>x : Symbol(x, Decl(es5-asyncFunctionIfStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionIfStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionIfStatements.ts, 0, 17))
}

async function ifStatement2() {
>ifStatement2 : Symbol(ifStatement2, Decl(es5-asyncFunctionIfStatements.ts, 4, 1))

    if (x) { await y; } else { z; }
>x : Symbol(x, Decl(es5-asyncFunctionIfStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionIfStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionIfStatements.ts, 0, 17))
}

async function ifStatement3() {
>ifStatement3 : Symbol(ifStatement3, Decl(es5-asyncFunctionIfStatements.ts, 8, 1))

    if (x) { y; } else { await z; }
>x : Symbol(x, Decl(es5-asyncFunctionIfStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionIfStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionIfStatements.ts, 0, 17))
}

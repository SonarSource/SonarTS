=== tests/cases/compiler/a.ts ===
import { b } from './b';
>b : Symbol(b, Decl(a.ts, 0, 8))

export const a = {
>a : Symbol(a, Decl(a.ts, 1, 12))

    f: () => {
>f : Symbol(f, Decl(a.ts, 1, 18))

        class A { }
>A : Symbol(A, Decl(a.ts, 2, 14))

        class B extends A { }
>B : Symbol(B, Decl(a.ts, 3, 19))
>A : Symbol(A, Decl(a.ts, 2, 14))

        b.f();
>b.f : Symbol(f, Decl(b.ts, 1, 18))
>b : Symbol(b, Decl(a.ts, 0, 8))
>f : Symbol(f, Decl(b.ts, 1, 18))
    }
};
=== tests/cases/compiler/b.ts ===
import { a } from './a';
>a : Symbol(a, Decl(b.ts, 0, 8))

export const b = {
>b : Symbol(b, Decl(b.ts, 1, 12))

    f: () => {
>f : Symbol(f, Decl(b.ts, 1, 18))

        class A { }
>A : Symbol(A, Decl(b.ts, 2, 14))

        class B extends A { }
>B : Symbol(B, Decl(b.ts, 3, 19))
>A : Symbol(A, Decl(b.ts, 2, 14))

        a.f();
>a.f : Symbol(f, Decl(a.ts, 1, 18))
>a : Symbol(a, Decl(b.ts, 0, 8))
>f : Symbol(f, Decl(a.ts, 1, 18))
    }
};

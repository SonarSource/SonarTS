=== tests/cases/compiler/main.ts ===
/// <reference path="O.d.ts" />

import {Observable} from "Observable";
>Observable : typeof Observable

import "Map";
let x: Observable;
>x : Observable
>Observable : Observable

x.foo().x;
>x.foo().x : number
>x.foo() : Cls
>x.foo : () => Cls
>x : Observable
>foo : () => Cls
>x : number

x.foo2().x2;
>x.foo2().x2 : number
>x.foo2() : Cls2
>x.foo2 : () => Cls2
>x : Observable
>foo2 : () => Cls2
>x2 : number

=== tests/cases/compiler/O.d.ts ===
declare module "Observable" {
    class Observable {}
>Observable : Observable
}

declare module "M" {
    class Cls { x: number }
>Cls : Cls
>x : number
}

declare module "Map" {
    import { Cls } from "M";
>Cls : typeof Cls

    module "Observable" {
        interface Observable {
>Observable : Observable

            foo(): Cls;
>foo : () => Cls
>Cls : Cls
        }
    }
}

declare module "Map" {
    class Cls2 { x2: number }
>Cls2 : Cls2
>x2 : number

    module "Observable" {
        interface Observable {
>Observable : Observable

            foo2(): Cls2;
>foo2 : () => Cls2
>Cls2 : Cls2
        }
    }
}


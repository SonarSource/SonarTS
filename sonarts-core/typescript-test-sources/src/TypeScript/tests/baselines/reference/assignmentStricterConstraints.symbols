=== tests/cases/compiler/assignmentStricterConstraints.ts ===
var f = function <T, S extends T>(x: T, y: S): void {
>f : Symbol(f, Decl(assignmentStricterConstraints.ts, 0, 3))
>T : Symbol(T, Decl(assignmentStricterConstraints.ts, 0, 18))
>S : Symbol(S, Decl(assignmentStricterConstraints.ts, 0, 20))
>T : Symbol(T, Decl(assignmentStricterConstraints.ts, 0, 18))
>x : Symbol(x, Decl(assignmentStricterConstraints.ts, 0, 34))
>T : Symbol(T, Decl(assignmentStricterConstraints.ts, 0, 18))
>y : Symbol(y, Decl(assignmentStricterConstraints.ts, 0, 39))
>S : Symbol(S, Decl(assignmentStricterConstraints.ts, 0, 20))

    x = y
>x : Symbol(x, Decl(assignmentStricterConstraints.ts, 0, 34))
>y : Symbol(y, Decl(assignmentStricterConstraints.ts, 0, 39))
}

var g = function <T, S>(x: T, y: S): void { }
>g : Symbol(g, Decl(assignmentStricterConstraints.ts, 4, 3))
>T : Symbol(T, Decl(assignmentStricterConstraints.ts, 4, 18))
>S : Symbol(S, Decl(assignmentStricterConstraints.ts, 4, 20))
>x : Symbol(x, Decl(assignmentStricterConstraints.ts, 4, 24))
>T : Symbol(T, Decl(assignmentStricterConstraints.ts, 4, 18))
>y : Symbol(y, Decl(assignmentStricterConstraints.ts, 4, 29))
>S : Symbol(S, Decl(assignmentStricterConstraints.ts, 4, 20))

g = f
>g : Symbol(g, Decl(assignmentStricterConstraints.ts, 4, 3))
>f : Symbol(f, Decl(assignmentStricterConstraints.ts, 0, 3))

g(1, "")
>g : Symbol(g, Decl(assignmentStricterConstraints.ts, 4, 3))


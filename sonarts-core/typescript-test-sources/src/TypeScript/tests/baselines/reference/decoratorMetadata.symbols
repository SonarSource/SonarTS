=== tests/cases/conformance/decorators/service.ts ===
export default class Service {
>Service : Symbol(Service, Decl(service.ts, 0, 0))
}
=== tests/cases/conformance/decorators/component.ts ===
import Service from "./service";
>Service : Symbol(Service, Decl(component.ts, 0, 6))

declare var decorator: any;
>decorator : Symbol(decorator, Decl(component.ts, 2, 11))

@decorator
>decorator : Symbol(decorator, Decl(component.ts, 2, 11))

class MyComponent {
>MyComponent : Symbol(MyComponent, Decl(component.ts, 2, 27))

    constructor(public Service: Service) {
>Service : Symbol(MyComponent.Service, Decl(component.ts, 6, 16))
>Service : Symbol(Service, Decl(component.ts, 0, 6))
    }

    @decorator
>decorator : Symbol(decorator, Decl(component.ts, 2, 11))

    method(x: this) {
>method : Symbol(MyComponent.method, Decl(component.ts, 7, 5))
>x : Symbol(x, Decl(component.ts, 10, 11))
    }
}

=== tests/cases/conformance/types/union/unionTypeReduction.ts ===
interface I2 {
>I2 : Symbol(I2, Decl(unionTypeReduction.ts, 0, 0))

    (): number;
    (q): boolean;
>q : Symbol(q, Decl(unionTypeReduction.ts, 2, 5))
}

interface I3 {
>I3 : Symbol(I3, Decl(unionTypeReduction.ts, 3, 1))

    (): number;
}

var i2: I2, i3: I3;
>i2 : Symbol(i2, Decl(unionTypeReduction.ts, 9, 3))
>I2 : Symbol(I2, Decl(unionTypeReduction.ts, 0, 0))
>i3 : Symbol(i3, Decl(unionTypeReduction.ts, 9, 11))
>I3 : Symbol(I3, Decl(unionTypeReduction.ts, 3, 1))

var e1: I2 | I3;
>e1 : Symbol(e1, Decl(unionTypeReduction.ts, 11, 3))
>I2 : Symbol(I2, Decl(unionTypeReduction.ts, 0, 0))
>I3 : Symbol(I3, Decl(unionTypeReduction.ts, 3, 1))

var e2 = i2 || i3;  // Type of e2 immediately reduced to I3
>e2 : Symbol(e2, Decl(unionTypeReduction.ts, 12, 3))
>i2 : Symbol(i2, Decl(unionTypeReduction.ts, 9, 3))
>i3 : Symbol(i3, Decl(unionTypeReduction.ts, 9, 11))

var r1 = e1();  // Type of e1 reduced to I3 upon accessing property or signature
>r1 : Symbol(r1, Decl(unionTypeReduction.ts, 14, 3))
>e1 : Symbol(e1, Decl(unionTypeReduction.ts, 11, 3))

var r2 = e2();
>r2 : Symbol(r2, Decl(unionTypeReduction.ts, 15, 3))
>e2 : Symbol(e2, Decl(unionTypeReduction.ts, 12, 3))


tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints3.ts(18,10): error TS2453: The type argument for type parameter 'T' cannot be inferred from the usage. Consider specifying the type arguments explicitly.
  Type argument candidate 'Derived' is not a valid type argument because it is not a supertype of candidate 'Derived2'.
    Property 'y' is missing in type 'Derived2'.


==== tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints3.ts (1 errors) ====
    // Generic call with constraints infering type parameter from object member properties
    
    class Base {
        x: string;
    }
    class Derived extends Base {
        y: string;
    }
    class Derived2 extends Base {
        z: string;
    }
    
    function f<T extends Base>(a: { x: T; y: T }) {
        var r: T;
        return r;
    }
    
    var r1 = f({ x: new Derived(), y: new Derived2() }); // error because neither is supertype of the other
             ~
!!! error TS2453: The type argument for type parameter 'T' cannot be inferred from the usage. Consider specifying the type arguments explicitly.
!!! error TS2453:   Type argument candidate 'Derived' is not a valid type argument because it is not a supertype of candidate 'Derived2'.
!!! error TS2453:     Property 'y' is missing in type 'Derived2'.
    
    function f2<T extends Base, U extends { x: T; y: T }>(a: U) {
        var r: T;
        return r;
    }
    
    var r2 = f2({ x: new Derived(), y: new Derived2() }); // ok
    var r3 = f2({ x: new Derived(), y: new Derived2() }); // ok
    
    
    function f3<T extends Base>(y: (a: T) => T, x: T) {
        return y(null);
    }
    
    // all ok - second argument is processed before x is fixed
    var r4 = f3(x => x, new Base());
    var r5 = f3(x => x, new Derived());
    var r6 = f3(x => x, null);
    
=== tests/cases/compiler/a.ts ===
class A {
>A : Symbol(A, Decl(a.ts, 0, 0), Decl(b.ts, 0, 0))

    protected foo() {}
>foo : Symbol(A.foo, Decl(a.ts, 0, 9))
}
=== tests/cases/compiler/b.ts ===
interface A { }
>A : Symbol(A, Decl(a.ts, 0, 0), Decl(b.ts, 0, 0))

class B extends A {
>B : Symbol(B, Decl(b.ts, 0, 15))
>A : Symbol(A, Decl(a.ts, 0, 0), Decl(b.ts, 0, 0))

    protected foo() {}
>foo : Symbol(B.foo, Decl(b.ts, 2, 19))
}

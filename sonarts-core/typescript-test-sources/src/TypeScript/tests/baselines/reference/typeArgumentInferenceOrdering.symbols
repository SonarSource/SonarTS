=== tests/cases/compiler/typeArgumentInferenceOrdering.ts ===
class C {
>C : Symbol(C, Decl(typeArgumentInferenceOrdering.ts, 0, 0))

    y: I;
>y : Symbol(C.y, Decl(typeArgumentInferenceOrdering.ts, 0, 9))
>I : Symbol(I, Decl(typeArgumentInferenceOrdering.ts, 2, 1))
}

interface I {
>I : Symbol(I, Decl(typeArgumentInferenceOrdering.ts, 2, 1))

    x(): Goo;
>x : Symbol(I.x, Decl(typeArgumentInferenceOrdering.ts, 4, 13))
>Goo : Symbol(Goo, Decl(typeArgumentInferenceOrdering.ts, 6, 1))
}

interface Goo {
>Goo : Symbol(Goo, Decl(typeArgumentInferenceOrdering.ts, 6, 1))

    p: string;
>p : Symbol(Goo.p, Decl(typeArgumentInferenceOrdering.ts, 8, 15))
}

function foo<T>(f: { y: T }): T { return null }
>foo : Symbol(foo, Decl(typeArgumentInferenceOrdering.ts, 10, 1))
>T : Symbol(T, Decl(typeArgumentInferenceOrdering.ts, 12, 13))
>f : Symbol(f, Decl(typeArgumentInferenceOrdering.ts, 12, 16))
>y : Symbol(y, Decl(typeArgumentInferenceOrdering.ts, 12, 20))
>T : Symbol(T, Decl(typeArgumentInferenceOrdering.ts, 12, 13))
>T : Symbol(T, Decl(typeArgumentInferenceOrdering.ts, 12, 13))

var x = foo(new C()).x; // was Error that property x does not exist on type {}
>x : Symbol(x, Decl(typeArgumentInferenceOrdering.ts, 13, 3))
>foo(new C()).x : Symbol(I.x, Decl(typeArgumentInferenceOrdering.ts, 4, 13))
>foo : Symbol(foo, Decl(typeArgumentInferenceOrdering.ts, 10, 1))
>C : Symbol(C, Decl(typeArgumentInferenceOrdering.ts, 0, 0))
>x : Symbol(I.x, Decl(typeArgumentInferenceOrdering.ts, 4, 13))


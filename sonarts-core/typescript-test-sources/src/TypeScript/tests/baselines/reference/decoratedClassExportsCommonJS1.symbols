=== tests/cases/conformance/decorators/class/decoratedClassExportsCommonJS1.ts ===
declare var Something: any;
>Something : Symbol(Something, Decl(decoratedClassExportsCommonJS1.ts, 0, 11))

@Something({ v: () => Testing123 })
>Something : Symbol(Something, Decl(decoratedClassExportsCommonJS1.ts, 0, 11))
>v : Symbol(v, Decl(decoratedClassExportsCommonJS1.ts, 1, 12))
>Testing123 : Symbol(Testing123, Decl(decoratedClassExportsCommonJS1.ts, 0, 27))

export class Testing123 {
>Testing123 : Symbol(Testing123, Decl(decoratedClassExportsCommonJS1.ts, 0, 27))

    static prop0: string;
>prop0 : Symbol(Testing123.prop0, Decl(decoratedClassExportsCommonJS1.ts, 2, 25))

    static prop1 = Testing123.prop0;
>prop1 : Symbol(Testing123.prop1, Decl(decoratedClassExportsCommonJS1.ts, 3, 25))
>Testing123.prop0 : Symbol(Testing123.prop0, Decl(decoratedClassExportsCommonJS1.ts, 2, 25))
>Testing123 : Symbol(Testing123, Decl(decoratedClassExportsCommonJS1.ts, 0, 27))
>prop0 : Symbol(Testing123.prop0, Decl(decoratedClassExportsCommonJS1.ts, 2, 25))
}

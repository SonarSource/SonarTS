=== tests/cases/compiler/genericConstraint3.ts ===
interface C<P> { x: P; }
>C : Symbol(C, Decl(genericConstraint3.ts, 0, 0))
>P : Symbol(P, Decl(genericConstraint3.ts, 0, 12))
>x : Symbol(C.x, Decl(genericConstraint3.ts, 0, 16))
>P : Symbol(P, Decl(genericConstraint3.ts, 0, 12))

interface A<T, U extends C<T>> { x: U; }
>A : Symbol(A, Decl(genericConstraint3.ts, 0, 24))
>T : Symbol(T, Decl(genericConstraint3.ts, 1, 12))
>U : Symbol(U, Decl(genericConstraint3.ts, 1, 14))
>C : Symbol(C, Decl(genericConstraint3.ts, 0, 0))
>T : Symbol(T, Decl(genericConstraint3.ts, 1, 12))
>x : Symbol(A.x, Decl(genericConstraint3.ts, 1, 32))
>U : Symbol(U, Decl(genericConstraint3.ts, 1, 14))

interface B extends A<{}, { x: {} }> { } // Should not produce an error
>B : Symbol(B, Decl(genericConstraint3.ts, 1, 40))
>A : Symbol(A, Decl(genericConstraint3.ts, 0, 24))
>x : Symbol(x, Decl(genericConstraint3.ts, 2, 27))


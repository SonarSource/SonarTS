=== tests/cases/compiler/newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts ===
interface I<T> {
>I : Symbol(I, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 0, 0))
>T : Symbol(T, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 0, 12))

    new <U extends T>(u: U): U;
>U : Symbol(U, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 1, 9))
>T : Symbol(T, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 0, 12))
>u : Symbol(u, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 1, 22))
>U : Symbol(U, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 1, 9))
>U : Symbol(U, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 1, 9))
}
var i: I<string>;
>i : Symbol(i, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 3, 3))
>I : Symbol(I, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 0, 0))

var y = new i(""); // y should be string
>y : Symbol(y, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 4, 3))
>i : Symbol(i, Decl(newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts, 3, 3))


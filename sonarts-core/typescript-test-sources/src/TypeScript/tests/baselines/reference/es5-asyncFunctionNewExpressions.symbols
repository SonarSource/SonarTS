=== tests/cases/compiler/es5-asyncFunctionNewExpressions.ts ===
declare var x, y, z, a, b, c;
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
>a : Symbol(a, Decl(es5-asyncFunctionNewExpressions.ts, 0, 20))
>b : Symbol(b, Decl(es5-asyncFunctionNewExpressions.ts, 0, 23))
>c : Symbol(c, Decl(es5-asyncFunctionNewExpressions.ts, 0, 26))

async function newExpression0() {
>newExpression0 : Symbol(newExpression0, Decl(es5-asyncFunctionNewExpressions.ts, 0, 29))

    await new x(y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression1() {
>newExpression1 : Symbol(newExpression1, Decl(es5-asyncFunctionNewExpressions.ts, 4, 1))

    new (await x)(y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression2() {
>newExpression2 : Symbol(newExpression2, Decl(es5-asyncFunctionNewExpressions.ts, 8, 1))

    new x(await y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression3() {
>newExpression3 : Symbol(newExpression3, Decl(es5-asyncFunctionNewExpressions.ts, 12, 1))

    new x(y, await z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression4() {
>newExpression4 : Symbol(newExpression4, Decl(es5-asyncFunctionNewExpressions.ts, 16, 1))

    await new x(...y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression5() {
>newExpression5 : Symbol(newExpression5, Decl(es5-asyncFunctionNewExpressions.ts, 20, 1))

    new (await x)(...y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression6() {
>newExpression6 : Symbol(newExpression6, Decl(es5-asyncFunctionNewExpressions.ts, 24, 1))

    new x(...(await y), z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression7() {
>newExpression7 : Symbol(newExpression7, Decl(es5-asyncFunctionNewExpressions.ts, 28, 1))

    new x(...y, await z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression8() {
>newExpression8 : Symbol(newExpression8, Decl(es5-asyncFunctionNewExpressions.ts, 32, 1))

    new x(await y, ...z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression9() {
>newExpression9 : Symbol(newExpression9, Decl(es5-asyncFunctionNewExpressions.ts, 36, 1))

    new x(y, ...(await z));
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression10() {
>newExpression10 : Symbol(newExpression10, Decl(es5-asyncFunctionNewExpressions.ts, 40, 1))

    await new x.a(y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression11() {
>newExpression11 : Symbol(newExpression11, Decl(es5-asyncFunctionNewExpressions.ts, 44, 1))

    new (await x.a)(y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression12() {
>newExpression12 : Symbol(newExpression12, Decl(es5-asyncFunctionNewExpressions.ts, 48, 1))

    new (await x).a(y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression13() {
>newExpression13 : Symbol(newExpression13, Decl(es5-asyncFunctionNewExpressions.ts, 52, 1))

    new x.a(await y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression14() {
>newExpression14 : Symbol(newExpression14, Decl(es5-asyncFunctionNewExpressions.ts, 56, 1))

    new x.a(y, await z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression15() {
>newExpression15 : Symbol(newExpression15, Decl(es5-asyncFunctionNewExpressions.ts, 60, 1))

    await new x[a](y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>a : Symbol(a, Decl(es5-asyncFunctionNewExpressions.ts, 0, 20))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression16() {
>newExpression16 : Symbol(newExpression16, Decl(es5-asyncFunctionNewExpressions.ts, 64, 1))

    new (await x[a])(y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>a : Symbol(a, Decl(es5-asyncFunctionNewExpressions.ts, 0, 20))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression17() {
>newExpression17 : Symbol(newExpression17, Decl(es5-asyncFunctionNewExpressions.ts, 68, 1))

    new (await x)[a](y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>a : Symbol(a, Decl(es5-asyncFunctionNewExpressions.ts, 0, 20))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression18() {
>newExpression18 : Symbol(newExpression18, Decl(es5-asyncFunctionNewExpressions.ts, 72, 1))

    new x[await a](y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>a : Symbol(a, Decl(es5-asyncFunctionNewExpressions.ts, 0, 20))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression19() {
>newExpression19 : Symbol(newExpression19, Decl(es5-asyncFunctionNewExpressions.ts, 76, 1))

    new x[a](await y, z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>a : Symbol(a, Decl(es5-asyncFunctionNewExpressions.ts, 0, 20))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

async function newExpression20() {
>newExpression20 : Symbol(newExpression20, Decl(es5-asyncFunctionNewExpressions.ts, 80, 1))

    new x[a](y, await z);
>x : Symbol(x, Decl(es5-asyncFunctionNewExpressions.ts, 0, 11))
>a : Symbol(a, Decl(es5-asyncFunctionNewExpressions.ts, 0, 20))
>y : Symbol(y, Decl(es5-asyncFunctionNewExpressions.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionNewExpressions.ts, 0, 17))
}

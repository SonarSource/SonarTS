=== tests/cases/compiler/assignmentCompatForEnums.ts ===
enum TokenType { One, Two };
>TokenType : Symbol(TokenType, Decl(assignmentCompatForEnums.ts, 0, 0))
>One : Symbol(TokenType.One, Decl(assignmentCompatForEnums.ts, 0, 16))
>Two : Symbol(TokenType.Two, Decl(assignmentCompatForEnums.ts, 0, 21))

var list = {};
>list : Symbol(list, Decl(assignmentCompatForEnums.ts, 2, 3))


function returnType(): TokenType { return null; }
>returnType : Symbol(returnType, Decl(assignmentCompatForEnums.ts, 2, 14))
>TokenType : Symbol(TokenType, Decl(assignmentCompatForEnums.ts, 0, 0))

function foo() {
>foo : Symbol(foo, Decl(assignmentCompatForEnums.ts, 5, 49))

    var x = returnType();
>x : Symbol(x, Decl(assignmentCompatForEnums.ts, 8, 7), Decl(assignmentCompatForEnums.ts, 10, 7))
>returnType : Symbol(returnType, Decl(assignmentCompatForEnums.ts, 2, 14))

    var x: TokenType = list['one'];
>x : Symbol(x, Decl(assignmentCompatForEnums.ts, 8, 7), Decl(assignmentCompatForEnums.ts, 10, 7))
>TokenType : Symbol(TokenType, Decl(assignmentCompatForEnums.ts, 0, 0))
>list : Symbol(list, Decl(assignmentCompatForEnums.ts, 2, 3))
}



=== tests/cases/compiler/nestedInfinitelyExpandedRecursiveTypes.ts ===
interface F<T> {
>F : Symbol(F, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 0, 0))
>T : Symbol(T, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 0, 12))

      t: G<F<() => T>>;
>t : Symbol(F.t, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 0, 16))
>G : Symbol(G, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 2, 1))
>F : Symbol(F, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 0, 0))
>T : Symbol(T, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 0, 12))
}
interface G<U> {
>G : Symbol(G, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 2, 1))
>U : Symbol(U, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 3, 12))

      t: G<G<() => U>>;
>t : Symbol(G.t, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 3, 16))
>G : Symbol(G, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 2, 1))
>G : Symbol(G, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 2, 1))
>U : Symbol(U, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 3, 12))
}
 
var f: F<string>;
>f : Symbol(f, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 7, 3))
>F : Symbol(F, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 0, 0))

var g: G<string>;
>g : Symbol(g, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 8, 3))
>G : Symbol(G, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 2, 1))

f = g;
>f : Symbol(f, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 7, 3))
>g : Symbol(g, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 8, 3))

g = f;
>g : Symbol(g, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 8, 3))
>f : Symbol(f, Decl(nestedInfinitelyExpandedRecursiveTypes.ts, 7, 3))


=== tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesWithOptionalParameters.ts ===
// Optional parameters should be valid in all the below casts

function foo(x?: number) { }
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 0, 0))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 2, 13))

var f = function foo(x?: number) { }
>f : Symbol(f, Decl(callSignaturesWithOptionalParameters.ts, 3, 3))
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 3, 7))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 3, 21))

var f2 = (x: number, y?: number) => { }
>f2 : Symbol(f2, Decl(callSignaturesWithOptionalParameters.ts, 4, 3))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 4, 10))
>y : Symbol(y, Decl(callSignaturesWithOptionalParameters.ts, 4, 20))

foo(1);
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 0, 0))

foo();
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 0, 0))

f(1);
>f : Symbol(f, Decl(callSignaturesWithOptionalParameters.ts, 3, 3))

f();
>f : Symbol(f, Decl(callSignaturesWithOptionalParameters.ts, 3, 3))

f2(1);
>f2 : Symbol(f2, Decl(callSignaturesWithOptionalParameters.ts, 4, 3))

f2(1, 2);
>f2 : Symbol(f2, Decl(callSignaturesWithOptionalParameters.ts, 4, 3))

class C {
>C : Symbol(C, Decl(callSignaturesWithOptionalParameters.ts, 11, 9))

    foo(x?: number) { }
>foo : Symbol(C.foo, Decl(callSignaturesWithOptionalParameters.ts, 13, 9))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 14, 8))
}

var c: C;
>c : Symbol(c, Decl(callSignaturesWithOptionalParameters.ts, 17, 3))
>C : Symbol(C, Decl(callSignaturesWithOptionalParameters.ts, 11, 9))

c.foo();
>c.foo : Symbol(C.foo, Decl(callSignaturesWithOptionalParameters.ts, 13, 9))
>c : Symbol(c, Decl(callSignaturesWithOptionalParameters.ts, 17, 3))
>foo : Symbol(C.foo, Decl(callSignaturesWithOptionalParameters.ts, 13, 9))

c.foo(1);
>c.foo : Symbol(C.foo, Decl(callSignaturesWithOptionalParameters.ts, 13, 9))
>c : Symbol(c, Decl(callSignaturesWithOptionalParameters.ts, 17, 3))
>foo : Symbol(C.foo, Decl(callSignaturesWithOptionalParameters.ts, 13, 9))

interface I {
>I : Symbol(I, Decl(callSignaturesWithOptionalParameters.ts, 19, 9))

    (x?: number);
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 22, 5))

    foo(x: number, y?: number);
>foo : Symbol(I.foo, Decl(callSignaturesWithOptionalParameters.ts, 22, 17))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 23, 8))
>y : Symbol(y, Decl(callSignaturesWithOptionalParameters.ts, 23, 18))
}

var i: I;
>i : Symbol(i, Decl(callSignaturesWithOptionalParameters.ts, 26, 3))
>I : Symbol(I, Decl(callSignaturesWithOptionalParameters.ts, 19, 9))

i();
>i : Symbol(i, Decl(callSignaturesWithOptionalParameters.ts, 26, 3))

i(1);
>i : Symbol(i, Decl(callSignaturesWithOptionalParameters.ts, 26, 3))

i.foo(1);
>i.foo : Symbol(I.foo, Decl(callSignaturesWithOptionalParameters.ts, 22, 17))
>i : Symbol(i, Decl(callSignaturesWithOptionalParameters.ts, 26, 3))
>foo : Symbol(I.foo, Decl(callSignaturesWithOptionalParameters.ts, 22, 17))

i.foo(1, 2);
>i.foo : Symbol(I.foo, Decl(callSignaturesWithOptionalParameters.ts, 22, 17))
>i : Symbol(i, Decl(callSignaturesWithOptionalParameters.ts, 26, 3))
>foo : Symbol(I.foo, Decl(callSignaturesWithOptionalParameters.ts, 22, 17))

var a: {
>a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 32, 3))

    (x?: number);
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 33, 5))

    foo(x?: number);
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 33, 17))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 34, 8))
}

a();
>a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 32, 3))

a(1);
>a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 32, 3))

a.foo();
>a.foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 33, 17))
>a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 32, 3))
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 33, 17))

a.foo(1);
>a.foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 33, 17))
>a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 32, 3))
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 33, 17))

var b = {
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 42, 3))

    foo(x?: number) { },
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 42, 9))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 43, 8))

    a: function foo(x: number, y?: number) { },
>a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 43, 24))
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 44, 6))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 44, 20))
>y : Symbol(y, Decl(callSignaturesWithOptionalParameters.ts, 44, 30))

    b: (x?: number) => { }
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 44, 47))
>x : Symbol(x, Decl(callSignaturesWithOptionalParameters.ts, 45, 8))
}

b.foo();
>b.foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 42, 9))
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 42, 3))
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 42, 9))

b.foo(1);
>b.foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 42, 9))
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 42, 3))
>foo : Symbol(foo, Decl(callSignaturesWithOptionalParameters.ts, 42, 9))

b.a(1);
>b.a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 43, 24))
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 42, 3))
>a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 43, 24))

b.a(1, 2);
>b.a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 43, 24))
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 42, 3))
>a : Symbol(a, Decl(callSignaturesWithOptionalParameters.ts, 43, 24))

b.b();
>b.b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 44, 47))
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 42, 3))
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 44, 47))

b.b(1);
>b.b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 44, 47))
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 42, 3))
>b : Symbol(b, Decl(callSignaturesWithOptionalParameters.ts, 44, 47))


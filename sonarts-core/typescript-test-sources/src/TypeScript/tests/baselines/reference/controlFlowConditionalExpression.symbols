=== tests/cases/conformance/controlFlow/controlFlowConditionalExpression.ts ===
let x: string | number | boolean;
>x : Symbol(x, Decl(controlFlowConditionalExpression.ts, 0, 3))

let cond: boolean;
>cond : Symbol(cond, Decl(controlFlowConditionalExpression.ts, 1, 3))

cond ? x = "" : x = 3;
>cond : Symbol(cond, Decl(controlFlowConditionalExpression.ts, 1, 3))
>x : Symbol(x, Decl(controlFlowConditionalExpression.ts, 0, 3))
>x : Symbol(x, Decl(controlFlowConditionalExpression.ts, 0, 3))

x; // string | number
>x : Symbol(x, Decl(controlFlowConditionalExpression.ts, 0, 3))


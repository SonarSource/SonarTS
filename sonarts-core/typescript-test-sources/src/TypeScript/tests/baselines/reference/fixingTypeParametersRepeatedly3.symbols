=== tests/cases/compiler/fixingTypeParametersRepeatedly3.ts ===
interface Base {
>Base : Symbol(Base, Decl(fixingTypeParametersRepeatedly3.ts, 0, 0))

    baseProp;
>baseProp : Symbol(Base.baseProp, Decl(fixingTypeParametersRepeatedly3.ts, 0, 16))
}
interface Derived extends Base {
>Derived : Symbol(Derived, Decl(fixingTypeParametersRepeatedly3.ts, 2, 1))
>Base : Symbol(Base, Decl(fixingTypeParametersRepeatedly3.ts, 0, 0))

    toBase?(): Base;
>toBase : Symbol(Derived.toBase, Decl(fixingTypeParametersRepeatedly3.ts, 3, 32))
>Base : Symbol(Base, Decl(fixingTypeParametersRepeatedly3.ts, 0, 0))
}

var derived: Derived;
>derived : Symbol(derived, Decl(fixingTypeParametersRepeatedly3.ts, 7, 3))
>Derived : Symbol(Derived, Decl(fixingTypeParametersRepeatedly3.ts, 2, 1))

declare function foo<T>(x: T, func: (p: T) => T): T;
>foo : Symbol(foo, Decl(fixingTypeParametersRepeatedly3.ts, 7, 21))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 9, 21))
>x : Symbol(x, Decl(fixingTypeParametersRepeatedly3.ts, 9, 24))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 9, 21))
>func : Symbol(func, Decl(fixingTypeParametersRepeatedly3.ts, 9, 29))
>p : Symbol(p, Decl(fixingTypeParametersRepeatedly3.ts, 9, 37))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 9, 21))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 9, 21))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 9, 21))

var result = foo(derived, d => d.toBase());
>result : Symbol(result, Decl(fixingTypeParametersRepeatedly3.ts, 10, 3))
>foo : Symbol(foo, Decl(fixingTypeParametersRepeatedly3.ts, 7, 21))
>derived : Symbol(derived, Decl(fixingTypeParametersRepeatedly3.ts, 7, 3))
>d : Symbol(d, Decl(fixingTypeParametersRepeatedly3.ts, 10, 25))
>d.toBase : Symbol(Derived.toBase, Decl(fixingTypeParametersRepeatedly3.ts, 3, 32))
>d : Symbol(d, Decl(fixingTypeParametersRepeatedly3.ts, 10, 25))
>toBase : Symbol(Derived.toBase, Decl(fixingTypeParametersRepeatedly3.ts, 3, 32))

// bar should type check just like foo.
// result2 should have the same type as result
declare function bar<T>(x: T, func: (p: T) => T): T;
>bar : Symbol(bar, Decl(fixingTypeParametersRepeatedly3.ts, 10, 43), Decl(fixingTypeParametersRepeatedly3.ts, 14, 52))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 14, 21))
>x : Symbol(x, Decl(fixingTypeParametersRepeatedly3.ts, 14, 24))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 14, 21))
>func : Symbol(func, Decl(fixingTypeParametersRepeatedly3.ts, 14, 29))
>p : Symbol(p, Decl(fixingTypeParametersRepeatedly3.ts, 14, 37))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 14, 21))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 14, 21))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 14, 21))

declare function bar<T>(x: T, func: (p: T) => T): T;
>bar : Symbol(bar, Decl(fixingTypeParametersRepeatedly3.ts, 10, 43), Decl(fixingTypeParametersRepeatedly3.ts, 14, 52))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 15, 21))
>x : Symbol(x, Decl(fixingTypeParametersRepeatedly3.ts, 15, 24))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 15, 21))
>func : Symbol(func, Decl(fixingTypeParametersRepeatedly3.ts, 15, 29))
>p : Symbol(p, Decl(fixingTypeParametersRepeatedly3.ts, 15, 37))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 15, 21))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 15, 21))
>T : Symbol(T, Decl(fixingTypeParametersRepeatedly3.ts, 15, 21))

var result2 = bar(derived, d => d.toBase());
>result2 : Symbol(result2, Decl(fixingTypeParametersRepeatedly3.ts, 16, 3))
>bar : Symbol(bar, Decl(fixingTypeParametersRepeatedly3.ts, 10, 43), Decl(fixingTypeParametersRepeatedly3.ts, 14, 52))
>derived : Symbol(derived, Decl(fixingTypeParametersRepeatedly3.ts, 7, 3))
>d : Symbol(d, Decl(fixingTypeParametersRepeatedly3.ts, 16, 26))
>d.toBase : Symbol(Derived.toBase, Decl(fixingTypeParametersRepeatedly3.ts, 3, 32))
>d : Symbol(d, Decl(fixingTypeParametersRepeatedly3.ts, 16, 26))
>toBase : Symbol(Derived.toBase, Decl(fixingTypeParametersRepeatedly3.ts, 3, 32))


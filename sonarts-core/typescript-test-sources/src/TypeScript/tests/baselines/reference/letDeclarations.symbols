=== tests/cases/compiler/letDeclarations.ts ===
let l1;
>l1 : Symbol(l1, Decl(letDeclarations.ts, 0, 3))

let l2: number;
>l2 : Symbol(l2, Decl(letDeclarations.ts, 1, 3))

let l3, l4, l5 :string, l6;
>l3 : Symbol(l3, Decl(letDeclarations.ts, 2, 3))
>l4 : Symbol(l4, Decl(letDeclarations.ts, 2, 7))
>l5 : Symbol(l5, Decl(letDeclarations.ts, 2, 11))
>l6 : Symbol(l6, Decl(letDeclarations.ts, 2, 23))

let l7 = false;
>l7 : Symbol(l7, Decl(letDeclarations.ts, 4, 3))

let l8: number = 23;
>l8 : Symbol(l8, Decl(letDeclarations.ts, 5, 3))

let l9 = 0, l10 :string = "", l11 = null;
>l9 : Symbol(l9, Decl(letDeclarations.ts, 6, 3))
>l10 : Symbol(l10, Decl(letDeclarations.ts, 6, 11))
>l11 : Symbol(l11, Decl(letDeclarations.ts, 6, 29))

for(let l11 in {}) { }
>l11 : Symbol(l11, Decl(letDeclarations.ts, 8, 7))

for(let l12 = 0; l12 < 9; l12++) { }
>l12 : Symbol(l12, Decl(letDeclarations.ts, 10, 7))
>l12 : Symbol(l12, Decl(letDeclarations.ts, 10, 7))
>l12 : Symbol(l12, Decl(letDeclarations.ts, 10, 7))


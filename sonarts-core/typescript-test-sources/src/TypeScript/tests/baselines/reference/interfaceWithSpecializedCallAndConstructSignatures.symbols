=== tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithSpecializedCallAndConstructSignatures.ts ===
interface Foo {
>Foo : Symbol(Foo, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 0, 0))

    (x: 'a'): number;
>x : Symbol(x, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 1, 5))

    (x: string): any;
>x : Symbol(x, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 2, 5))

    new (x: 'a'): any;
>x : Symbol(x, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 4, 9))

    new (x: string): Object;
>x : Symbol(x, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 5, 9))
>Object : Symbol(Object, Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --))
}

var f: Foo;
>f : Symbol(f, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 8, 3))
>Foo : Symbol(Foo, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 0, 0))

var r = f('a');
>r : Symbol(r, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 9, 3))
>f : Symbol(f, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 8, 3))

var r2 = f('A');
>r2 : Symbol(r2, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 10, 3))
>f : Symbol(f, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 8, 3))

var r3 = new f('a');
>r3 : Symbol(r3, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 11, 3))
>f : Symbol(f, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 8, 3))

var r4 = new f('A');
>r4 : Symbol(r4, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 12, 3))
>f : Symbol(f, Decl(interfaceWithSpecializedCallAndConstructSignatures.ts, 8, 3))


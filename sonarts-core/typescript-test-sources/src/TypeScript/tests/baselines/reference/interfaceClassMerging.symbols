=== tests/cases/compiler/interfaceClassMerging.ts ===
interface Foo {
>Foo : Symbol(Foo, Decl(interfaceClassMerging.ts, 0, 0), Decl(interfaceClassMerging.ts, 5, 1))

    method(a: number): string;
>method : Symbol(Foo.method, Decl(interfaceClassMerging.ts, 0, 15))
>a : Symbol(a, Decl(interfaceClassMerging.ts, 1, 11))

    optionalMethod?(a: number): string;
>optionalMethod : Symbol(Foo.optionalMethod, Decl(interfaceClassMerging.ts, 1, 30))
>a : Symbol(a, Decl(interfaceClassMerging.ts, 2, 20))

    property: string;
>property : Symbol(Foo.property, Decl(interfaceClassMerging.ts, 2, 39))

    optionalProperty?: string;
>optionalProperty : Symbol(Foo.optionalProperty, Decl(interfaceClassMerging.ts, 3, 21))
}

class Foo {
>Foo : Symbol(Foo, Decl(interfaceClassMerging.ts, 0, 0), Decl(interfaceClassMerging.ts, 5, 1))

    additionalProperty: string;
>additionalProperty : Symbol(Foo.additionalProperty, Decl(interfaceClassMerging.ts, 7, 11))

    additionalMethod(a: number): string {
>additionalMethod : Symbol(Foo.additionalMethod, Decl(interfaceClassMerging.ts, 8, 31))
>a : Symbol(a, Decl(interfaceClassMerging.ts, 10, 21))

        return this.method(0);
>this.method : Symbol(Foo.method, Decl(interfaceClassMerging.ts, 0, 15))
>this : Symbol(Foo, Decl(interfaceClassMerging.ts, 0, 0), Decl(interfaceClassMerging.ts, 5, 1))
>method : Symbol(Foo.method, Decl(interfaceClassMerging.ts, 0, 15))
    }
}

class Bar extends Foo {
>Bar : Symbol(Bar, Decl(interfaceClassMerging.ts, 13, 1))
>Foo : Symbol(Foo, Decl(interfaceClassMerging.ts, 0, 0), Decl(interfaceClassMerging.ts, 5, 1))

    method(a: number) {
>method : Symbol(Bar.method, Decl(interfaceClassMerging.ts, 15, 23))
>a : Symbol(a, Decl(interfaceClassMerging.ts, 16, 11))

        return this.optionalProperty;
>this.optionalProperty : Symbol(Foo.optionalProperty, Decl(interfaceClassMerging.ts, 3, 21))
>this : Symbol(Bar, Decl(interfaceClassMerging.ts, 13, 1))
>optionalProperty : Symbol(Foo.optionalProperty, Decl(interfaceClassMerging.ts, 3, 21))
    }
}


var bar = new Bar();
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))
>Bar : Symbol(Bar, Decl(interfaceClassMerging.ts, 13, 1))

bar.method(0);
>bar.method : Symbol(Bar.method, Decl(interfaceClassMerging.ts, 15, 23))
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))
>method : Symbol(Bar.method, Decl(interfaceClassMerging.ts, 15, 23))

bar.optionalMethod(1);
>bar.optionalMethod : Symbol(Foo.optionalMethod, Decl(interfaceClassMerging.ts, 1, 30))
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))
>optionalMethod : Symbol(Foo.optionalMethod, Decl(interfaceClassMerging.ts, 1, 30))

bar.property;
>bar.property : Symbol(Foo.property, Decl(interfaceClassMerging.ts, 2, 39))
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))
>property : Symbol(Foo.property, Decl(interfaceClassMerging.ts, 2, 39))

bar.optionalProperty;
>bar.optionalProperty : Symbol(Foo.optionalProperty, Decl(interfaceClassMerging.ts, 3, 21))
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))
>optionalProperty : Symbol(Foo.optionalProperty, Decl(interfaceClassMerging.ts, 3, 21))

bar.additionalProperty;
>bar.additionalProperty : Symbol(Foo.additionalProperty, Decl(interfaceClassMerging.ts, 7, 11))
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))
>additionalProperty : Symbol(Foo.additionalProperty, Decl(interfaceClassMerging.ts, 7, 11))

bar.additionalMethod(2);
>bar.additionalMethod : Symbol(Foo.additionalMethod, Decl(interfaceClassMerging.ts, 8, 31))
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))
>additionalMethod : Symbol(Foo.additionalMethod, Decl(interfaceClassMerging.ts, 8, 31))

var obj: {
>obj : Symbol(obj, Decl(interfaceClassMerging.ts, 30, 3))

    method(a: number): string;
>method : Symbol(method, Decl(interfaceClassMerging.ts, 30, 10))
>a : Symbol(a, Decl(interfaceClassMerging.ts, 31, 11))

    property: string;
>property : Symbol(property, Decl(interfaceClassMerging.ts, 31, 30))

    additionalProperty: string;
>additionalProperty : Symbol(additionalProperty, Decl(interfaceClassMerging.ts, 32, 21))

    additionalMethod(a: number): string;
>additionalMethod : Symbol(additionalMethod, Decl(interfaceClassMerging.ts, 33, 31))
>a : Symbol(a, Decl(interfaceClassMerging.ts, 34, 21))

};

bar = obj;
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))
>obj : Symbol(obj, Decl(interfaceClassMerging.ts, 30, 3))

obj = bar;
>obj : Symbol(obj, Decl(interfaceClassMerging.ts, 30, 3))
>bar : Symbol(bar, Decl(interfaceClassMerging.ts, 22, 3))


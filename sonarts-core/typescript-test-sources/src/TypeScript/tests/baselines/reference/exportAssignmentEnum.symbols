=== tests/cases/compiler/exportAssignmentEnum_B.ts ===
import EnumE = require("./exportAssignmentEnum_A");
>EnumE : Symbol(EnumE, Decl(exportAssignmentEnum_B.ts, 0, 0))

var a = EnumE.A;
>a : Symbol(a, Decl(exportAssignmentEnum_B.ts, 2, 3))
>EnumE.A : Symbol(EnumE.A, Decl(exportAssignmentEnum_A.ts, 0, 8))
>EnumE : Symbol(EnumE, Decl(exportAssignmentEnum_B.ts, 0, 0))
>A : Symbol(EnumE.A, Decl(exportAssignmentEnum_A.ts, 0, 8))

var b = EnumE.B;
>b : Symbol(b, Decl(exportAssignmentEnum_B.ts, 3, 3))
>EnumE.B : Symbol(EnumE.B, Decl(exportAssignmentEnum_A.ts, 1, 3))
>EnumE : Symbol(EnumE, Decl(exportAssignmentEnum_B.ts, 0, 0))
>B : Symbol(EnumE.B, Decl(exportAssignmentEnum_A.ts, 1, 3))

var c = EnumE.C;
>c : Symbol(c, Decl(exportAssignmentEnum_B.ts, 4, 3))
>EnumE.C : Symbol(EnumE.C, Decl(exportAssignmentEnum_A.ts, 2, 3))
>EnumE : Symbol(EnumE, Decl(exportAssignmentEnum_B.ts, 0, 0))
>C : Symbol(EnumE.C, Decl(exportAssignmentEnum_A.ts, 2, 3))

=== tests/cases/compiler/exportAssignmentEnum_A.ts ===
enum E {
>E : Symbol(E, Decl(exportAssignmentEnum_A.ts, 0, 0))

	A,
>A : Symbol(E.A, Decl(exportAssignmentEnum_A.ts, 0, 8))

	B,
>B : Symbol(E.B, Decl(exportAssignmentEnum_A.ts, 1, 3))

	C,
>C : Symbol(E.C, Decl(exportAssignmentEnum_A.ts, 2, 3))
}

export = E;
>E : Symbol(E, Decl(exportAssignmentEnum_A.ts, 0, 0))


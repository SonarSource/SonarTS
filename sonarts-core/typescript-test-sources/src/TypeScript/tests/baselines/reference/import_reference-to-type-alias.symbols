=== tests/cases/compiler/file2.ts ===
import appJs = require("file1");
>appJs : Symbol(appJs, Decl(file2.ts, 0, 0))

import Services = appJs.App.Services;
>Services : Symbol(Services, Decl(file2.ts, 0, 32))
>appJs : Symbol(appJs, Decl(file2.ts, 0, 0))
>App : Symbol(appJs.App, Decl(file1.ts, 0, 0))
>Services : Symbol(Services, Decl(file1.ts, 0, 19))

var x = new Services.UserServices().getUserName();
>x : Symbol(x, Decl(file2.ts, 2, 3))
>new Services.UserServices().getUserName : Symbol(Services.UserServices.getUserName, Decl(file1.ts, 2, 35))
>Services.UserServices : Symbol(Services.UserServices, Decl(file1.ts, 1, 28))
>Services : Symbol(Services, Decl(file2.ts, 0, 32))
>UserServices : Symbol(Services.UserServices, Decl(file1.ts, 1, 28))
>getUserName : Symbol(Services.UserServices.getUserName, Decl(file1.ts, 2, 35))

=== tests/cases/compiler/file1.ts ===
export module App {
>App : Symbol(App, Decl(file1.ts, 0, 0))

    export module Services {
>Services : Symbol(Services, Decl(file1.ts, 0, 19))

        export class UserServices {
>UserServices : Symbol(UserServices, Decl(file1.ts, 1, 28))

            public getUserName(): string {
>getUserName : Symbol(UserServices.getUserName, Decl(file1.ts, 2, 35))

                return "Bill Gates";
            }
        }
    }
}


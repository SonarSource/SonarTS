=== tests/cases/compiler/instantiateConstraintsToTypeArguments2.ts ===
interface A<T extends A<T, S>, S extends A<T, S>> { }
>A : Symbol(A, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 0))
>T : Symbol(T, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 12))
>A : Symbol(A, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 0))
>T : Symbol(T, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 12))
>S : Symbol(S, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 30))
>S : Symbol(S, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 30))
>A : Symbol(A, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 0))
>T : Symbol(T, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 12))
>S : Symbol(S, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 30))

interface B<T extends B<T, S>, S extends B<T, S>> extends A<B<T, S>, B<T, S>> { }
>B : Symbol(B, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 53))
>T : Symbol(T, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 12))
>B : Symbol(B, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 53))
>T : Symbol(T, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 12))
>S : Symbol(S, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 30))
>S : Symbol(S, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 30))
>B : Symbol(B, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 53))
>T : Symbol(T, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 12))
>S : Symbol(S, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 30))
>A : Symbol(A, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 0))
>B : Symbol(B, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 53))
>T : Symbol(T, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 12))
>S : Symbol(S, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 30))
>B : Symbol(B, Decl(instantiateConstraintsToTypeArguments2.ts, 0, 53))
>T : Symbol(T, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 12))
>S : Symbol(S, Decl(instantiateConstraintsToTypeArguments2.ts, 1, 30))


=== tests/cases/compiler/es5-asyncFunctionForInStatements.ts ===
declare var x, y, z, a, b, c;
>x : Symbol(x, Decl(es5-asyncFunctionForInStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
>a : Symbol(a, Decl(es5-asyncFunctionForInStatements.ts, 0, 20))
>b : Symbol(b, Decl(es5-asyncFunctionForInStatements.ts, 0, 23))
>c : Symbol(c, Decl(es5-asyncFunctionForInStatements.ts, 0, 26))

async function forInStatement0() {
>forInStatement0 : Symbol(forInStatement0, Decl(es5-asyncFunctionForInStatements.ts, 0, 29))

    for (x in y) { z; }
>x : Symbol(x, Decl(es5-asyncFunctionForInStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

async function forInStatement1() {
>forInStatement1 : Symbol(forInStatement1, Decl(es5-asyncFunctionForInStatements.ts, 4, 1))

    for (x in await y) { z; }
>x : Symbol(x, Decl(es5-asyncFunctionForInStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

async function forInStatement2() {
>forInStatement2 : Symbol(forInStatement2, Decl(es5-asyncFunctionForInStatements.ts, 8, 1))

    for (x in y) { await z; }
>x : Symbol(x, Decl(es5-asyncFunctionForInStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

async function forInStatement3() {
>forInStatement3 : Symbol(forInStatement3, Decl(es5-asyncFunctionForInStatements.ts, 12, 1))

    for ((await x).a in y) { z; }
>x : Symbol(x, Decl(es5-asyncFunctionForInStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

async function forInStatement4() {
>forInStatement4 : Symbol(forInStatement4, Decl(es5-asyncFunctionForInStatements.ts, 16, 1))

    for (x.a in await y) { z; }
>x : Symbol(x, Decl(es5-asyncFunctionForInStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

async function forInStatement5() {
>forInStatement5 : Symbol(forInStatement5, Decl(es5-asyncFunctionForInStatements.ts, 20, 1))

    for (x.a in y) { await z; }
>x : Symbol(x, Decl(es5-asyncFunctionForInStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

async function forInStatement6() {
>forInStatement6 : Symbol(forInStatement6, Decl(es5-asyncFunctionForInStatements.ts, 24, 1))

    for (var a in y) { z; }
>a : Symbol(a, Decl(es5-asyncFunctionForInStatements.ts, 27, 12))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

async function forInStatement7() {
>forInStatement7 : Symbol(forInStatement7, Decl(es5-asyncFunctionForInStatements.ts, 28, 1))

    for (var b in await y) { z; }
>b : Symbol(b, Decl(es5-asyncFunctionForInStatements.ts, 31, 12))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

async function forInStatement8() {
>forInStatement8 : Symbol(forInStatement8, Decl(es5-asyncFunctionForInStatements.ts, 32, 1))

    for (var c in y) { await z; }
>c : Symbol(c, Decl(es5-asyncFunctionForInStatements.ts, 35, 12))
>y : Symbol(y, Decl(es5-asyncFunctionForInStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionForInStatements.ts, 0, 17))
}

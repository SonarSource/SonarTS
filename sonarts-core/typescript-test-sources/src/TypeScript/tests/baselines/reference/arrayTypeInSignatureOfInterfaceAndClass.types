=== tests/cases/compiler/arrayTypeInSignatureOfInterfaceAndClass.ts ===
declare module WinJS {
>WinJS : typeof WinJS

    class Promise<T> {
>Promise : Promise<T>
>T : T

        then<U>(success?: (value: T) => Promise<U>, error?: (error: any) => Promise<U>, progress?: (progress: any) => void): Promise<U>;
>then : <U>(success?: (value: T) => Promise<U>, error?: (error: any) => Promise<U>, progress?: (progress: any) => void) => Promise<U>
>U : U
>success : (value: T) => Promise<U>
>value : T
>T : T
>Promise : Promise<T>
>U : U
>error : (error: any) => Promise<U>
>error : any
>Promise : Promise<T>
>U : U
>progress : (progress: any) => void
>progress : any
>Promise : Promise<T>
>U : U
    }
}
declare module Data {
>Data : typeof Data

    export interface IListItem<T> {
>IListItem : IListItem<T>
>T : T

        itemIndex: number;
>itemIndex : number

        key: any;
>key : any

        data: T;
>data : T
>T : T

        group: any;
>group : any

        isHeader: boolean;
>isHeader : boolean

        cached: boolean;
>cached : boolean

        isNonSourceData: boolean;
>isNonSourceData : boolean

        preventAugmentation: boolean;
>preventAugmentation : boolean
    }
    export interface IVirtualList<T> {
>IVirtualList : IVirtualList<T>
>T : T

        //removeIndices: WinJS.Promise<IListItem<T>[]>;
        removeIndices(indices: number[], options?: any): WinJS.Promise<IListItem<T>[]>;
>removeIndices : (indices: number[], options?: any) => WinJS.Promise<IListItem<T>[]>
>indices : number[]
>options : any
>WinJS : any
>Promise : WinJS.Promise<T>
>IListItem : IListItem<T>
>T : T
    }
    export class VirtualList<T> implements IVirtualList<T> {
>VirtualList : VirtualList<T>
>T : T
>IVirtualList : IVirtualList<T>
>T : T

        //removeIndices: WinJS.Promise<IListItem<T>[]>;
        public removeIndices(indices: number[], options?: any): WinJS.Promise<IListItem<T>[]>;
>removeIndices : (indices: number[], options?: any) => WinJS.Promise<IListItem<T>[]>
>indices : number[]
>options : any
>WinJS : any
>Promise : WinJS.Promise<T>
>IListItem : IListItem<T>
>T : T
    }
}

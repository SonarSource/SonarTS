=== tests/cases/conformance/types/objectTypeLiteral/indexSignatures/stringIndexingResults.ts ===
class C {
>C : Symbol(C, Decl(stringIndexingResults.ts, 0, 0))

    [x: string]: string;
>x : Symbol(x, Decl(stringIndexingResults.ts, 1, 5))

    y = '';
>y : Symbol(C.y, Decl(stringIndexingResults.ts, 1, 24))
}

var c: C;
>c : Symbol(c, Decl(stringIndexingResults.ts, 5, 3))
>C : Symbol(C, Decl(stringIndexingResults.ts, 0, 0))

var r1 = c['y']; 
>r1 : Symbol(r1, Decl(stringIndexingResults.ts, 6, 3))
>c : Symbol(c, Decl(stringIndexingResults.ts, 5, 3))
>'y' : Symbol(C.y, Decl(stringIndexingResults.ts, 1, 24))

var r2 = c['a'];
>r2 : Symbol(r2, Decl(stringIndexingResults.ts, 7, 3))
>c : Symbol(c, Decl(stringIndexingResults.ts, 5, 3))

var r3 = c[1]; 
>r3 : Symbol(r3, Decl(stringIndexingResults.ts, 8, 3))
>c : Symbol(c, Decl(stringIndexingResults.ts, 5, 3))

interface I {
>I : Symbol(I, Decl(stringIndexingResults.ts, 8, 14))

    [x: string]: string;
>x : Symbol(x, Decl(stringIndexingResults.ts, 11, 5))

    y: string;
>y : Symbol(I.y, Decl(stringIndexingResults.ts, 11, 24))
}

var i: I
>i : Symbol(i, Decl(stringIndexingResults.ts, 15, 3))
>I : Symbol(I, Decl(stringIndexingResults.ts, 8, 14))

var r4 = i['y'];
>r4 : Symbol(r4, Decl(stringIndexingResults.ts, 16, 3))
>i : Symbol(i, Decl(stringIndexingResults.ts, 15, 3))
>'y' : Symbol(I.y, Decl(stringIndexingResults.ts, 11, 24))

var r5 = i['a'];
>r5 : Symbol(r5, Decl(stringIndexingResults.ts, 17, 3))
>i : Symbol(i, Decl(stringIndexingResults.ts, 15, 3))

var r6 = i[1]; 
>r6 : Symbol(r6, Decl(stringIndexingResults.ts, 18, 3))
>i : Symbol(i, Decl(stringIndexingResults.ts, 15, 3))

var a: {
>a : Symbol(a, Decl(stringIndexingResults.ts, 20, 3))

    [x: string]: string;
>x : Symbol(x, Decl(stringIndexingResults.ts, 21, 5))

    y: string;
>y : Symbol(y, Decl(stringIndexingResults.ts, 21, 24))
}

var r7 = a['y'];
>r7 : Symbol(r7, Decl(stringIndexingResults.ts, 25, 3))
>a : Symbol(a, Decl(stringIndexingResults.ts, 20, 3))
>'y' : Symbol(y, Decl(stringIndexingResults.ts, 21, 24))

var r8 = a['a'];
>r8 : Symbol(r8, Decl(stringIndexingResults.ts, 26, 3))
>a : Symbol(a, Decl(stringIndexingResults.ts, 20, 3))

var r9 = a[1];
>r9 : Symbol(r9, Decl(stringIndexingResults.ts, 27, 3))
>a : Symbol(a, Decl(stringIndexingResults.ts, 20, 3))

var b: { [x: string]: string } = { y: '' }
>b : Symbol(b, Decl(stringIndexingResults.ts, 29, 3))
>x : Symbol(x, Decl(stringIndexingResults.ts, 29, 10))
>y : Symbol(y, Decl(stringIndexingResults.ts, 29, 34))

var r10 = b['y'];
>r10 : Symbol(r10, Decl(stringIndexingResults.ts, 31, 3))
>b : Symbol(b, Decl(stringIndexingResults.ts, 29, 3))

var r11 = b['a'];
>r11 : Symbol(r11, Decl(stringIndexingResults.ts, 32, 3))
>b : Symbol(b, Decl(stringIndexingResults.ts, 29, 3))

var r12 = b[1];
>r12 : Symbol(r12, Decl(stringIndexingResults.ts, 33, 3))
>b : Symbol(b, Decl(stringIndexingResults.ts, 29, 3))


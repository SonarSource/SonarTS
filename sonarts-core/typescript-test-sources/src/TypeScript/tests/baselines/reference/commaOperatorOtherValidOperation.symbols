=== tests/cases/conformance/expressions/commaOperator/commaOperatorOtherValidOperation.ts ===
//Comma operator in for loop
for (var i = 0, j = 10; i < j; i++, j--)
>i : Symbol(i, Decl(commaOperatorOtherValidOperation.ts, 1, 8))
>j : Symbol(j, Decl(commaOperatorOtherValidOperation.ts, 1, 15))
>i : Symbol(i, Decl(commaOperatorOtherValidOperation.ts, 1, 8))
>j : Symbol(j, Decl(commaOperatorOtherValidOperation.ts, 1, 15))
>i : Symbol(i, Decl(commaOperatorOtherValidOperation.ts, 1, 8))
>j : Symbol(j, Decl(commaOperatorOtherValidOperation.ts, 1, 15))
{
}

//Comma operator in fuction arguments and return
function foo(x: number, y: string)
>foo : Symbol(foo, Decl(commaOperatorOtherValidOperation.ts, 3, 1))
>x : Symbol(x, Decl(commaOperatorOtherValidOperation.ts, 6, 13))
>y : Symbol(y, Decl(commaOperatorOtherValidOperation.ts, 6, 23))
{
    return x, y;
>x : Symbol(x, Decl(commaOperatorOtherValidOperation.ts, 6, 13))
>y : Symbol(y, Decl(commaOperatorOtherValidOperation.ts, 6, 23))
}
var resultIsString = foo(1, "123");
>resultIsString : Symbol(resultIsString, Decl(commaOperatorOtherValidOperation.ts, 10, 3))
>foo : Symbol(foo, Decl(commaOperatorOtherValidOperation.ts, 3, 1))

//TypeParameters
function foo1<T1, T2>()
>foo1 : Symbol(foo1, Decl(commaOperatorOtherValidOperation.ts, 10, 35))
>T1 : Symbol(T1, Decl(commaOperatorOtherValidOperation.ts, 13, 14))
>T2 : Symbol(T2, Decl(commaOperatorOtherValidOperation.ts, 13, 17))
{
    var x: T1;
>x : Symbol(x, Decl(commaOperatorOtherValidOperation.ts, 15, 7))
>T1 : Symbol(T1, Decl(commaOperatorOtherValidOperation.ts, 13, 14))

    var y: T2;
>y : Symbol(y, Decl(commaOperatorOtherValidOperation.ts, 16, 7))
>T2 : Symbol(T2, Decl(commaOperatorOtherValidOperation.ts, 13, 17))

    x, y;
>x : Symbol(x, Decl(commaOperatorOtherValidOperation.ts, 15, 7))
>y : Symbol(y, Decl(commaOperatorOtherValidOperation.ts, 16, 7))

    var resultIsT1 = (y, x);
>resultIsT1 : Symbol(resultIsT1, Decl(commaOperatorOtherValidOperation.ts, 18, 7))
>y : Symbol(y, Decl(commaOperatorOtherValidOperation.ts, 16, 7))
>x : Symbol(x, Decl(commaOperatorOtherValidOperation.ts, 15, 7))
}


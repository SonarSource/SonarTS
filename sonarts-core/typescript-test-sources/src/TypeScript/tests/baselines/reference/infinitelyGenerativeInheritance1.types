=== tests/cases/compiler/infinitelyGenerativeInheritance1.ts ===
interface Stack<T> {
>Stack : Stack<T>
>T : T

      pop(): T
>pop : () => T
>T : T

      zip<S>(a: Stack<S>): Stack<{ x: T; y: S }>
>zip : <S>(a: Stack<S>) => Stack<{ x: T; y: S; }>
>S : S
>a : Stack<S>
>Stack : Stack<T>
>S : S
>Stack : Stack<T>
>x : T
>T : T
>y : S
>S : S
}

interface MyStack<T> extends Stack<T> {
>MyStack : MyStack<T>
>T : T
>Stack : Stack<T>
>T : T

      zip<S>(a: Stack<S>): Stack<{ x: T; y: S }>
>zip : <S>(a: Stack<S>) => Stack<{ x: T; y: S; }>
>S : S
>a : Stack<S>
>Stack : Stack<T>
>S : S
>Stack : Stack<T>
>x : T
>T : T
>y : S
>S : S
}


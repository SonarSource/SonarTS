=== tests/cases/compiler/augmentedTypesModules4.ts ===
// module then enum
// should be errors
module m4 { }
>m4 : Symbol(m4, Decl(augmentedTypesModules4.ts, 0, 0), Decl(augmentedTypesModules4.ts, 2, 13))

enum m4 { }
>m4 : Symbol(m4, Decl(augmentedTypesModules4.ts, 0, 0), Decl(augmentedTypesModules4.ts, 2, 13))

module m4a { var y = 2; }
>m4a : Symbol(m4a, Decl(augmentedTypesModules4.ts, 3, 11), Decl(augmentedTypesModules4.ts, 5, 25))
>y : Symbol(y, Decl(augmentedTypesModules4.ts, 5, 16))

enum m4a { One }
>m4a : Symbol(m4a, Decl(augmentedTypesModules4.ts, 3, 11), Decl(augmentedTypesModules4.ts, 5, 25))
>One : Symbol(m4a.One, Decl(augmentedTypesModules4.ts, 6, 10))

module m4b { export var y = 2; }
>m4b : Symbol(m4b, Decl(augmentedTypesModules4.ts, 6, 16), Decl(augmentedTypesModules4.ts, 8, 32))
>y : Symbol(y, Decl(augmentedTypesModules4.ts, 8, 23))

enum m4b { One }
>m4b : Symbol(m4b, Decl(augmentedTypesModules4.ts, 6, 16), Decl(augmentedTypesModules4.ts, 8, 32))
>One : Symbol(m4b.One, Decl(augmentedTypesModules4.ts, 9, 10))

module m4c { interface I { foo(): void } }
>m4c : Symbol(m4c, Decl(augmentedTypesModules4.ts, 9, 16), Decl(augmentedTypesModules4.ts, 11, 42))
>I : Symbol(I, Decl(augmentedTypesModules4.ts, 11, 12))
>foo : Symbol(I.foo, Decl(augmentedTypesModules4.ts, 11, 26))

enum m4c { One }
>m4c : Symbol(m4c, Decl(augmentedTypesModules4.ts, 9, 16), Decl(augmentedTypesModules4.ts, 11, 42))
>One : Symbol(m4c.One, Decl(augmentedTypesModules4.ts, 12, 10))

module m4d { class C { foo() { } } }
>m4d : Symbol(m4d, Decl(augmentedTypesModules4.ts, 12, 16), Decl(augmentedTypesModules4.ts, 14, 36))
>C : Symbol(C, Decl(augmentedTypesModules4.ts, 14, 12))
>foo : Symbol(C.foo, Decl(augmentedTypesModules4.ts, 14, 22))

enum m4d { One }
>m4d : Symbol(m4d, Decl(augmentedTypesModules4.ts, 12, 16), Decl(augmentedTypesModules4.ts, 14, 36))
>One : Symbol(m4d.One, Decl(augmentedTypesModules4.ts, 15, 10))

//// module then module

module m5 { export var y = 2; }
>m5 : Symbol(m5, Decl(augmentedTypesModules4.ts, 15, 16), Decl(augmentedTypesModules4.ts, 19, 31))
>y : Symbol(y, Decl(augmentedTypesModules4.ts, 19, 22))

module m5 { export interface I { foo(): void } } // should already be reasonably well covered
>m5 : Symbol(m5, Decl(augmentedTypesModules4.ts, 15, 16), Decl(augmentedTypesModules4.ts, 19, 31))
>I : Symbol(I, Decl(augmentedTypesModules4.ts, 20, 11))
>foo : Symbol(I.foo, Decl(augmentedTypesModules4.ts, 20, 32))


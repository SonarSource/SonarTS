=== tests/cases/conformance/types/members/objectTypeHidingMembersOfObject.ts ===
// all of these valueOf calls should return the type shown in the overriding signatures here

class C {
>C : Symbol(C, Decl(objectTypeHidingMembersOfObject.ts, 0, 0))

    valueOf() { }
>valueOf : Symbol(C.valueOf, Decl(objectTypeHidingMembersOfObject.ts, 2, 9))
}

var c: C;
>c : Symbol(c, Decl(objectTypeHidingMembersOfObject.ts, 6, 3))
>C : Symbol(C, Decl(objectTypeHidingMembersOfObject.ts, 0, 0))

var r1: void = c.valueOf();
>r1 : Symbol(r1, Decl(objectTypeHidingMembersOfObject.ts, 7, 3))
>c.valueOf : Symbol(C.valueOf, Decl(objectTypeHidingMembersOfObject.ts, 2, 9))
>c : Symbol(c, Decl(objectTypeHidingMembersOfObject.ts, 6, 3))
>valueOf : Symbol(C.valueOf, Decl(objectTypeHidingMembersOfObject.ts, 2, 9))

interface I {
>I : Symbol(I, Decl(objectTypeHidingMembersOfObject.ts, 7, 27))

    valueOf(): void;
>valueOf : Symbol(I.valueOf, Decl(objectTypeHidingMembersOfObject.ts, 9, 13))
}

var i: I;
>i : Symbol(i, Decl(objectTypeHidingMembersOfObject.ts, 13, 3))
>I : Symbol(I, Decl(objectTypeHidingMembersOfObject.ts, 7, 27))

var r2: void = i.valueOf();
>r2 : Symbol(r2, Decl(objectTypeHidingMembersOfObject.ts, 14, 3))
>i.valueOf : Symbol(I.valueOf, Decl(objectTypeHidingMembersOfObject.ts, 9, 13))
>i : Symbol(i, Decl(objectTypeHidingMembersOfObject.ts, 13, 3))
>valueOf : Symbol(I.valueOf, Decl(objectTypeHidingMembersOfObject.ts, 9, 13))

var a = {
>a : Symbol(a, Decl(objectTypeHidingMembersOfObject.ts, 16, 3))

    valueOf: () => { }
>valueOf : Symbol(valueOf, Decl(objectTypeHidingMembersOfObject.ts, 16, 9))
}

var r3: void = a.valueOf();
>r3 : Symbol(r3, Decl(objectTypeHidingMembersOfObject.ts, 20, 3))
>a.valueOf : Symbol(valueOf, Decl(objectTypeHidingMembersOfObject.ts, 16, 9))
>a : Symbol(a, Decl(objectTypeHidingMembersOfObject.ts, 16, 3))
>valueOf : Symbol(valueOf, Decl(objectTypeHidingMembersOfObject.ts, 16, 9))

var b: {
>b : Symbol(b, Decl(objectTypeHidingMembersOfObject.ts, 22, 3))

    valueOf(): void;
>valueOf : Symbol(valueOf, Decl(objectTypeHidingMembersOfObject.ts, 22, 8))
}

var r4: void = b.valueOf();
>r4 : Symbol(r4, Decl(objectTypeHidingMembersOfObject.ts, 26, 3))
>b.valueOf : Symbol(valueOf, Decl(objectTypeHidingMembersOfObject.ts, 22, 8))
>b : Symbol(b, Decl(objectTypeHidingMembersOfObject.ts, 22, 3))
>valueOf : Symbol(valueOf, Decl(objectTypeHidingMembersOfObject.ts, 22, 8))


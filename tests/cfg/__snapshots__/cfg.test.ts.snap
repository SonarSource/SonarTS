// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`assignment 1`] = `
Object {
  "edges": Array [
    Object {
      "arrows": "to",
      "from": 0,
      "id": "0--1",
      "to": -1,
    },
  ],
  "nodes": Array [
    Object {
      "id": 0,
      "label": "0
START
x
'something'",
      "physics": false,
    },
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;

exports[`call expression 1`] = `
Object {
  "edges": Array [
    Object {
      "arrows": "to",
      "from": 0,
      "id": "0--1",
      "to": -1,
    },
  ],
  "nodes": Array [
    Object {
      "id": 0,
      "label": "0
START
a
a()",
      "physics": false,
    },
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;

exports[`call expression with parameters 1`] = `
Object {
  "edges": Array [
    Object {
      "arrows": "to",
      "from": 0,
      "id": "0--1",
      "to": -1,
    },
  ],
  "nodes": Array [
    Object {
      "id": 0,
      "label": "0
START
a
b
a(b)",
      "physics": false,
    },
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;

exports[`call expression with parameters 2`] = `
Object {
  "edges": Array [
    Object {
      "arrows": "to",
      "from": 0,
      "id": "0--1",
      "to": -1,
    },
  ],
  "nodes": Array [
    Object {
      "id": 0,
      "label": "0
START
a
b
c
a(b, c)",
      "physics": false,
    },
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;

exports[`conditional expression 1`] = `
Object {
  "edges": Array [
    Object {
      "arrows": "to",
      "from": 2,
      "id": "2-1",
      "to": 1,
    },
    Object {
      "arrows": "to",
      "from": 2,
      "id": "2-0",
      "to": 0,
    },
    Object {
      "arrows": "to",
      "from": 1,
      "id": "1--1",
      "to": -1,
    },
    Object {
      "arrows": "to",
      "from": 0,
      "id": "0--1",
      "to": -1,
    },
  ],
  "nodes": Array [
    Object {
      "id": 0,
      "label": "0
c",
      "physics": false,
    },
    Object {
      "id": 1,
      "label": "1
b",
      "physics": false,
    },
    Object {
      "id": 2,
      "label": "2
START
a",
      "physics": false,
    },
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;

exports[`empty block 1`] = `
Object {
  "edges": null,
  "nodes": Array [
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;

exports[`identifier expression 1`] = `
Object {
  "edges": Array [
    Object {
      "arrows": "to",
      "from": 0,
      "id": "0--1",
      "to": -1,
    },
  ],
  "nodes": Array [
    Object {
      "id": 0,
      "label": "0
START
a",
      "physics": false,
    },
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;

exports[`literals 1`] = `
Object {
  "edges": Array [
    Object {
      "arrows": "to",
      "from": 0,
      "id": "0--1",
      "to": -1,
    },
  ],
  "nodes": Array [
    Object {
      "id": 0,
      "label": "0
START
'literal'",
      "physics": false,
    },
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;

exports[`literals 2`] = `
Object {
  "edges": Array [
    Object {
      "arrows": "to",
      "from": 0,
      "id": "0--1",
      "to": -1,
    },
  ],
  "nodes": Array [
    Object {
      "id": 0,
      "label": "0
START
1",
      "physics": false,
    },
    Object {
      "id": -1,
      "label": "END",
      "physics": false,
    },
  ],
}
`;
